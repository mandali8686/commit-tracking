{
    "Row_1": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "support for angular-cli generators"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "support for angular-cli generators"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "angular-cli.json",
                    "diff": "+{\n+ \"project\": {\n+ \"version\": \"1.0.0-beta.24\",\n+ \"name\": \"angular2-webpack-advance-starter\"\n+ },\n+ \"apps\": [\n+ {\n+ \"root\": \"src\",\n+ \"outDir\": \"dist\",\n+ \"assets\": [\n+ \"assets\",\n+ \"favicon.ico\"\n+ ],\n+ \"index\": \"index.html\",\n+ \"main\": \"main.ts\",\n+ \"test\": \"test.ts\",\n+ \"tsconfig\": \"tsconfig.json\",\n+ \"prefix\": \"app\",\n+ \"mobile\": false,\n+ \"styles\": [\n+ \"styles.css\"\n+ ],\n+ \"scripts\": [],\n+ \"environments\": {\n+ \"source\": \"environments/environment.ts\",\n+ \"dev\": \"environments/environment.ts\",\n+ \"prod\": \"environments/environment.prod.ts\"\n+ }\n+ }\n+ ],\n+ \"addons\": [],\n+ \"packages\": [],\n+ \"e2e\": {\n+ \"protractor\": {\n+ \"config\": \"./protractor.conf.js\"\n+ }\n+ },\n+ \"test\": {\n+ \"karma\": {\n+ \"config\": \"./karma.conf.js\"\n+ }\n+ },\n+ \"defaults\": {\n+ \"styleExt\": \"scss\",\n+ \"prefixInterfaces\": false,\n+ \"inline\": {\n+ \"style\": false,\n+ \"template\": false\n+ },\n+ \"spec\": {\n+ \"class\": false,\n+ \"component\": true,\n+ \"directive\": true,\n+ \"module\": false,\n+ \"pipe\": true,\n+ \"service\": true\n+ }\n+ }\n+}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "package.json",
                    "new_path": "package.json",
                    "diff": "\"@types/source-map\": \"^0.5.0\",\n\"@types/uglify-js\": \"^2.0.27\",\n\"@types/webpack\": \"^2.0.0\",\n+ \"angular-cli\": \"1.0.0-beta.24\",\n\"angular-router-loader\": \"^0.4.0\",\n\"angular2-template-loader\": \"^0.6.0\",\n\"assets-webpack-plugin\": \"^3.4.0\",\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "angular-cli.json",
                    "diff": "+{\n+ \"project\": {\n+ \"version\": \"1.0.0-beta.24\",\n+ \"name\": \"angular2-webpack-advance-starter\"\n+ },\n+ \"apps\": [\n+ {\n+ \"root\": \"src\",\n+ \"outDir\": \"dist\",\n+ \"assets\": [\n+ \"assets\",\n+ \"favicon.ico\"\n+ ],\n+ \"index\": \"index.html\",\n+ \"main\": \"main.ts\",\n+ \"test\": \"test.ts\",\n+ \"tsconfig\": \"tsconfig.json\",\n+ \"prefix\": \"app\",\n+ \"mobile\": false,\n+ \"styles\": [\n+ \"styles.css\"\n+ ],\n+ \"scripts\": [],\n+ \"environments\": {\n+ \"source\": \"environments/environment.ts\",\n+ \"dev\": \"environments/environment.ts\",\n+ \"prod\": \"environments/environment.prod.ts\"\n+ }\n+ }\n+ ],\n+ \"addons\": [],\n+ \"packages\": [],\n+ \"e2e\": {\n+ \"protractor\": {\n+ \"config\": \"./protractor.conf.js\"\n+ }\n+ },\n+ \"test\": {\n+ \"karma\": {\n+ \"config\": \"./karma.conf.js\"\n+ }\n+ },\n+ \"defaults\": {\n+ \"styleExt\": \"scss\",\n+ \"prefixInterfaces\": false,\n+ \"inline\": {\n+ \"style\": false,\n+ \"template\": false\n+ },\n+ \"spec\": {\n+ \"class\": false,\n+ \"component\": true,\n+ \"directive\": true,\n+ \"module\": false,\n+ \"pipe\": true,\n+ \"service\": true\n+ }\n+ }\n+}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "package.json",
                    "new_path": "package.json",
                    "diff": "\"@types/source-map\": \"^0.5.0\",\n\"@types/uglify-js\": \"^2.0.27\",\n\"@types/webpack\": \"^2.0.0\",\n+ \"angular-cli\": \"1.0.0-beta.24\",\n\"angular-router-loader\": \"^0.4.0\",\n\"angular2-template-loader\": \"^0.6.0\",\n\"assets-webpack-plugin\": \"^3.4.0\",\n"
                }
            ]
        }
    },
    "Row_2": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "fix ng-router-loader for aot nested lazy loaded modules"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "fix ng-router-loader for aot nested lazy loaded modules"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "config/webpack.common.js",
                    "new_path": "config/webpack.common.js",
                    "diff": "@@ -104,7 +104,14 @@ module.exports = function (options) {\n'@angularclass/hmr-loader?pretty=' + !isProd + '&prod=' + isProd,\n'awesome-typescript-loader?{configFileName: \"tsconfig.webpack.json\"}',\n'angular2-template-loader',\n- 'angular-router-loader?loader=system&genDir=compiled/src/app&aot=' + AOT\n+ {\n+ loader: 'ng-router-loader',\n+ options: {\n+ loader: 'async-system',\n+ genDir: 'compiled',\n+ aot: AOT\n+ }\n+ }\n],\nexclude: [/\\.(spec|e2e)\\.ts$/]\n},\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "package.json",
                    "new_path": "package.json",
                    "diff": "\"@types/uglify-js\": \"^2.0.27\",\n\"@types/webpack\": \"^2.0.0\",\n\"angular-cli\": \"1.0.0-beta.24\",\n- \"angular-router-loader\": \"^0.4.0\",\n\"angular2-template-loader\": \"^0.6.0\",\n\"assets-webpack-plugin\": \"^3.4.0\",\n\"awesome-typescript-loader\": \"~3.0.0-beta.17\",\n\"karma-remap-coverage\": \"^0.1.4\",\n\"karma-sourcemap-loader\": \"^0.3.7\",\n\"karma-webpack\": \"1.8.1\",\n+ \"ng-router-loader\": \"^1.0.0\",\n\"ngc-webpack\": \"^1.0.2\",\n\"ngrx-store-freeze\": \"0.1.6\",\n\"node-sass\": \"^4.1.1\",\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "config/webpack.common.js",
                    "new_path": "config/webpack.common.js",
                    "diff": "@@ -104,7 +104,14 @@ module.exports = function (options) {\n'@angularclass/hmr-loader?pretty=' + !isProd + '&prod=' + isProd,\n'awesome-typescript-loader?{configFileName: \"tsconfig.webpack.json\"}',\n'angular2-template-loader',\n- 'angular-router-loader?loader=system&genDir=compiled/src/app&aot=' + AOT\n+ {\n+ loader: 'ng-router-loader',\n+ options: {\n+ loader: 'async-system',\n+ genDir: 'compiled',\n+ aot: AOT\n+ }\n+ }\n],\nexclude: [/\\.(spec|e2e)\\.ts$/]\n},\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "package.json",
                    "new_path": "package.json",
                    "diff": "\"@types/uglify-js\": \"^2.0.27\",\n\"@types/webpack\": \"^2.0.0\",\n\"angular-cli\": \"1.0.0-beta.24\",\n- \"angular-router-loader\": \"^0.4.0\",\n\"angular2-template-loader\": \"^0.6.0\",\n\"assets-webpack-plugin\": \"^3.4.0\",\n\"awesome-typescript-loader\": \"~3.0.0-beta.17\",\n\"karma-remap-coverage\": \"^0.1.4\",\n\"karma-sourcemap-loader\": \"^0.3.7\",\n\"karma-webpack\": \"1.8.1\",\n+ \"ng-router-loader\": \"^1.0.0\",\n\"ngc-webpack\": \"^1.0.2\",\n\"ngrx-store-freeze\": \"0.1.6\",\n\"node-sass\": \"^4.1.1\",\n"
                }
            ]
        }
    },
    "Row_3": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "fix ng-router-loader"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "fix ng-router-loader"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "package.json",
                    "new_path": "package.json",
                    "diff": "\"karma-remap-coverage\": \"^0.1.4\",\n\"karma-sourcemap-loader\": \"^0.3.7\",\n\"karma-webpack\": \"1.8.1\",\n- \"ng-router-loader\": \"^1.0.0\",\n+ \"ng-router-loader\": \"^1.0.1\",\n\"ngc-webpack\": \"^1.0.2\",\n\"ngrx-store-freeze\": \"0.1.6\",\n\"node-sass\": \"^4.1.1\",\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "package.json",
                    "new_path": "package.json",
                    "diff": "\"karma-remap-coverage\": \"^0.1.4\",\n\"karma-sourcemap-loader\": \"^0.3.7\",\n\"karma-webpack\": \"1.8.1\",\n- \"ng-router-loader\": \"^1.0.0\",\n+ \"ng-router-loader\": \"^1.0.1\",\n\"ngc-webpack\": \"^1.0.2\",\n\"ngrx-store-freeze\": \"0.1.6\",\n\"node-sass\": \"^4.1.1\",\n"
                }
            ]
        }
    },
    "Row_4": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "fix ng-router-loader version"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "fix ng-router-loader version"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "package.json",
                    "new_path": "package.json",
                    "diff": "\"karma-remap-coverage\": \"^0.1.4\",\n\"karma-sourcemap-loader\": \"^0.3.7\",\n\"karma-webpack\": \"1.8.1\",\n- \"ng-router-loader\": \"^1.0.1\",\n+ \"ng-router-loader\": \"^1.0.2\",\n\"ngc-webpack\": \"^1.0.2\",\n\"ngrx-store-freeze\": \"0.1.6\",\n\"node-sass\": \"^4.1.1\",\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "package.json",
                    "new_path": "package.json",
                    "diff": "\"karma-remap-coverage\": \"^0.1.4\",\n\"karma-sourcemap-loader\": \"^0.3.7\",\n\"karma-webpack\": \"1.8.1\",\n- \"ng-router-loader\": \"^1.0.1\",\n+ \"ng-router-loader\": \"^1.0.2\",\n\"ngc-webpack\": \"^1.0.2\",\n\"ngrx-store-freeze\": \"0.1.6\",\n\"node-sass\": \"^4.1.1\",\n"
                }
            ]
        }
    },
    "Row_5": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "fix(github-deploy): hash mode and 404.html fallback"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "fix(github-deploy): hash mode and 404.html fallback"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "TODO.md",
                    "new_path": "TODO.md",
                    "diff": "@@ -20,15 +20,13 @@ TODO\n## Bugs\n-- [ ] github-deploy not working properly\n-\n-### Before commit manual checks\n+## Before commit manual checks\n- [x] npm run ci\n- [x] npm start\n- [x] npm run docs\n-- [ ] npm run github-deploy:aot\n+- [x] npm run github-deploy:aot\n./nativescript\n- [ ] npm run start:ios\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "config/advance/helpers.js",
                    "new_path": "config/advance/helpers.js",
                    "diff": "* @author: @AngularClass\n*/\nvar path = require('path');\n-const HtmlWebpackPlugin = require('html-webpack-plugin');\n+const EVENT = process.env.npm_lifecycle_event || '';\n// Helper functions\nvar ROOT = path.resolve(__dirname, '../..');\n@@ -11,6 +11,10 @@ function hasProcessFlag(flag) {\nreturn process.argv.join('').indexOf(flag) > -1;\n}\n+function hasNpmFlag(flag) {\n+ return EVENT.includes(flag);\n+}\n+\nfunction isWebpackDevServer() {\nreturn process.argv[1] && !! (/webpack-dev-server$/.exec(process.argv[1]));\n}\n@@ -27,17 +31,28 @@ function checkNodeImport(context, request, cb) {\ncb();\n}\n-function removeHtmlWebpackPlugin(plugins) {\n+function removePlugins(plugins, test) {\nfor (var i = 0; i < plugins.length; i++) {\n- if (plugins[i] instanceof HtmlWebpackPlugin) {\n+ if (test.filter(function(t) { return plugins[i] instanceof t;}).length > 0) {\nplugins.splice(i, 1);\nreturn;\n}\n}\n}\n+function removeRules(rules, test) {\n+ for (var i = 0; i < rules.length; i++) {\n+ if (test.filter(function(t) { return t.toString() === rules[i].test.toString();}).length > 0) {\n+ rules.splice(i, 1);\n+ return;\n+ }\n+ }\n+}\n+\nexports.hasProcessFlag = hasProcessFlag;\n+exports.hasNpmFlag = hasNpmFlag;\nexports.isWebpackDevServer = isWebpackDevServer;\nexports.root = root;\nexports.checkNodeImport = checkNodeImport;\n-exports.removeHtmlWebpackPlugin = removeHtmlWebpackPlugin;\n+exports.removePlugins = removePlugins;\n+exports.removeRules = removeRules;\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "config/advance/webpack.desktop.build.renderer.js",
                    "new_path": "config/advance/webpack.desktop.build.renderer.js",
                    "diff": "@@ -13,14 +13,16 @@ const customConfig = require('../custom/webpack.web.prod.js');\n/**\n* Webpack Constants\n*/\n-const HtmlWebpackPlugin = require('html-webpack-plugin');\nconst ENV = process.env.ENV = process.env.NODE_ENV = 'production';\n+const AOT = helpers.hasNpmFlag('aot');\n/**\n* Webpack Plugins\n*/\nconst NormalModuleReplacementPlugin = require('webpack/lib/NormalModuleReplacementPlugin');\nconst DefinePlugin = require('webpack/lib/DefinePlugin');\n+const HtmlWebpackPlugin = require('html-webpack-plugin');\n+const ngcWebpack = require('ngc-webpack');\nconst METADATA = Object.assign({\n@@ -29,8 +31,11 @@ const METADATA = Object.assign({\n}, customConfig.metadata);\nlet webpackConfig = webpackMerge.smart(simpleWebProdConfig({env: ENV}), commonAdvanceConfig({env: ENV}));\n-// remove the instance of HtmlWebpackPlugin.\n-helpers.removeHtmlWebpackPlugin(webpackConfig.plugins);\n+\n+// remove the plugins to be overwriten.\n+helpers.removePlugins(webpackConfig.plugins, [HtmlWebpackPlugin, ngcWebpack.NgcWebpackPlugin]);\n+// remove the rules to be overwriten.\n+helpers.removeRules(webpackConfig.module.rules, [/\\.ts$/]);\n/**\n* Webpack configuration\n@@ -39,12 +44,47 @@ helpers.removeHtmlWebpackPlugin(webpackConfig.plugins);\n*/\nmodule.exports = function(options) {\nreturn webpackMerge.smart(webpackConfig, {\n+ module: {\n+ rules: [\n+ /*\n+ * Typescript loader support for .ts and Angular 2 async routes via .async.ts\n+ * Replace templateUrl and stylesUrl with require()\n+ *\n+ * See: https://github.com/s-panferov/awesome-typescript-loader\n+ * See: https://github.com/TheLarkInn/angular2-template-loader\n+ */\n+ {\n+ test: /\\.ts$/,\n+ use: [\n+ '@angularclass/hmr-loader?pretty=' + !isProd + '&prod=' + isProd,\n+ 'awesome-typescript-loader?{configFileName: \"tsconfig.desktop.json\"}',\n+ 'angular2-template-loader',\n+ {\n+ loader: 'ng-router-loader',\n+ options: {\n+ loader: 'async-require',\n+ genDir: 'compiled',\n+ aot: AOT\n+ }\n+ }\n+ ],\n+ exclude: [/\\.(spec|e2e)\\.ts$/]\n+ },\n+ ]\n+ },\n+\nplugins: [\nnew NormalModuleReplacementPlugin(\n/routerModule/,\nhelpers.root('src/app/app.routerModule.desktop.ts')\n),\n+ new ngcWebpack.NgcWebpackPlugin({\n+ disabled: !AOT,\n+ tsConfig: helpers.root('tsconfig.desktop.json'),\n+ resourceOverride: helpers.root('config/resource-override.js')\n+ }),\n+\nnew DefinePlugin({\n'BASE_URL': METADATA.baseUrl,\n'TARGET_DESKTOP': true,\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "config/advance/webpack.github-deploy.js",
                    "new_path": "config/advance/webpack.github-deploy.js",
                    "diff": "@@ -6,12 +6,13 @@ const path = require('path');\nconst helpers = require('./helpers');\nconst ghDeploy = require('../github-deploy');\nconst webpackMerge = require('webpack-merge'); // used to merge webpack configs\n-const ghpages = require('gh-pages');\n/**\n* Webpack Plugins\n*/\n+const NormalModuleReplacementPlugin = require('webpack/lib/NormalModuleReplacementPlugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\n+const ngcWebpack = require('ngc-webpack');\n/**\n* Webpack Constants\n@@ -19,6 +20,7 @@ const HtmlWebpackPlugin = require('html-webpack-plugin');\nconst GIT_REMOTE_NAME = 'origin';\nconst COMMIT_MESSAGE = 'Updates';\nconst GH_REPO_NAME = ghDeploy.getRepoName(GIT_REMOTE_NAME);\n+const AOT = helpers.hasNpmFlag('aot');\nmodule.exports = function (options) {\nconst webpackConfigFactory = ghDeploy.getWebpackConfigModule(options); // the settings that are common to prod and dev\n@@ -28,8 +30,16 @@ module.exports = function (options) {\nisDevServer: helpers.isWebpackDevServer()\n}, require('../custom/webpack.common.js').metadata);\n- // remove the instance of HtmlWebpackPlugin.\n- helpers.removeHtmlWebpackPlugin(webpackConfig.plugins);\n+ // remove the plugins to be overwriten.\n+ helpers.removePlugins(webpackConfig.plugins, [HtmlWebpackPlugin, ngcWebpack.NgcWebpackPlugin]);\n+ // remove the rules to be overwriten.\n+ helpers.removeRules(webpackConfig.module.rules, [/\\.ts$/, /\\.html$/]);\n+\n+ for (var i = 0; i < webpackConfig.module.rules.length; i++) {\n+ if (webpackConfig.module.rules[i].test.toString() === /\\.html$/.toString()) {\n+ webpackConfig.module.rules[i].exclude.push(helpers.root('src/assets/404.html'));\n+ }\n+ }\nreturn webpackMerge(webpackConfig, {\noutput: {\n@@ -49,7 +59,41 @@ module.exports = function (options) {\npublicPath: '/' + GH_REPO_NAME + '/' + ghDeploy.safeUrl(webpackConfig.output.publicPath)\n},\n+ module: {\n+ rules: [\n+ /*\n+ * Typescript loader support for .ts and Angular 2 async routes via .async.ts\n+ * Replace templateUrl and stylesUrl with require()\n+ *\n+ * See: https://github.com/s-panferov/awesome-typescript-loader\n+ * See: https://github.com/TheLarkInn/angular2-template-loader\n+ */\n+ {\n+ test: /\\.ts$/,\n+ use: [\n+ '@angularclass/hmr-loader?pretty=' + !isProd + '&prod=' + isProd,\n+ 'awesome-typescript-loader?{configFileName: \"tsconfig.desktop.json\"}',\n+ 'angular2-template-loader',\n+ {\n+ loader: 'ng-router-loader',\n+ options: {\n+ loader: 'async-require',\n+ genDir: 'compiled',\n+ aot: AOT\n+ }\n+ }\n+ ],\n+ exclude: [/\\.(spec|e2e)\\.ts$/]\n+ }\n+ ]\n+ },\n+\nplugins: [\n+ new NormalModuleReplacementPlugin(\n+ /routerModule/,\n+ helpers.root('src/app/app.routerModule.desktop.ts')\n+ ),\n+\nnew HtmlWebpackPlugin({\ntemplate: 'src/index.html',\ntitle: METADATA.title,\n@@ -58,6 +102,22 @@ module.exports = function (options) {\ninject: 'head'\n}),\n+ new HtmlWebpackPlugin({\n+ template: 'src/assets/404.html',\n+ filename: '404.html',\n+ title: METADATA.title,\n+ metadata: {\n+ GH_REPO_NAME: GH_REPO_NAME || ''\n+ },\n+ inject: false\n+ }),\n+\n+ new ngcWebpack.NgcWebpackPlugin({\n+ disabled: !AOT,\n+ tsConfig: helpers.root('tsconfig.desktop.json'),\n+ resourceOverride: helpers.root('config/resource-override.js')\n+ }),\n+\nfunction() {\nthis.plugin('done', function(stats) {\nif (stats.compilation.errors.length > 0) return;\n@@ -81,7 +141,7 @@ module.exports = function (options) {\n// this is the fix for now.\nfs.writeFileSync(path.join(webpackConfig.output.path, '.nojekyll'), '');\n- ghpages.publish(webpackConfig.output.path, options, function(err) {\n+ require('gh-pages').publish(webpackConfig.output.path, options, function(err) {\nif (err) {\nconsole.log('GitHub deployment done. STATUS: ERROR.');\nthrow err;\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "config/advance/webpack.web.dev.js",
                    "new_path": "config/advance/webpack.web.dev.js",
                    "diff": "const helpers = require('./helpers');\nconst webpackMerge = require('webpack-merge'); // used to merge webpack configs\n+const HtmlWebpackPlugin = require('html-webpack-plugin');\nconst commonAdvanceConfig = require('./webpack.common.web.js');\nconst simpleWebDevConfig = require('../webpack.dev.js');\n@@ -16,7 +17,7 @@ const ENV = process.env.ENV = process.env.NODE_ENV = 'development';\nlet webpackConfig = simpleWebDevConfig({env: ENV});\n// remove the instance of HtmlWebpackPlugin.\n-helpers.removeHtmlWebpackPlugin(webpackConfig.plugins);\n+helpers.removePlugins(webpackConfig.plugins, [HtmlWebpackPlugin]);\n/**\n* Webpack configuration\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "config/advance/webpack.web.prod.js",
                    "new_path": "config/advance/webpack.web.prod.js",
                    "diff": "const helpers = require('./helpers');\nconst webpackMerge = require('webpack-merge'); // used to merge webpack configs\n+const HtmlWebpackPlugin = require('html-webpack-plugin');\nconst commonAdvanceConfig = require('./webpack.common.web.js');\nconst simpleWebProdConfig = require('../webpack.prod.js');\n@@ -16,7 +17,7 @@ const ENV = process.env.ENV = process.env.NODE_ENV = 'production';\nlet webpackConfig = simpleWebProdConfig({env: ENV});\n// remove the instance of HtmlWebpackPlugin.\n-helpers.removeHtmlWebpackPlugin(webpackConfig.plugins);\n+helpers.removePlugins(webpackConfig.plugins, [HtmlWebpackPlugin]);\n/**\n* Webpack configuration\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "config/advance/webpack.web.test.js",
                    "new_path": "config/advance/webpack.web.test.js",
                    "diff": "@@ -6,6 +6,7 @@ const helpers = require('./helpers');\nconst webpackMerge = require('webpack-merge'); // used to merge webpack configs\nconst HtmlElementsPlugin = require('../html-elements-plugin');\n+const HtmlWebpackPlugin = require('html-webpack-plugin');\nconst ScriptExtHtmlWebpackPlugin = require('script-ext-html-webpack-plugin');\nconst commonAdvanceConfig = require('./webpack.common.web.js');\n@@ -19,7 +20,7 @@ const ENV = process.env.ENV = process.env.NODE_ENV = 'test';\nlet webpackConfig = simpleWebTestConfig({env: ENV});\n// remove the instance of HtmlWebpackPlugin.\n-helpers.removeHtmlWebpackPlugin(webpackConfig.plugins);\n+helpers.removePlugins(webpackConfig.plugins, [HtmlWebpackPlugin]);\n/**\n* Webpack configuration\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/assets/404.html",
                    "diff": "+<!DOCTYPE html>\n+<html>\n+ <head>\n+ <meta charset=\"utf-8\">\n+ <title><%= htmlWebpackPlugin.options.title %></title>\n+ <script type=\"text/javascript\">\n+ var pathPrefix = '<%= htmlWebpackPlugin.options.metadata.GH_REPO_NAME %>';\n+\n+ window.location.replace(window.location.href.replace(\n+ window.location.host + '/' + pathPrefix,\n+ window.location.host + '/' + pathPrefix + (pathPrefix ? '/#' : '#/')\n+ ));\n+ </script>\n+ </head>\n+ <body>\n+ </body>\n+</html>\n\\ No newline at end of file\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "TODO.md",
                    "new_path": "TODO.md",
                    "diff": "@@ -20,15 +20,13 @@ TODO\n## Bugs\n-- [ ] github-deploy not working properly\n-\n-### Before commit manual checks\n+## Before commit manual checks\n- [x] npm run ci\n- [x] npm start\n- [x] npm run docs\n-- [ ] npm run github-deploy:aot\n+- [x] npm run github-deploy:aot\n./nativescript\n- [ ] npm run start:ios\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "config/advance/helpers.js",
                    "new_path": "config/advance/helpers.js",
                    "diff": "* @author: @AngularClass\n*/\nvar path = require('path');\n-const HtmlWebpackPlugin = require('html-webpack-plugin');\n+const EVENT = process.env.npm_lifecycle_event || '';\n// Helper functions\nvar ROOT = path.resolve(__dirname, '../..');\n@@ -11,6 +11,10 @@ function hasProcessFlag(flag) {\nreturn process.argv.join('').indexOf(flag) > -1;\n}\n+function hasNpmFlag(flag) {\n+ return EVENT.includes(flag);\n+}\n+\nfunction isWebpackDevServer() {\nreturn process.argv[1] && !! (/webpack-dev-server$/.exec(process.argv[1]));\n}\n@@ -27,17 +31,28 @@ function checkNodeImport(context, request, cb) {\ncb();\n}\n-function removeHtmlWebpackPlugin(plugins) {\n+function removePlugins(plugins, test) {\nfor (var i = 0; i < plugins.length; i++) {\n- if (plugins[i] instanceof HtmlWebpackPlugin) {\n+ if (test.filter(function(t) { return plugins[i] instanceof t;}).length > 0) {\nplugins.splice(i, 1);\nreturn;\n}\n}\n}\n+function removeRules(rules, test) {\n+ for (var i = 0; i < rules.length; i++) {\n+ if (test.filter(function(t) { return t.toString() === rules[i].test.toString();}).length > 0) {\n+ rules.splice(i, 1);\n+ return;\n+ }\n+ }\n+}\n+\nexports.hasProcessFlag = hasProcessFlag;\n+exports.hasNpmFlag = hasNpmFlag;\nexports.isWebpackDevServer = isWebpackDevServer;\nexports.root = root;\nexports.checkNodeImport = checkNodeImport;\n-exports.removeHtmlWebpackPlugin = removeHtmlWebpackPlugin;\n+exports.removePlugins = removePlugins;\n+exports.removeRules = removeRules;\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "config/advance/webpack.desktop.build.renderer.js",
                    "new_path": "config/advance/webpack.desktop.build.renderer.js",
                    "diff": "@@ -13,14 +13,16 @@ const customConfig = require('../custom/webpack.web.prod.js');\n/**\n* Webpack Constants\n*/\n-const HtmlWebpackPlugin = require('html-webpack-plugin');\nconst ENV = process.env.ENV = process.env.NODE_ENV = 'production';\n+const AOT = helpers.hasNpmFlag('aot');\n/**\n* Webpack Plugins\n*/\nconst NormalModuleReplacementPlugin = require('webpack/lib/NormalModuleReplacementPlugin');\nconst DefinePlugin = require('webpack/lib/DefinePlugin');\n+const HtmlWebpackPlugin = require('html-webpack-plugin');\n+const ngcWebpack = require('ngc-webpack');\nconst METADATA = Object.assign({\n@@ -29,8 +31,11 @@ const METADATA = Object.assign({\n}, customConfig.metadata);\nlet webpackConfig = webpackMerge.smart(simpleWebProdConfig({env: ENV}), commonAdvanceConfig({env: ENV}));\n-// remove the instance of HtmlWebpackPlugin.\n-helpers.removeHtmlWebpackPlugin(webpackConfig.plugins);\n+\n+// remove the plugins to be overwriten.\n+helpers.removePlugins(webpackConfig.plugins, [HtmlWebpackPlugin, ngcWebpack.NgcWebpackPlugin]);\n+// remove the rules to be overwriten.\n+helpers.removeRules(webpackConfig.module.rules, [/\\.ts$/]);\n/**\n* Webpack configuration\n@@ -39,12 +44,47 @@ helpers.removeHtmlWebpackPlugin(webpackConfig.plugins);\n*/\nmodule.exports = function(options) {\nreturn webpackMerge.smart(webpackConfig, {\n+ module: {\n+ rules: [\n+ /*\n+ * Typescript loader support for .ts and Angular 2 async routes via .async.ts\n+ * Replace templateUrl and stylesUrl with require()\n+ *\n+ * See: https://github.com/s-panferov/awesome-typescript-loader\n+ * See: https://github.com/TheLarkInn/angular2-template-loader\n+ */\n+ {\n+ test: /\\.ts$/,\n+ use: [\n+ '@angularclass/hmr-loader?pretty=' + !isProd + '&prod=' + isProd,\n+ 'awesome-typescript-loader?{configFileName: \"tsconfig.desktop.json\"}',\n+ 'angular2-template-loader',\n+ {\n+ loader: 'ng-router-loader',\n+ options: {\n+ loader: 'async-require',\n+ genDir: 'compiled',\n+ aot: AOT\n+ }\n+ }\n+ ],\n+ exclude: [/\\.(spec|e2e)\\.ts$/]\n+ },\n+ ]\n+ },\n+\nplugins: [\nnew NormalModuleReplacementPlugin(\n/routerModule/,\nhelpers.root('src/app/app.routerModule.desktop.ts')\n),\n+ new ngcWebpack.NgcWebpackPlugin({\n+ disabled: !AOT,\n+ tsConfig: helpers.root('tsconfig.desktop.json'),\n+ resourceOverride: helpers.root('config/resource-override.js')\n+ }),\n+\nnew DefinePlugin({\n'BASE_URL': METADATA.baseUrl,\n'TARGET_DESKTOP': true,\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "config/advance/webpack.github-deploy.js",
                    "new_path": "config/advance/webpack.github-deploy.js",
                    "diff": "@@ -6,12 +6,13 @@ const path = require('path');\nconst helpers = require('./helpers');\nconst ghDeploy = require('../github-deploy');\nconst webpackMerge = require('webpack-merge'); // used to merge webpack configs\n-const ghpages = require('gh-pages');\n/**\n* Webpack Plugins\n*/\n+const NormalModuleReplacementPlugin = require('webpack/lib/NormalModuleReplacementPlugin');\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\n+const ngcWebpack = require('ngc-webpack');\n/**\n* Webpack Constants\n@@ -19,6 +20,7 @@ const HtmlWebpackPlugin = require('html-webpack-plugin');\nconst GIT_REMOTE_NAME = 'origin';\nconst COMMIT_MESSAGE = 'Updates';\nconst GH_REPO_NAME = ghDeploy.getRepoName(GIT_REMOTE_NAME);\n+const AOT = helpers.hasNpmFlag('aot');\nmodule.exports = function (options) {\nconst webpackConfigFactory = ghDeploy.getWebpackConfigModule(options); // the settings that are common to prod and dev\n@@ -28,8 +30,16 @@ module.exports = function (options) {\nisDevServer: helpers.isWebpackDevServer()\n}, require('../custom/webpack.common.js').metadata);\n- // remove the instance of HtmlWebpackPlugin.\n- helpers.removeHtmlWebpackPlugin(webpackConfig.plugins);\n+ // remove the plugins to be overwriten.\n+ helpers.removePlugins(webpackConfig.plugins, [HtmlWebpackPlugin, ngcWebpack.NgcWebpackPlugin]);\n+ // remove the rules to be overwriten.\n+ helpers.removeRules(webpackConfig.module.rules, [/\\.ts$/, /\\.html$/]);\n+\n+ for (var i = 0; i < webpackConfig.module.rules.length; i++) {\n+ if (webpackConfig.module.rules[i].test.toString() === /\\.html$/.toString()) {\n+ webpackConfig.module.rules[i].exclude.push(helpers.root('src/assets/404.html'));\n+ }\n+ }\nreturn webpackMerge(webpackConfig, {\noutput: {\n@@ -49,7 +59,41 @@ module.exports = function (options) {\npublicPath: '/' + GH_REPO_NAME + '/' + ghDeploy.safeUrl(webpackConfig.output.publicPath)\n},\n+ module: {\n+ rules: [\n+ /*\n+ * Typescript loader support for .ts and Angular 2 async routes via .async.ts\n+ * Replace templateUrl and stylesUrl with require()\n+ *\n+ * See: https://github.com/s-panferov/awesome-typescript-loader\n+ * See: https://github.com/TheLarkInn/angular2-template-loader\n+ */\n+ {\n+ test: /\\.ts$/,\n+ use: [\n+ '@angularclass/hmr-loader?pretty=' + !isProd + '&prod=' + isProd,\n+ 'awesome-typescript-loader?{configFileName: \"tsconfig.desktop.json\"}',\n+ 'angular2-template-loader',\n+ {\n+ loader: 'ng-router-loader',\n+ options: {\n+ loader: 'async-require',\n+ genDir: 'compiled',\n+ aot: AOT\n+ }\n+ }\n+ ],\n+ exclude: [/\\.(spec|e2e)\\.ts$/]\n+ }\n+ ]\n+ },\n+\nplugins: [\n+ new NormalModuleReplacementPlugin(\n+ /routerModule/,\n+ helpers.root('src/app/app.routerModule.desktop.ts')\n+ ),\n+\nnew HtmlWebpackPlugin({\ntemplate: 'src/index.html',\ntitle: METADATA.title,\n@@ -58,6 +102,22 @@ module.exports = function (options) {\ninject: 'head'\n}),\n+ new HtmlWebpackPlugin({\n+ template: 'src/assets/404.html',\n+ filename: '404.html',\n+ title: METADATA.title,\n+ metadata: {\n+ GH_REPO_NAME: GH_REPO_NAME || ''\n+ },\n+ inject: false\n+ }),\n+\n+ new ngcWebpack.NgcWebpackPlugin({\n+ disabled: !AOT,\n+ tsConfig: helpers.root('tsconfig.desktop.json'),\n+ resourceOverride: helpers.root('config/resource-override.js')\n+ }),\n+\nfunction() {\nthis.plugin('done', function(stats) {\nif (stats.compilation.errors.length > 0) return;\n@@ -81,7 +141,7 @@ module.exports = function (options) {\n// this is the fix for now.\nfs.writeFileSync(path.join(webpackConfig.output.path, '.nojekyll'), '');\n- ghpages.publish(webpackConfig.output.path, options, function(err) {\n+ require('gh-pages').publish(webpackConfig.output.path, options, function(err) {\nif (err) {\nconsole.log('GitHub deployment done. STATUS: ERROR.');\nthrow err;\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "config/advance/webpack.web.dev.js",
                    "new_path": "config/advance/webpack.web.dev.js",
                    "diff": "const helpers = require('./helpers');\nconst webpackMerge = require('webpack-merge'); // used to merge webpack configs\n+const HtmlWebpackPlugin = require('html-webpack-plugin');\nconst commonAdvanceConfig = require('./webpack.common.web.js');\nconst simpleWebDevConfig = require('../webpack.dev.js');\n@@ -16,7 +17,7 @@ const ENV = process.env.ENV = process.env.NODE_ENV = 'development';\nlet webpackConfig = simpleWebDevConfig({env: ENV});\n// remove the instance of HtmlWebpackPlugin.\n-helpers.removeHtmlWebpackPlugin(webpackConfig.plugins);\n+helpers.removePlugins(webpackConfig.plugins, [HtmlWebpackPlugin]);\n/**\n* Webpack configuration\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "config/advance/webpack.web.prod.js",
                    "new_path": "config/advance/webpack.web.prod.js",
                    "diff": "const helpers = require('./helpers');\nconst webpackMerge = require('webpack-merge'); // used to merge webpack configs\n+const HtmlWebpackPlugin = require('html-webpack-plugin');\nconst commonAdvanceConfig = require('./webpack.common.web.js');\nconst simpleWebProdConfig = require('../webpack.prod.js');\n@@ -16,7 +17,7 @@ const ENV = process.env.ENV = process.env.NODE_ENV = 'production';\nlet webpackConfig = simpleWebProdConfig({env: ENV});\n// remove the instance of HtmlWebpackPlugin.\n-helpers.removeHtmlWebpackPlugin(webpackConfig.plugins);\n+helpers.removePlugins(webpackConfig.plugins, [HtmlWebpackPlugin]);\n/**\n* Webpack configuration\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "config/advance/webpack.web.test.js",
                    "new_path": "config/advance/webpack.web.test.js",
                    "diff": "@@ -6,6 +6,7 @@ const helpers = require('./helpers');\nconst webpackMerge = require('webpack-merge'); // used to merge webpack configs\nconst HtmlElementsPlugin = require('../html-elements-plugin');\n+const HtmlWebpackPlugin = require('html-webpack-plugin');\nconst ScriptExtHtmlWebpackPlugin = require('script-ext-html-webpack-plugin');\nconst commonAdvanceConfig = require('./webpack.common.web.js');\n@@ -19,7 +20,7 @@ const ENV = process.env.ENV = process.env.NODE_ENV = 'test';\nlet webpackConfig = simpleWebTestConfig({env: ENV});\n// remove the instance of HtmlWebpackPlugin.\n-helpers.removeHtmlWebpackPlugin(webpackConfig.plugins);\n+helpers.removePlugins(webpackConfig.plugins, [HtmlWebpackPlugin]);\n/**\n* Webpack configuration\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/assets/404.html",
                    "diff": "+<!DOCTYPE html>\n+<html>\n+ <head>\n+ <meta charset=\"utf-8\">\n+ <title><%= htmlWebpackPlugin.options.title %></title>\n+ <script type=\"text/javascript\">\n+ var pathPrefix = '<%= htmlWebpackPlugin.options.metadata.GH_REPO_NAME %>';\n+\n+ window.location.replace(window.location.href.replace(\n+ window.location.host + '/' + pathPrefix,\n+ window.location.host + '/' + pathPrefix + (pathPrefix ? '/#' : '#/')\n+ ));\n+ </script>\n+ </head>\n+ <body>\n+ </body>\n+</html>\n\\ No newline at end of file\n"
                }
            ]
        }
    },
    "Row_6": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "shore(ci): temporary remove desktop build"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "shore(ci): temporary remove desktop build"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "package.json",
                    "new_path": "package.json",
                    "diff": "\"build:prod:desktop\": \"npm run build:prod:desktop:renderer && npm run build:prod:desktop:main\",\n\"build:prod:desktop:main\": \"webpack --config config/advance/webpack.desktop.build.main.js --progress --profile --bail\",\n\"build:prod:desktop:renderer\": \"webpack --config config/advance/webpack.desktop.build.renderer.js --progress --profile --bail\",\n- \"ci:aot\": \"npm run test && npm run build:aot && npm run e2e && npm run build:aot:desktop\",\n- \"ci:jit\": \"npm run test && npm run build:prod && npm run e2e && npm run build:desktop\",\n+ \"ci:aot\": \"npm run test && npm run build:aot && npm run e2e\",\n+ \"ci:jit\": \"npm run test && npm run build:prod && npm run e2e\",\n\"ci:nobuild\": \"npm test && npm run e2e\",\n- \"ci:testall\": \"npm run test && npm run build:prod && npm run e2e && npm run build:aot && npm run e2e && npm run build:desktop && npm run build:aot:desktop\",\n+ \"ci:testall\": \"npm run test && npm run build:prod && npm run e2e && npm run build:aot && npm run e2e\",\n\"ci\": \"npm run ci:testall\",\n\"clean\": \"npm cache clean && npm run rimraf -- node_modules doc coverage dist desktop _temp compiled\",\n\"clean:aot\": \"npm run rimraf -- compiled\",\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "package.json",
                    "new_path": "package.json",
                    "diff": "\"build:prod:desktop\": \"npm run build:prod:desktop:renderer && npm run build:prod:desktop:main\",\n\"build:prod:desktop:main\": \"webpack --config config/advance/webpack.desktop.build.main.js --progress --profile --bail\",\n\"build:prod:desktop:renderer\": \"webpack --config config/advance/webpack.desktop.build.renderer.js --progress --profile --bail\",\n- \"ci:aot\": \"npm run test && npm run build:aot && npm run e2e && npm run build:aot:desktop\",\n- \"ci:jit\": \"npm run test && npm run build:prod && npm run e2e && npm run build:desktop\",\n+ \"ci:aot\": \"npm run test && npm run build:aot && npm run e2e\",\n+ \"ci:jit\": \"npm run test && npm run build:prod && npm run e2e\",\n\"ci:nobuild\": \"npm test && npm run e2e\",\n- \"ci:testall\": \"npm run test && npm run build:prod && npm run e2e && npm run build:aot && npm run e2e && npm run build:desktop && npm run build:aot:desktop\",\n+ \"ci:testall\": \"npm run test && npm run build:prod && npm run e2e && npm run build:aot && npm run e2e\",\n\"ci\": \"npm run ci:testall\",\n\"clean\": \"npm cache clean && npm run rimraf -- node_modules doc coverage dist desktop _temp compiled\",\n\"clean:aot\": \"npm run rimraf -- compiled\",\n"
                }
            ]
        }
    },
    "Row_7": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "fix gitdeploy and desktop render"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "fix gitdeploy and desktop render"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "config/advance/helpers.js",
                    "new_path": "config/advance/helpers.js",
                    "diff": "@@ -32,21 +32,21 @@ function checkNodeImport(context, request, cb) {\n}\nfunction removePlugins(plugins, test) {\n- for (var i = 0; i < plugins.length; i++) {\n+ for (var i = plugins.length - 1; i >= 0; i--) {\nif (test.filter(function(t) { return plugins[i] instanceof t;}).length > 0) {\nplugins.splice(i, 1);\n- return;\n}\n}\n+ return;\n}\nfunction removeRules(rules, test) {\n- for (var i = 0; i < rules.length; i++) {\n+ for (var i = rules.length - 1; i >= 0; i--) {\nif (test.filter(function(t) { return t.toString() === rules[i].test.toString();}).length > 0) {\nrules.splice(i, 1);\n- return;\n}\n}\n+ return;\n}\nexports.hasProcessFlag = hasProcessFlag;\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "config/advance/webpack.desktop.build.renderer.js",
                    "new_path": "config/advance/webpack.desktop.build.renderer.js",
                    "diff": "@@ -33,7 +33,11 @@ const METADATA = Object.assign({\nlet webpackConfig = webpackMerge.smart(simpleWebProdConfig({env: ENV}), commonAdvanceConfig({env: ENV}));\n// remove the plugins to be overwriten.\n-helpers.removePlugins(webpackConfig.plugins, [HtmlWebpackPlugin, ngcWebpack.NgcWebpackPlugin]);\n+helpers.removePlugins(webpackConfig.plugins, [\n+ DefinePlugin,\n+ HtmlWebpackPlugin,\n+ ngcWebpack.NgcWebpackPlugin\n+]);\n// remove the rules to be overwriten.\nhelpers.removeRules(webpackConfig.module.rules, [/\\.ts$/]);\n@@ -43,6 +47,8 @@ helpers.removeRules(webpackConfig.module.rules, [/\\.ts$/]);\n* See: http://webpack.github.io/docs/configuration.html#cli\n*/\nmodule.exports = function(options) {\n+ isProd = ENV === 'production';\n+\nreturn webpackMerge.smart(webpackConfig, {\nmodule: {\nrules: [\n@@ -57,16 +63,16 @@ module.exports = function(options) {\ntest: /\\.ts$/,\nuse: [\n'@angularclass/hmr-loader?pretty=' + !isProd + '&prod=' + isProd,\n- 'awesome-typescript-loader?{configFileName: \"tsconfig.desktop.json\"}',\n- 'angular2-template-loader',\n{\nloader: 'ng-router-loader',\noptions: {\n- loader: 'async-require',\n+ loader: 'async-import',\ngenDir: 'compiled',\naot: AOT\n}\n- }\n+ },\n+ 'awesome-typescript-loader?{configFileName: \"tsconfig.desktop.json\"}',\n+ 'angular2-template-loader'\n],\nexclude: [/\\.(spec|e2e)\\.ts$/]\n},\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "config/advance/webpack.github-deploy.js",
                    "new_path": "config/advance/webpack.github-deploy.js",
                    "diff": "@@ -20,9 +20,12 @@ const ngcWebpack = require('ngc-webpack');\nconst GIT_REMOTE_NAME = 'origin';\nconst COMMIT_MESSAGE = 'Updates';\nconst GH_REPO_NAME = ghDeploy.getRepoName(GIT_REMOTE_NAME);\n+const ENV = process.env.ENV = process.env.NODE_ENV = 'production';\nconst AOT = helpers.hasNpmFlag('aot');\nmodule.exports = function (options) {\n+ isProd = ENV === 'production';\n+\nconst webpackConfigFactory = ghDeploy.getWebpackConfigModule(options); // the settings that are common to prod and dev\nconst webpackConfig = webpackConfigFactory(options);\nconst METADATA = Object.assign({\n@@ -31,7 +34,10 @@ module.exports = function (options) {\n}, require('../custom/webpack.common.js').metadata);\n// remove the plugins to be overwriten.\n- helpers.removePlugins(webpackConfig.plugins, [HtmlWebpackPlugin, ngcWebpack.NgcWebpackPlugin]);\n+ helpers.removePlugins(webpackConfig.plugins, [\n+ HtmlWebpackPlugin,\n+ ngcWebpack.NgcWebpackPlugin\n+ ]);\n// remove the rules to be overwriten.\nhelpers.removeRules(webpackConfig.module.rules, [/\\.ts$/, /\\.html$/]);\n@@ -72,16 +78,16 @@ module.exports = function (options) {\ntest: /\\.ts$/,\nuse: [\n'@angularclass/hmr-loader?pretty=' + !isProd + '&prod=' + isProd,\n- 'awesome-typescript-loader?{configFileName: \"tsconfig.desktop.json\"}',\n- 'angular2-template-loader',\n{\nloader: 'ng-router-loader',\noptions: {\n- loader: 'async-require',\n+ loader: 'async-import',\ngenDir: 'compiled',\naot: AOT\n}\n- }\n+ },\n+ 'awesome-typescript-loader?{configFileName: \"tsconfig.desktop.json\"}',\n+ 'angular2-template-loader'\n],\nexclude: [/\\.(spec|e2e)\\.ts$/]\n}\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "config/advance/helpers.js",
                    "new_path": "config/advance/helpers.js",
                    "diff": "@@ -32,21 +32,21 @@ function checkNodeImport(context, request, cb) {\n}\nfunction removePlugins(plugins, test) {\n- for (var i = 0; i < plugins.length; i++) {\n+ for (var i = plugins.length - 1; i >= 0; i--) {\nif (test.filter(function(t) { return plugins[i] instanceof t;}).length > 0) {\nplugins.splice(i, 1);\n- return;\n}\n}\n+ return;\n}\nfunction removeRules(rules, test) {\n- for (var i = 0; i < rules.length; i++) {\n+ for (var i = rules.length - 1; i >= 0; i--) {\nif (test.filter(function(t) { return t.toString() === rules[i].test.toString();}).length > 0) {\nrules.splice(i, 1);\n- return;\n}\n}\n+ return;\n}\nexports.hasProcessFlag = hasProcessFlag;\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "config/advance/webpack.desktop.build.renderer.js",
                    "new_path": "config/advance/webpack.desktop.build.renderer.js",
                    "diff": "@@ -33,7 +33,11 @@ const METADATA = Object.assign({\nlet webpackConfig = webpackMerge.smart(simpleWebProdConfig({env: ENV}), commonAdvanceConfig({env: ENV}));\n// remove the plugins to be overwriten.\n-helpers.removePlugins(webpackConfig.plugins, [HtmlWebpackPlugin, ngcWebpack.NgcWebpackPlugin]);\n+helpers.removePlugins(webpackConfig.plugins, [\n+ DefinePlugin,\n+ HtmlWebpackPlugin,\n+ ngcWebpack.NgcWebpackPlugin\n+]);\n// remove the rules to be overwriten.\nhelpers.removeRules(webpackConfig.module.rules, [/\\.ts$/]);\n@@ -43,6 +47,8 @@ helpers.removeRules(webpackConfig.module.rules, [/\\.ts$/]);\n* See: http://webpack.github.io/docs/configuration.html#cli\n*/\nmodule.exports = function(options) {\n+ isProd = ENV === 'production';\n+\nreturn webpackMerge.smart(webpackConfig, {\nmodule: {\nrules: [\n@@ -57,16 +63,16 @@ module.exports = function(options) {\ntest: /\\.ts$/,\nuse: [\n'@angularclass/hmr-loader?pretty=' + !isProd + '&prod=' + isProd,\n- 'awesome-typescript-loader?{configFileName: \"tsconfig.desktop.json\"}',\n- 'angular2-template-loader',\n{\nloader: 'ng-router-loader',\noptions: {\n- loader: 'async-require',\n+ loader: 'async-import',\ngenDir: 'compiled',\naot: AOT\n}\n- }\n+ },\n+ 'awesome-typescript-loader?{configFileName: \"tsconfig.desktop.json\"}',\n+ 'angular2-template-loader'\n],\nexclude: [/\\.(spec|e2e)\\.ts$/]\n},\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "config/advance/webpack.github-deploy.js",
                    "new_path": "config/advance/webpack.github-deploy.js",
                    "diff": "@@ -20,9 +20,12 @@ const ngcWebpack = require('ngc-webpack');\nconst GIT_REMOTE_NAME = 'origin';\nconst COMMIT_MESSAGE = 'Updates';\nconst GH_REPO_NAME = ghDeploy.getRepoName(GIT_REMOTE_NAME);\n+const ENV = process.env.ENV = process.env.NODE_ENV = 'production';\nconst AOT = helpers.hasNpmFlag('aot');\nmodule.exports = function (options) {\n+ isProd = ENV === 'production';\n+\nconst webpackConfigFactory = ghDeploy.getWebpackConfigModule(options); // the settings that are common to prod and dev\nconst webpackConfig = webpackConfigFactory(options);\nconst METADATA = Object.assign({\n@@ -31,7 +34,10 @@ module.exports = function (options) {\n}, require('../custom/webpack.common.js').metadata);\n// remove the plugins to be overwriten.\n- helpers.removePlugins(webpackConfig.plugins, [HtmlWebpackPlugin, ngcWebpack.NgcWebpackPlugin]);\n+ helpers.removePlugins(webpackConfig.plugins, [\n+ HtmlWebpackPlugin,\n+ ngcWebpack.NgcWebpackPlugin\n+ ]);\n// remove the rules to be overwriten.\nhelpers.removeRules(webpackConfig.module.rules, [/\\.ts$/, /\\.html$/]);\n@@ -72,16 +78,16 @@ module.exports = function (options) {\ntest: /\\.ts$/,\nuse: [\n'@angularclass/hmr-loader?pretty=' + !isProd + '&prod=' + isProd,\n- 'awesome-typescript-loader?{configFileName: \"tsconfig.desktop.json\"}',\n- 'angular2-template-loader',\n{\nloader: 'ng-router-loader',\noptions: {\n- loader: 'async-require',\n+ loader: 'async-import',\ngenDir: 'compiled',\naot: AOT\n}\n- }\n+ },\n+ 'awesome-typescript-loader?{configFileName: \"tsconfig.desktop.json\"}',\n+ 'angular2-template-loader'\n],\nexclude: [/\\.(spec|e2e)\\.ts$/]\n}\n"
                }
            ]
        }
    },
    "Row_8": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "update deps and fix travis"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "update deps and fix travis"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": ".travis.yml",
                    "new_path": ".travis.yml",
                    "diff": "@@ -8,8 +8,8 @@ addons:\n- google-chrome-stable\nlanguage: node_js\nnode_js:\n- - \"5\"\n- \"6\"\n+ - \"7\"\n- \"node\"\n# Matrix failure enabled for https://github.com/TheLarkInn/LazyParseWebpackPlugin/issues/6\nmatrix:\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "package.json",
                    "new_path": "package.json",
                    "diff": "\"codelyzer\": \"~2.0.0-beta.4\",\n\"copy-webpack-plugin\": \"^4.0.0\",\n\"css-loader\": \"^0.26.0\",\n- \"electron\": \"^1.4.13\",\n- \"electron-builder\": \"^10.16.0\",\n+ \"electron\": \"^1.5.0\",\n+ \"electron-builder\": \"^11.7.0\",\n\"electron-debug\": \"^1.0.1\",\n\"exports-loader\": \"^0.6.3\",\n\"expose-loader\": \"^0.7.1\",\n- \"extract-text-webpack-plugin\": \"~2.0.0-beta.4\",\n- \"file-loader\": \"^0.9.0\",\n+ \"extract-text-webpack-plugin\": \"~2.0.0-rc.2\",\n+ \"file-loader\": \"^0.10.0\",\n\"find-root\": \"^1.0.0\",\n\"gh-pages\": \"^0.12.0\",\n\"html-webpack-plugin\": \"^2.21.0\",\n\"karma-mocha-reporter\": \"^2.0.0\",\n\"karma-remap-coverage\": \"^0.1.4\",\n\"karma-sourcemap-loader\": \"^0.3.7\",\n- \"karma-webpack\": \"2.0.1\",\n+ \"karma-webpack\": \"2.0.2\",\n\"ng-router-loader\": \"^2.1.0\",\n\"ngc-webpack\": \"^1.1.0\",\n\"ngrx-store-freeze\": \"0.1.6\",\n\"npm-run-all\": \"^4.0.0\",\n\"optimize-js-plugin\": \"0.0.4\",\n\"parse5\": \"^3.0.1\",\n- \"protractor\": \"^4.0.14\",\n+ \"protractor\": \"^5.0.0\",\n\"raw-loader\": \"0.5.1\",\n\"rimraf\": \"~2.5.4\",\n\"sass-loader\": \"^4.1.1\",\n\"webpack-dev-middleware\": \"^1.9.0\",\n\"webpack-dev-server\": \"2.2.0\",\n\"webpack-dll-bundles-plugin\": \"^1.0.0-beta.5\",\n- \"webpack-merge\": \"~2.4.0\",\n+ \"webpack-merge\": \"~2.6.0\",\n\"webpack-target-electron-renderer\": \"^0.4.0\"\n},\n\"build\": {\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/app/components/about/about.component.spec.ts",
                    "new_path": "src/app/components/about/about.component.spec.ts",
                    "diff": "@@ -24,7 +24,7 @@ t.describe('@Component: AboutComponent', () => {\nfixture.detectChanges();\nlet aboutDOMEl = fixture.debugElement.children[0].nativeElement;\n- t.e(getDOM().querySelectorAll(aboutDOMEl, 'h2')[0].textContent).toEqual('Features');\n+ t.e(getDOM().querySelectorAll(aboutDOMEl, 'div h2')[0].textContent).toEqual('Features');\n});\n}));\n});\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": ".travis.yml",
                    "new_path": ".travis.yml",
                    "diff": "@@ -8,8 +8,8 @@ addons:\n- google-chrome-stable\nlanguage: node_js\nnode_js:\n- - \"5\"\n- \"6\"\n+ - \"7\"\n- \"node\"\n# Matrix failure enabled for https://github.com/TheLarkInn/LazyParseWebpackPlugin/issues/6\nmatrix:\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "package.json",
                    "new_path": "package.json",
                    "diff": "\"codelyzer\": \"~2.0.0-beta.4\",\n\"copy-webpack-plugin\": \"^4.0.0\",\n\"css-loader\": \"^0.26.0\",\n- \"electron\": \"^1.4.13\",\n- \"electron-builder\": \"^10.16.0\",\n+ \"electron\": \"^1.5.0\",\n+ \"electron-builder\": \"^11.7.0\",\n\"electron-debug\": \"^1.0.1\",\n\"exports-loader\": \"^0.6.3\",\n\"expose-loader\": \"^0.7.1\",\n- \"extract-text-webpack-plugin\": \"~2.0.0-beta.4\",\n- \"file-loader\": \"^0.9.0\",\n+ \"extract-text-webpack-plugin\": \"~2.0.0-rc.2\",\n+ \"file-loader\": \"^0.10.0\",\n\"find-root\": \"^1.0.0\",\n\"gh-pages\": \"^0.12.0\",\n\"html-webpack-plugin\": \"^2.21.0\",\n\"karma-mocha-reporter\": \"^2.0.0\",\n\"karma-remap-coverage\": \"^0.1.4\",\n\"karma-sourcemap-loader\": \"^0.3.7\",\n- \"karma-webpack\": \"2.0.1\",\n+ \"karma-webpack\": \"2.0.2\",\n\"ng-router-loader\": \"^2.1.0\",\n\"ngc-webpack\": \"^1.1.0\",\n\"ngrx-store-freeze\": \"0.1.6\",\n\"npm-run-all\": \"^4.0.0\",\n\"optimize-js-plugin\": \"0.0.4\",\n\"parse5\": \"^3.0.1\",\n- \"protractor\": \"^4.0.14\",\n+ \"protractor\": \"^5.0.0\",\n\"raw-loader\": \"0.5.1\",\n\"rimraf\": \"~2.5.4\",\n\"sass-loader\": \"^4.1.1\",\n\"webpack-dev-middleware\": \"^1.9.0\",\n\"webpack-dev-server\": \"2.2.0\",\n\"webpack-dll-bundles-plugin\": \"^1.0.0-beta.5\",\n- \"webpack-merge\": \"~2.4.0\",\n+ \"webpack-merge\": \"~2.6.0\",\n\"webpack-target-electron-renderer\": \"^0.4.0\"\n},\n\"build\": {\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/app/components/about/about.component.spec.ts",
                    "new_path": "src/app/components/about/about.component.spec.ts",
                    "diff": "@@ -24,7 +24,7 @@ t.describe('@Component: AboutComponent', () => {\nfixture.detectChanges();\nlet aboutDOMEl = fixture.debugElement.children[0].nativeElement;\n- t.e(getDOM().querySelectorAll(aboutDOMEl, 'h2')[0].textContent).toEqual('Features');\n+ t.e(getDOM().querySelectorAll(aboutDOMEl, 'div h2')[0].textContent).toEqual('Features');\n});\n}));\n});\n"
                }
            ]
        }
    },
    "Row_9": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "chore(docs): update known bugs"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "chore(docs): update known bugs"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "README.md",
                    "new_path": "README.md",
                    "diff": "@@ -321,11 +321,6 @@ The following are some things that will make AoT compile fail.\nPlease see the [CONTRIBUTING](https://github.com/JonnyBGod/angular2-webpack-advance-starter/blob/master/.github/CONTRIBUTING.md) and [CODE_OF_CONDUCT](https://github.com/JonnyBGod/angular2-webpack-advance-starter/blob/master/.github/CODE_OF_CONDUCT.md) files for guidelines.\n-## Known Bugs\n-\n-- [ ] ELECTRON: css absolute paths\n-- [ ] npm run docs (upstream) (https://github.com/TypeStrong/typedoc/issues/234)\n-\n___\n# License\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "README.md",
                    "new_path": "README.md",
                    "diff": "@@ -321,11 +321,6 @@ The following are some things that will make AoT compile fail.\nPlease see the [CONTRIBUTING](https://github.com/JonnyBGod/angular2-webpack-advance-starter/blob/master/.github/CONTRIBUTING.md) and [CODE_OF_CONDUCT](https://github.com/JonnyBGod/angular2-webpack-advance-starter/blob/master/.github/CODE_OF_CONDUCT.md) files for guidelines.\n-## Known Bugs\n-\n-- [ ] ELECTRON: css absolute paths\n-- [ ] npm run docs (upstream) (https://github.com/TypeStrong/typedoc/issues/234)\n-\n___\n# License\n"
                }
            ]
        }
    },
    "Row_10": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "update upstream, dependencies and app"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "update upstream, dependencies and app"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "config/advance/webpack.web.test.js",
                    "new_path": "config/advance/webpack.web.test.js",
                    "diff": "@@ -29,15 +29,6 @@ helpers.removePlugins(webpackConfig.plugins, [HtmlWebpackPlugin]);\n*/\nmodule.exports = function(options) {\nreturn webpackMerge.smart(webpackConfig, commonAdvanceConfig({env: ENV}), {\n- module: {\n- rules: [\n- {\n- test: /\\.scss$/,\n- use: ['to-string-loader', 'css-loader', 'sass-loader'],\n- exclude: [helpers.root('src', 'styles')]\n- },\n- ]\n- },\nplugins: [\n/*\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "electron/main.desktop.ts",
                    "new_path": "electron/main.desktop.ts",
                    "diff": "@@ -13,7 +13,7 @@ let template: any;\nlet menu: any;\n// app\n-import { DesktopConfig } from 'frameworks/electron/index';\n+import { DesktopConfig } from 'shared/electron/index';\n/*crashReporter.start({\nproductName: 'Angular2WebpackAdvanceStarter',\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "package.json",
                    "new_path": "package.json",
                    "diff": "},\n\"linux\": {\n\"target\": [\n- \"AppImage\",\n- \"snap\"\n+ \"AppImage\"\n]\n},\n- \"asar\": true\n- },\n+ \"asar\": true,\n\"directories\": {\n\"buildResources\": \"src/assets\",\n\"output\": \"desktop\",\n\"app\": \"dist\"\n+ }\n},\n\"repository\": {\n\"type\": \"git\",\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/app/components/about/about.component.spec.ts",
                    "new_path": "src/app/components/about/about.component.spec.ts",
                    "diff": "-import { TestBed, async } from '@angular/core/testing';\n+// angular\nimport { Component } from '@angular/core';\n-import { getDOM } from '@angular/platform-browser/src/dom/dom_adapter';\n+import { TestBed, async } from '@angular/core/testing';\n-import { t } from 'shared/test';\n+// app\n+import { t } from 'shared/test/index';\nimport { AboutComponent } from './about.component';\n// test module configuration for each test\n@@ -12,6 +13,7 @@ const testModuleConfig = () => {\n});\n};\n+export function main() {\nt.describe('@Component: AboutComponent', () => {\nt.be(testModuleConfig);\n@@ -24,10 +26,11 @@ t.describe('@Component: AboutComponent', () => {\nfixture.detectChanges();\nlet aboutDOMEl = fixture.debugElement.children[0].nativeElement;\n- t.e(getDOM().querySelectorAll(aboutDOMEl, 'h2')[0].textContent).toEqual('Features');\n+ t.e(aboutDOMEl.querySelectorAll('h2')[0].textContent).toEqual('Features');\n});\n}));\n});\n+}\n@Component({\nselector: 'test-cmp',\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/app/shared/core/services/log.service.spec.ts",
                    "new_path": "src/app/shared/core/services/log.service.spec.ts",
                    "diff": "@@ -8,15 +8,18 @@ import { BaseRequestOptions, Http, Response, ResponseOptions } from '@angular/ht\nimport { MockBackend, MockConnection } from '@angular/http/testing';\n// libs\n-import { ConfigModule, ConfigLoader, ConfigService } from 'ng2-config';\n+import { ConfigModule, ConfigLoader, ConfigService, ConfigHttpLoader } from '@nglibs/config';\n// app\nimport { t } from '../../test/index';\n-import { configFactory } from '../../core/core.module';\n// module\nimport { ConsoleService, LogService } from '../index';\n+export function configFactory(http: Http): ConfigLoader {\n+ return new ConfigHttpLoader(http, '/config.json'); // FILE PATH || API ENDPOINT\n+}\n+\nconst providers: any[] = [\n{ provide: ConsoleService, useValue: console },\nLogService,\n@@ -50,7 +53,11 @@ t.describe('core: LogService', () => {\nTestBed.initTestEnvironment(BrowserDynamicTestingModule, platformBrowserDynamicTesting())\n.configureTestingModule({\nimports: [\n- ConfigModule.forRoot({ provide: ConfigLoader, useFactory: (configFactory) })\n+ ConfigModule.forRoot({\n+ provide: ConfigLoader,\n+ useFactory: (configFactory),\n+ deps: [Http]\n+ }),\n],\nproviders\n});\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/app/shared/core/testing/providers/core.ts",
                    "new_path": "src/app/shared/core/testing/providers/core.ts",
                    "diff": "// libs\n-import { ConfigService } from 'ng2-config';\n+import { ConfigService } from '@nglibs/config';\n// app\nimport { ANALYTICS_PROVIDERS } from '../../../analytics/index';\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/app/shared/i18n/components/lang-switcher.component.spec.ts",
                    "new_path": "src/app/shared/i18n/components/lang-switcher.component.spec.ts",
                    "diff": "@@ -8,7 +8,7 @@ import { MockBackend, MockConnection } from '@angular/http/testing';\n// libs\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n-import { ConfigService } from 'ng2-config';\n+import { ConfigService } from '@nglibs/config';\nimport { Angulartics2Module, Angulartics2GoogleAnalytics } from 'angulartics2';\n// app\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/app/shared/i18n/testing/index.ts",
                    "new_path": "src/app/shared/i18n/testing/index.ts",
                    "diff": "// libs\n-import { TranslateService, TranslateLoader } from 'ng2-translate';\n+import { TranslateService, TranslateLoader } from '@ngx-translate/core';\n// module\nimport { MultilingualService } from '../index';\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/app/shared/sample/services/name-list.service.spec.ts",
                    "new_path": "src/app/shared/sample/services/name-list.service.spec.ts",
                    "diff": "@@ -52,7 +52,7 @@ const mockBackendResponse = (connection: MockConnection, response: string) => {\nt.describe('app: NameListService', () => {\nlet injector: Injector;\n- let backend: MockBackend;\n+ let backend: any;\nlet nameList: NameListService;\nlet store: Store<any>;\nlet runner: EffectsRunner; // ngrx/effects tester\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "tsconfig.desktop.json",
                    "new_path": "tsconfig.desktop.json",
                    "diff": "\"sourceMap\": true,\n\"noEmit\": true,\n\"noEmitHelpers\": true,\n+ \"importHelpers\": true,\n\"strictNullChecks\": false,\n\"baseUrl\": \"./src\",\n\"paths\": {\n\"es2015\",\n\"dom\"\n],\n+ \"typeRoots\": [\n+ \"node_modules/@types\"\n+ ],\n\"types\": [\n\"hammerjs\",\n\"jasmine\",\n},\n\"compileOnSave\": false,\n\"buildOnSave\": false,\n- \"atom\": { \"rewriteTsconfig\": false }\n+ \"atom\": {\n+ \"rewriteTsconfig\": false\n+ }\n}\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "config/advance/webpack.web.test.js",
                    "new_path": "config/advance/webpack.web.test.js",
                    "diff": "@@ -29,15 +29,6 @@ helpers.removePlugins(webpackConfig.plugins, [HtmlWebpackPlugin]);\n*/\nmodule.exports = function(options) {\nreturn webpackMerge.smart(webpackConfig, commonAdvanceConfig({env: ENV}), {\n- module: {\n- rules: [\n- {\n- test: /\\.scss$/,\n- use: ['to-string-loader', 'css-loader', 'sass-loader'],\n- exclude: [helpers.root('src', 'styles')]\n- },\n- ]\n- },\nplugins: [\n/*\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "electron/main.desktop.ts",
                    "new_path": "electron/main.desktop.ts",
                    "diff": "@@ -13,7 +13,7 @@ let template: any;\nlet menu: any;\n// app\n-import { DesktopConfig } from 'frameworks/electron/index';\n+import { DesktopConfig } from 'shared/electron/index';\n/*crashReporter.start({\nproductName: 'Angular2WebpackAdvanceStarter',\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "package.json",
                    "new_path": "package.json",
                    "diff": "},\n\"linux\": {\n\"target\": [\n- \"AppImage\",\n- \"snap\"\n+ \"AppImage\"\n]\n},\n- \"asar\": true\n- },\n+ \"asar\": true,\n\"directories\": {\n\"buildResources\": \"src/assets\",\n\"output\": \"desktop\",\n\"app\": \"dist\"\n+ }\n},\n\"repository\": {\n\"type\": \"git\",\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/app/components/about/about.component.spec.ts",
                    "new_path": "src/app/components/about/about.component.spec.ts",
                    "diff": "-import { TestBed, async } from '@angular/core/testing';\n+// angular\nimport { Component } from '@angular/core';\n-import { getDOM } from '@angular/platform-browser/src/dom/dom_adapter';\n+import { TestBed, async } from '@angular/core/testing';\n-import { t } from 'shared/test';\n+// app\n+import { t } from 'shared/test/index';\nimport { AboutComponent } from './about.component';\n// test module configuration for each test\n@@ -12,6 +13,7 @@ const testModuleConfig = () => {\n});\n};\n+export function main() {\nt.describe('@Component: AboutComponent', () => {\nt.be(testModuleConfig);\n@@ -24,10 +26,11 @@ t.describe('@Component: AboutComponent', () => {\nfixture.detectChanges();\nlet aboutDOMEl = fixture.debugElement.children[0].nativeElement;\n- t.e(getDOM().querySelectorAll(aboutDOMEl, 'h2')[0].textContent).toEqual('Features');\n+ t.e(aboutDOMEl.querySelectorAll('h2')[0].textContent).toEqual('Features');\n});\n}));\n});\n+}\n@Component({\nselector: 'test-cmp',\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/app/shared/core/services/log.service.spec.ts",
                    "new_path": "src/app/shared/core/services/log.service.spec.ts",
                    "diff": "@@ -8,15 +8,18 @@ import { BaseRequestOptions, Http, Response, ResponseOptions } from '@angular/ht\nimport { MockBackend, MockConnection } from '@angular/http/testing';\n// libs\n-import { ConfigModule, ConfigLoader, ConfigService } from 'ng2-config';\n+import { ConfigModule, ConfigLoader, ConfigService, ConfigHttpLoader } from '@nglibs/config';\n// app\nimport { t } from '../../test/index';\n-import { configFactory } from '../../core/core.module';\n// module\nimport { ConsoleService, LogService } from '../index';\n+export function configFactory(http: Http): ConfigLoader {\n+ return new ConfigHttpLoader(http, '/config.json'); // FILE PATH || API ENDPOINT\n+}\n+\nconst providers: any[] = [\n{ provide: ConsoleService, useValue: console },\nLogService,\n@@ -50,7 +53,11 @@ t.describe('core: LogService', () => {\nTestBed.initTestEnvironment(BrowserDynamicTestingModule, platformBrowserDynamicTesting())\n.configureTestingModule({\nimports: [\n- ConfigModule.forRoot({ provide: ConfigLoader, useFactory: (configFactory) })\n+ ConfigModule.forRoot({\n+ provide: ConfigLoader,\n+ useFactory: (configFactory),\n+ deps: [Http]\n+ }),\n],\nproviders\n});\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/app/shared/core/testing/providers/core.ts",
                    "new_path": "src/app/shared/core/testing/providers/core.ts",
                    "diff": "// libs\n-import { ConfigService } from 'ng2-config';\n+import { ConfigService } from '@nglibs/config';\n// app\nimport { ANALYTICS_PROVIDERS } from '../../../analytics/index';\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/app/shared/i18n/components/lang-switcher.component.spec.ts",
                    "new_path": "src/app/shared/i18n/components/lang-switcher.component.spec.ts",
                    "diff": "@@ -8,7 +8,7 @@ import { MockBackend, MockConnection } from '@angular/http/testing';\n// libs\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n-import { ConfigService } from 'ng2-config';\n+import { ConfigService } from '@nglibs/config';\nimport { Angulartics2Module, Angulartics2GoogleAnalytics } from 'angulartics2';\n// app\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/app/shared/i18n/testing/index.ts",
                    "new_path": "src/app/shared/i18n/testing/index.ts",
                    "diff": "// libs\n-import { TranslateService, TranslateLoader } from 'ng2-translate';\n+import { TranslateService, TranslateLoader } from '@ngx-translate/core';\n// module\nimport { MultilingualService } from '../index';\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/app/shared/sample/services/name-list.service.spec.ts",
                    "new_path": "src/app/shared/sample/services/name-list.service.spec.ts",
                    "diff": "@@ -52,7 +52,7 @@ const mockBackendResponse = (connection: MockConnection, response: string) => {\nt.describe('app: NameListService', () => {\nlet injector: Injector;\n- let backend: MockBackend;\n+ let backend: any;\nlet nameList: NameListService;\nlet store: Store<any>;\nlet runner: EffectsRunner; // ngrx/effects tester\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "tsconfig.desktop.json",
                    "new_path": "tsconfig.desktop.json",
                    "diff": "\"sourceMap\": true,\n\"noEmit\": true,\n\"noEmitHelpers\": true,\n+ \"importHelpers\": true,\n\"strictNullChecks\": false,\n\"baseUrl\": \"./src\",\n\"paths\": {\n\"es2015\",\n\"dom\"\n],\n+ \"typeRoots\": [\n+ \"node_modules/@types\"\n+ ],\n\"types\": [\n\"hammerjs\",\n\"jasmine\",\n},\n\"compileOnSave\": false,\n\"buildOnSave\": false,\n- \"atom\": { \"rewriteTsconfig\": false }\n+ \"atom\": {\n+ \"rewriteTsconfig\": false\n+ }\n}\n"
                }
            ]
        }
    },
    "Row_11": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Update composer.json\nUpdating package name."
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Update composer.json\nUpdating package name."
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "composer.json",
                    "new_path": "composer.json",
                    "diff": "{\n- \"name\": \"amazon/module-login-and-pay\",\n+ \"name\": \"amzn/amazon-payments-magento-2-plugin\",\n\"description\": \"Official Magento2 Plugin to integrate with Amazon Payments\",\n\"type\": \"magento2-module\",\n\"version\": \"1.0.9\",\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "composer.json",
                    "new_path": "composer.json",
                    "diff": "{\n- \"name\": \"amazon/module-login-and-pay\",\n+ \"name\": \"amzn/amazon-payments-magento-2-plugin\",\n\"description\": \"Official Magento2 Plugin to integrate with Amazon Payments\",\n\"type\": \"magento2-module\",\n\"version\": \"1.0.9\",\n"
                }
            ]
        }
    },
    "Row_12": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Add missing code to amazon payment template"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Add missing code to amazon payment template"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/template/payment/amazon-payment-widget.html",
                    "new_path": "src/Payment/view/frontend/web/template/payment/amazon-payment-widget.html",
                    "diff": "<label data-bind=\"attr: {'for': getCode()}\" class=\"label\"><span data-bind=\"text: getTitle()\"></span></label>\n</div>\n<div class=\"payment-method-content\">\n-\n+ <!-- ko foreach: getRegion('messages') -->\n+ <!-- ko template: getTemplate() --><!-- /ko -->\n+ <!--/ko-->\n<div class=\"amazon-widget-container\">\n<div id=\"walletWidgetDiv\" class=\"amazon-widget amazon-widget--payment\" data-bind=\"afterRender: initPaymentWidget\"></div>\n</div>\n- <div class=\"checkout-agreements-block\"></div>\n+ <div class=\"checkout-agreements-block\">\n+ <!-- ko foreach: $parent.getRegion('before-place-order') -->\n+ <!-- ko template: getTemplate() --><!-- /ko -->\n+ <!--/ko-->\n+ </div>\n<div class=\"actions-toolbar\">\n<div class=\"primary\">\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/template/payment/amazon-payment-widget.html",
                    "new_path": "src/Payment/view/frontend/web/template/payment/amazon-payment-widget.html",
                    "diff": "<label data-bind=\"attr: {'for': getCode()}\" class=\"label\"><span data-bind=\"text: getTitle()\"></span></label>\n</div>\n<div class=\"payment-method-content\">\n-\n+ <!-- ko foreach: getRegion('messages') -->\n+ <!-- ko template: getTemplate() --><!-- /ko -->\n+ <!--/ko-->\n<div class=\"amazon-widget-container\">\n<div id=\"walletWidgetDiv\" class=\"amazon-widget amazon-widget--payment\" data-bind=\"afterRender: initPaymentWidget\"></div>\n</div>\n- <div class=\"checkout-agreements-block\"></div>\n+ <div class=\"checkout-agreements-block\">\n+ <!-- ko foreach: $parent.getRegion('before-place-order') -->\n+ <!-- ko template: getTemplate() --><!-- /ko -->\n+ <!--/ko-->\n+ </div>\n<div class=\"actions-toolbar\">\n<div class=\"primary\">\n"
                }
            ]
        }
    },
    "Row_13": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Add mixin to Amazon to add agreement data to submission"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Add mixin to Amazon to add agreement data to submission"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/requirejs-config.js",
                    "new_path": "src/Payment/view/frontend/requirejs-config.js",
                    "diff": "@@ -25,5 +25,12 @@ var config = {\n//this is a fix for Magento 2.1 (ajax / validation fails on add to cart)\ncatalogAddToCart: 'Amazon_Payment/js/catalog-add-to-cart'\n}\n+ },\n+ config: {\n+ mixins: {\n+ 'Amazon_Payment/js/action/place-order': {\n+ 'Amazon_Payment/js/model/place-order-mixin': true\n+ }\n+ }\n}\n};\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/requirejs-config.js",
                    "new_path": "src/Payment/view/frontend/requirejs-config.js",
                    "diff": "@@ -25,5 +25,12 @@ var config = {\n//this is a fix for Magento 2.1 (ajax / validation fails on add to cart)\ncatalogAddToCart: 'Amazon_Payment/js/catalog-add-to-cart'\n}\n+ },\n+ config: {\n+ mixins: {\n+ 'Amazon_Payment/js/action/place-order': {\n+ 'Amazon_Payment/js/model/place-order-mixin': true\n+ }\n+ }\n}\n};\n"
                }
            ]
        }
    },
    "Row_14": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Rework cart button to render alongside other payment types"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Rework cart button to render alongside other payment types"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/Observer/AddAmazonButton.php",
                    "diff": "+<?php\n+/**\n+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+namespace Amazon\\Payment\\Observer;\n+\n+use Magento\\Framework\\Event\\ObserverInterface;\n+use Magento\\Framework\\Event\\Observer;\n+use Amazon\\Core\\Helper\\Data;\n+\n+class AddAmazonButton implements ObserverInterface\n+{\n+ /**\n+ * @var Data\n+ */\n+ protected $coreHelper;\n+\n+ /**\n+ * @param Data $coreHelper\n+ */\n+ public function __construct(\n+ Data $coreHelper\n+ ) {\n+ $this->coreHelper = $coreHelper;\n+ }\n+\n+ public function execute(Observer $observer)\n+ {\n+ /** @var \\Magento\\Catalog\\Block\\ShortcutButtons $shortcutButtons */\n+ $shortcutButtons = $observer->getEvent()->getContainer();\n+\n+ if ($this->coreHelper->isPwaEnabled() && $this->coreHelper->isCurrentCurrencySupportedByAmazon()) {\n+\n+// $params = [\n+// 'shortcutValidator' => $this->shortcutFactory->create($observer->getEvent()->getCheckoutSession()),\n+// ];\n+ $params['checkoutSession'] = $observer->getEvent()->getCheckoutSession();\n+\n+ /** @var \\Magento\\Framework\\View\\Element\\Template $shortcut */\n+ $shortcut = $shortcutButtons->getLayout()->createBlock(\n+ 'Amazon\\Payment\\Block\\Minicart\\Button',\n+ '',\n+ $params\n+ );\n+\n+ $shortcut->setIsInCatalogProduct(\n+ $observer->getEvent()->getIsCatalogProduct()\n+ )->setShowOrPosition(\n+ $observer->getEvent()->getOrPosition()\n+ );\n+ $shortcutButtons->addShortcut($shortcut);\n+ }\n+ }\n+}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/etc/frontend/di.xml",
                    "new_path": "src/Payment/etc/frontend/di.xml",
                    "diff": "<argument name=\"methodCode\" xsi:type=\"const\">Amazon\\Payment\\Model\\Method\\Amazon::PAYMENT_METHOD_CODE</argument>\n</arguments>\n</virtualType>\n+ <type name=\"Amazon\\Payment\\Block\\Minicart\\Button\">\n+ <arguments>\n+ <argument name=\"data\" xsi:type=\"array\">\n+ <item name=\"template\" xsi:type=\"string\">Amazon_Payment::minicart-button.phtml</item>\n+ <item name=\"alias\" xsi:type=\"string\">amazon.button.mini-cart</item>\n+ <item name=\"button_id\" xsi:type=\"string\">PayWithAmazon</item>\n+ </argument>\n+ <argument name=\"payment\" xsi:type=\"object\">Amazon\\Payment\\Model\\Method\\Amazon</argument>\n+ </arguments>\n+ </type>\n</config>\n\\ No newline at end of file\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/etc/frontend/events.xml",
                    "diff": "+<?xml version=\"1.0\"?>\n+<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:Event/etc/events.xsd\">\n+ <event name=\"shortcut_buttons_container\">\n+ <observer name=\"amazon_buttons\" instance=\"Amazon\\Payment\\Observer\\AddAmazonButton\"/>\n+ </event>\n+</config>\n"
                },
                {
                    "change_type": "DELETE",
                    "old_path": "src/Payment/view/frontend/layout/default.xml",
                    "new_path": null,
                    "diff": "-<?xml version=\"1.0\"?>\n-<!--\n-/**\n- * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\").\n- * You may not use this file except in compliance with the License.\n- * A copy of the License is located at\n- *\n- * http://aws.amazon.com/apache2.0\n- *\n- * or in the \"license\" file accompanying this file. This file is distributed\n- * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n- * express or implied. See the License for the specific language governing\n- * permissions and limitations under the License.\n- */\n--->\n-<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n- <body>\n- <referenceBlock name=\"minicart\">\n- <arguments>\n- <argument name=\"jsLayout\" xsi:type=\"array\">\n- <item name=\"components\" xsi:type=\"array\">\n- <item name=\"minicart_content\" xsi:type=\"array\">\n- <item name=\"children\" xsi:type=\"array\">\n- <item name=\"amazon_minicart_pay\" xsi:type=\"array\">\n- <item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/minicart-button</item>\n- <item name=\"config\" xsi:type=\"array\">\n- <item name=\"displayArea\" xsi:type=\"string\">extraInfo</item>\n- <item name=\"tooltip\" xsi:type=\"string\" translate=\"true\">Are you an Amazon customer? Pay now with address and payment details stored in your Amazon account.</item>\n- </item>\n- <item name=\"children\" xsi:type=\"array\">\n- <item name=\"before-amazon-button\" xsi:type=\"array\">\n- <item name=\"component\" xsi:type=\"string\">uiComponent</item>\n- <item name=\"displayArea\" xsi:type=\"string\">before-amazon-button</item>\n- <item name=\"children\" xsi:type=\"array\">\n- <!-- before amazon button -->\n- </item>\n- </item>\n- <item name=\"after-amazon-button\" xsi:type=\"array\">\n- <item name=\"component\" xsi:type=\"string\">uiComponent</item>\n- <item name=\"displayArea\" xsi:type=\"string\">after-amazon-button</item>\n- <item name=\"children\" xsi:type=\"array\">\n- <!-- after amazon button -->\n- </item>\n- </item>\n- </item>\n- </item>\n- </item>\n- </item>\n- </item>\n- </argument>\n- </arguments>\n- </referenceBlock>\n- </body>\n-</page>\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/view/frontend/templates/minicart-button.phtml",
                    "diff": "+<?php\n+/**\n+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+/**\n+ * @var \\Amazon\\Payment\\Block\\Minicart\\Button $block\n+ */\n+$config = [\n+ 'Amazon_Payment/js/amazon-button' => [\n+ 'buttonType' => 'PwA'\n+ ]\n+];\n+\n+$tooltipConfig = [\n+ 'dropdown' => [\n+ 'activeClass' => '_active'\n+ ]\n+];\n+?>\n+\n+<div id=\"minicart-amazon-pay-button\" class=\"amazon-minicart-container\">\n+ <div class=\"amazon-button-container\">\n+ <div class=\"amazon-button-container__cell\">\n+ <div id=\"PayWithAmazon\" class=\"login-with-amazon\" data-mage-init='<?php /* @noEscape */ echo json_encode($config); ?>'></div>\n+ </div>\n+\n+ <div class=\"amazon-button-container__cell\">\n+ <div class=\"field-tooltip toggle\">\n+ <span class=\"field-tooltip-action action-help\" data-mage-init='<?php /* @noEscape */ echo json_encode($tooltipConfig); ?>' data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"></span>\n+ <div class=\"field-tooltip-content\" data-target=\"dropdown\" aria-hidden=\"true\">Are you an Amazon customer? Pay now with address and payment details stored in your Amazon account.</div>\n+ </div>\n+ </div>\n+ </div>\n+</div>\n"
                },
                {
                    "change_type": "DELETE",
                    "old_path": "src/Payment/view/frontend/web/js/view/minicart-button.js",
                    "new_path": null,
                    "diff": "-/*global define*/\n-\n-define(\n- [\n- 'jquery',\n- \"uiComponent\",\n- 'ko',\n- 'Amazon_Payment/js/model/storage',\n- 'amazonPaymentConfig',\n- 'Magento_Customer/js/customer-data'\n- ],\n- function (\n- $,\n- Component,\n- ko,\n- amazonStorage,\n- amazonPaymentConfig,\n- customerData\n- ) {\n- 'use strict';\n-\n- return Component.extend({\n- defaults: {\n- template: 'Amazon_Payment/minicart/minicart-button'\n- },\n- isAmazonEnabled: ko.observable(amazonPaymentConfig.getValue('isPwaEnabled')),\n- isAmazonAccountLoggedIn: amazonStorage.isAmazonAccountLoggedIn,\n- isPwaVisible: amazonStorage.isPwaVisible,\n- initialize: function () {\n- var self = this;\n- this._super();\n-\n- var minicart = $(\"[data-block='minicart']\");\n-\n- // set observable flag on every minicart update\n- minicart.on('contentUpdated', function () {\n- var quoteHasExcludedItems = customerData.get('cart')().amazon_quote_has_excluded_item;\n- amazonStorage.isQuoteDirty(quoteHasExcludedItems);\n- });\n- }\n- });\n- }\n-);\n"
                },
                {
                    "change_type": "DELETE",
                    "old_path": "src/Payment/view/frontend/web/template/minicart/minicart-button.html",
                    "new_path": null,
                    "diff": "-<!--\n-/**\n- * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\").\n- * You may not use this file except in compliance with the License.\n- * A copy of the License is located at\n- *\n- * http://aws.amazon.com/apache2.0\n- *\n- * or in the \"license\" file accompanying this file. This file is distributed\n- * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n- * express or implied. See the License for the specific language governing\n- * permissions and limitations under the License.\n- */\n--->\n-\n-<!-- ko if: isPwaVisible -->\n- <div id=\"minicart-amazon-pay-button\" class=\"amazon-minicart-container\">\n- <!-- ko template: 'Amazon_Payment/checkout-button' --><!-- /ko -->\n- </div>\n-<!--/ko-->\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/Observer/AddAmazonButton.php",
                    "diff": "+<?php\n+/**\n+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+namespace Amazon\\Payment\\Observer;\n+\n+use Magento\\Framework\\Event\\ObserverInterface;\n+use Magento\\Framework\\Event\\Observer;\n+use Amazon\\Core\\Helper\\Data;\n+\n+class AddAmazonButton implements ObserverInterface\n+{\n+ /**\n+ * @var Data\n+ */\n+ protected $coreHelper;\n+\n+ /**\n+ * @param Data $coreHelper\n+ */\n+ public function __construct(\n+ Data $coreHelper\n+ ) {\n+ $this->coreHelper = $coreHelper;\n+ }\n+\n+ public function execute(Observer $observer)\n+ {\n+ /** @var \\Magento\\Catalog\\Block\\ShortcutButtons $shortcutButtons */\n+ $shortcutButtons = $observer->getEvent()->getContainer();\n+\n+ if ($this->coreHelper->isPwaEnabled() && $this->coreHelper->isCurrentCurrencySupportedByAmazon()) {\n+\n+// $params = [\n+// 'shortcutValidator' => $this->shortcutFactory->create($observer->getEvent()->getCheckoutSession()),\n+// ];\n+ $params['checkoutSession'] = $observer->getEvent()->getCheckoutSession();\n+\n+ /** @var \\Magento\\Framework\\View\\Element\\Template $shortcut */\n+ $shortcut = $shortcutButtons->getLayout()->createBlock(\n+ 'Amazon\\Payment\\Block\\Minicart\\Button',\n+ '',\n+ $params\n+ );\n+\n+ $shortcut->setIsInCatalogProduct(\n+ $observer->getEvent()->getIsCatalogProduct()\n+ )->setShowOrPosition(\n+ $observer->getEvent()->getOrPosition()\n+ );\n+ $shortcutButtons->addShortcut($shortcut);\n+ }\n+ }\n+}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/etc/frontend/di.xml",
                    "new_path": "src/Payment/etc/frontend/di.xml",
                    "diff": "<argument name=\"methodCode\" xsi:type=\"const\">Amazon\\Payment\\Model\\Method\\Amazon::PAYMENT_METHOD_CODE</argument>\n</arguments>\n</virtualType>\n+ <type name=\"Amazon\\Payment\\Block\\Minicart\\Button\">\n+ <arguments>\n+ <argument name=\"data\" xsi:type=\"array\">\n+ <item name=\"template\" xsi:type=\"string\">Amazon_Payment::minicart-button.phtml</item>\n+ <item name=\"alias\" xsi:type=\"string\">amazon.button.mini-cart</item>\n+ <item name=\"button_id\" xsi:type=\"string\">PayWithAmazon</item>\n+ </argument>\n+ <argument name=\"payment\" xsi:type=\"object\">Amazon\\Payment\\Model\\Method\\Amazon</argument>\n+ </arguments>\n+ </type>\n</config>\n\\ No newline at end of file\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/etc/frontend/events.xml",
                    "diff": "+<?xml version=\"1.0\"?>\n+<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:Event/etc/events.xsd\">\n+ <event name=\"shortcut_buttons_container\">\n+ <observer name=\"amazon_buttons\" instance=\"Amazon\\Payment\\Observer\\AddAmazonButton\"/>\n+ </event>\n+</config>\n"
                },
                {
                    "change_type": "DELETE",
                    "old_path": "src/Payment/view/frontend/layout/default.xml",
                    "new_path": null,
                    "diff": "-<?xml version=\"1.0\"?>\n-<!--\n-/**\n- * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\").\n- * You may not use this file except in compliance with the License.\n- * A copy of the License is located at\n- *\n- * http://aws.amazon.com/apache2.0\n- *\n- * or in the \"license\" file accompanying this file. This file is distributed\n- * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n- * express or implied. See the License for the specific language governing\n- * permissions and limitations under the License.\n- */\n--->\n-<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n- <body>\n- <referenceBlock name=\"minicart\">\n- <arguments>\n- <argument name=\"jsLayout\" xsi:type=\"array\">\n- <item name=\"components\" xsi:type=\"array\">\n- <item name=\"minicart_content\" xsi:type=\"array\">\n- <item name=\"children\" xsi:type=\"array\">\n- <item name=\"amazon_minicart_pay\" xsi:type=\"array\">\n- <item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/minicart-button</item>\n- <item name=\"config\" xsi:type=\"array\">\n- <item name=\"displayArea\" xsi:type=\"string\">extraInfo</item>\n- <item name=\"tooltip\" xsi:type=\"string\" translate=\"true\">Are you an Amazon customer? Pay now with address and payment details stored in your Amazon account.</item>\n- </item>\n- <item name=\"children\" xsi:type=\"array\">\n- <item name=\"before-amazon-button\" xsi:type=\"array\">\n- <item name=\"component\" xsi:type=\"string\">uiComponent</item>\n- <item name=\"displayArea\" xsi:type=\"string\">before-amazon-button</item>\n- <item name=\"children\" xsi:type=\"array\">\n- <!-- before amazon button -->\n- </item>\n- </item>\n- <item name=\"after-amazon-button\" xsi:type=\"array\">\n- <item name=\"component\" xsi:type=\"string\">uiComponent</item>\n- <item name=\"displayArea\" xsi:type=\"string\">after-amazon-button</item>\n- <item name=\"children\" xsi:type=\"array\">\n- <!-- after amazon button -->\n- </item>\n- </item>\n- </item>\n- </item>\n- </item>\n- </item>\n- </item>\n- </argument>\n- </arguments>\n- </referenceBlock>\n- </body>\n-</page>\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/view/frontend/templates/minicart-button.phtml",
                    "diff": "+<?php\n+/**\n+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+/**\n+ * @var \\Amazon\\Payment\\Block\\Minicart\\Button $block\n+ */\n+$config = [\n+ 'Amazon_Payment/js/amazon-button' => [\n+ 'buttonType' => 'PwA'\n+ ]\n+];\n+\n+$tooltipConfig = [\n+ 'dropdown' => [\n+ 'activeClass' => '_active'\n+ ]\n+];\n+?>\n+\n+<div id=\"minicart-amazon-pay-button\" class=\"amazon-minicart-container\">\n+ <div class=\"amazon-button-container\">\n+ <div class=\"amazon-button-container__cell\">\n+ <div id=\"PayWithAmazon\" class=\"login-with-amazon\" data-mage-init='<?php /* @noEscape */ echo json_encode($config); ?>'></div>\n+ </div>\n+\n+ <div class=\"amazon-button-container__cell\">\n+ <div class=\"field-tooltip toggle\">\n+ <span class=\"field-tooltip-action action-help\" data-mage-init='<?php /* @noEscape */ echo json_encode($tooltipConfig); ?>' data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"></span>\n+ <div class=\"field-tooltip-content\" data-target=\"dropdown\" aria-hidden=\"true\">Are you an Amazon customer? Pay now with address and payment details stored in your Amazon account.</div>\n+ </div>\n+ </div>\n+ </div>\n+</div>\n"
                },
                {
                    "change_type": "DELETE",
                    "old_path": "src/Payment/view/frontend/web/js/view/minicart-button.js",
                    "new_path": null,
                    "diff": "-/*global define*/\n-\n-define(\n- [\n- 'jquery',\n- \"uiComponent\",\n- 'ko',\n- 'Amazon_Payment/js/model/storage',\n- 'amazonPaymentConfig',\n- 'Magento_Customer/js/customer-data'\n- ],\n- function (\n- $,\n- Component,\n- ko,\n- amazonStorage,\n- amazonPaymentConfig,\n- customerData\n- ) {\n- 'use strict';\n-\n- return Component.extend({\n- defaults: {\n- template: 'Amazon_Payment/minicart/minicart-button'\n- },\n- isAmazonEnabled: ko.observable(amazonPaymentConfig.getValue('isPwaEnabled')),\n- isAmazonAccountLoggedIn: amazonStorage.isAmazonAccountLoggedIn,\n- isPwaVisible: amazonStorage.isPwaVisible,\n- initialize: function () {\n- var self = this;\n- this._super();\n-\n- var minicart = $(\"[data-block='minicart']\");\n-\n- // set observable flag on every minicart update\n- minicart.on('contentUpdated', function () {\n- var quoteHasExcludedItems = customerData.get('cart')().amazon_quote_has_excluded_item;\n- amazonStorage.isQuoteDirty(quoteHasExcludedItems);\n- });\n- }\n- });\n- }\n-);\n"
                },
                {
                    "change_type": "DELETE",
                    "old_path": "src/Payment/view/frontend/web/template/minicart/minicart-button.html",
                    "new_path": null,
                    "diff": "-<!--\n-/**\n- * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\").\n- * You may not use this file except in compliance with the License.\n- * A copy of the License is located at\n- *\n- * http://aws.amazon.com/apache2.0\n- *\n- * or in the \"license\" file accompanying this file. This file is distributed\n- * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n- * express or implied. See the License for the specific language governing\n- * permissions and limitations under the License.\n- */\n--->\n-\n-<!-- ko if: isPwaVisible -->\n- <div id=\"minicart-amazon-pay-button\" class=\"amazon-minicart-container\">\n- <!-- ko template: 'Amazon_Payment/checkout-button' --><!-- /ko -->\n- </div>\n-<!--/ko-->\n"
                }
            ]
        }
    },
    "Row_15": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Correct display on cart and add display validator"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Correct display on cart and add display validator"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/Helper/Shortcut/CheckoutValidator.php",
                    "diff": "+<?php\n+/**\n+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+namespace Amazon\\Payment\\Helper\\Shortcut;\n+\n+class CheckoutValidator implements ValidatorInterface\n+{\n+ /**\n+ * @var \\Magento\\Checkout\\Model\\Session\n+ */\n+ private $_checkoutSession;\n+\n+ /**\n+ * @var \\Magento\\Payment\\Helper\\Data\n+ */\n+ private $_paymentData;\n+\n+ /**\n+ * @var Validator\n+ */\n+ private $_shortcutValidator;\n+\n+ /**\n+ * @param \\Magento\\Checkout\\Model\\Session $checkoutSession\n+ * @param Validator $shortcutValidator\n+ * @param \\Magento\\Payment\\Helper\\Data $paymentData\n+ */\n+ public function __construct(\n+ \\Magento\\Checkout\\Model\\Session $checkoutSession,\n+ Validator $shortcutValidator,\n+ \\Magento\\Payment\\Helper\\Data $paymentData\n+ ) {\n+ $this->_checkoutSession = $checkoutSession;\n+ $this->_paymentData = $paymentData;\n+ $this->_shortcutValidator = $shortcutValidator;\n+ }\n+\n+ /**\n+ * Validates shortcut\n+ *\n+ * @param string $code\n+ * @param bool $isInCatalog\n+ * @return bool\n+ */\n+ public function validate($code, $isInCatalog)\n+ {\n+ return false;\n+ return $this->_shortcutValidator->isContextAvailable($code, $isInCatalog)\n+ && $this->_shortcutValidator->isPriceOrSetAvailable($isInCatalog)\n+ && $this->isMethodQuoteAvailable($code, $isInCatalog)\n+ && $this->isQuoteSummaryValid($isInCatalog);\n+ }\n+\n+ /**\n+ * Checks payment method and quote availability\n+ *\n+ * @param string $paymentCode\n+ * @param bool $isInCatalog\n+ * @return bool\n+ */\n+ public function isMethodQuoteAvailable($paymentCode, $isInCatalog)\n+ {\n+ $quote = $isInCatalog ? null : $this->_checkoutSession->getQuote();\n+ // check payment method availability\n+ /** @var \\Magento\\Payment\\Model\\Method\\AbstractMethod $methodInstance */\n+ $methodInstance = $this->_paymentData->getMethodInstance($paymentCode);\n+ if (!$methodInstance->isAvailable($quote)) {\n+ return false;\n+ }\n+ return true;\n+ }\n+\n+ /**\n+ * Validates minimum quote amount and zero grand total\n+ *\n+ * @param bool $isInCatalog\n+ * @return bool\n+ */\n+ public function isQuoteSummaryValid($isInCatalog)\n+ {\n+ $quote = $isInCatalog ? null : $this->_checkoutSession->getQuote();\n+ // validate minimum quote amount and validate quote for zero grandtotal\n+ if (null !== $quote && (!$quote->validateMinimumAmount() || !$quote->getGrandTotal())) {\n+ return false;\n+ }\n+ return true;\n+ }\n+}\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/Helper/Shortcut/Factory.php",
                    "diff": "+<?php\n+/**\n+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+namespace Amazon\\Payment\\Helper\\Shortcut;\n+\n+class Factory\n+{\n+ /**\n+ * Default validator\n+ */\n+ const DEFAULT_VALIDATOR = 'Amazon\\Payment\\Helper\\Shortcut\\Validator';\n+\n+ /**\n+ * Checkout validator\n+ */\n+ const CHECKOUT_VALIDATOR = 'Amazon\\Payment\\Helper\\Shortcut\\CheckoutValidator';\n+\n+ /**\n+ * @var \\Magento\\Framework\\ObjectManagerInterface\n+ */\n+ protected $_objectManager;\n+\n+ /**\n+ * @param \\Magento\\Framework\\ObjectManagerInterface $objectManager\n+ */\n+ public function __construct(\\Magento\\Framework\\ObjectManagerInterface $objectManager)\n+ {\n+ $this->_objectManager = $objectManager;\n+ }\n+\n+ /**\n+ * @param mixed $parameter\n+ * @return \\Amazon\\Payment\\Helper\\Shortcut\\ValidatorInterface\n+ */\n+ public function create($parameter = null)\n+ {\n+ $instanceName = self::DEFAULT_VALIDATOR;\n+ if (is_object($parameter) && $parameter instanceof \\Magento\\Checkout\\Model\\Session) {\n+ $instanceName = self::CHECKOUT_VALIDATOR;\n+ }\n+ return $this->_objectManager->create($instanceName);\n+ }\n+}\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/Helper/Shortcut/Validator.php",
                    "diff": "+<?php\n+/**\n+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+namespace Amazon\\Payment\\Helper\\Shortcut;\n+\n+/**\n+ * @SuppressWarnings(PHPMD.UnusedPrivateField)\n+ */\n+class Validator implements ValidatorInterface\n+{\n+ /**\n+ * @var \\Amazon\\Payment\\Model\\Config\n+ */\n+ private $_amazonConfigFactory;\n+\n+ /**\n+ * @var \\Magento\\Framework\\Registry\n+ */\n+ private $_registry;\n+\n+ /**\n+ * @var \\Magento\\Catalog\\Model\\ProductTypes\\ConfigInterface\n+ */\n+ private $_productTypeConfig;\n+\n+ /**\n+ * @var \\Magento\\Payment\\Helper\\Data\n+ */\n+ private $_paymentData;\n+\n+ /**\n+ * @param \\Amazon\\Payment\\Model\\ConfigFactory $amazonConfig\n+ * @param \\Magento\\Framework\\Registry $registry\n+ * @param \\Magento\\Catalog\\Model\\ProductTypes\\ConfigInterface $productTypeConfig\n+ * @param \\Magento\\Payment\\Helper\\Data $paymentData\n+ */\n+ public function __construct(\n+ \\Amazon\\Payment\\Model\\Config $amazonConfig,\n+ \\Magento\\Framework\\Registry $registry,\n+ \\Magento\\Catalog\\Model\\ProductTypes\\ConfigInterface $productTypeConfig,\n+ \\Magento\\Payment\\Helper\\Data $paymentData\n+ ) {\n+ $this->_amazonConfig = $amazonConfig;\n+ $this->_registry = $registry;\n+ $this->_productTypeConfig = $productTypeConfig;\n+ $this->_paymentData = $paymentData;\n+ }\n+\n+ /**\n+ * Validates shortcut\n+ *\n+ * @param string $code\n+ * @param bool $isInCatalog\n+ * @return bool\n+ */\n+ public function validate($code, $isInCatalog)\n+ {\n+ return $this->isContextAvailable($code, $isInCatalog)\n+ && $this->isPriceOrSetAvailable($isInCatalog)\n+ && $this->isMethodAvailable($code);\n+ }\n+\n+ /**\n+ * Checks visibility of context (cart or product page)\n+ *\n+ * @param string $paymentCode Payment method code\n+ * @param bool $isInCatalog\n+ * @return bool\n+ */\n+ public function isContextAvailable($paymentCode, $isInCatalog)\n+ {\n+ /** @var \\Magento\\Paypal\\Model\\Config $config */\n+ $config = $this->_amazonConfigFactory->create();\n+ $config->setMethod($paymentCode);\n+\n+ // check visibility on product page\n+ if ($isInCatalog && $config->getValue('pwa_pp_button_is_visible')) {\n+ return true;\n+ }\n+ return false;\n+ }\n+\n+ /**\n+ * Check is product available depending on final price or type set(configurable)\n+ *\n+ * @param bool $isInCatalog\n+ * @return bool\n+ */\n+ public function isPriceOrSetAvailable($isInCatalog)\n+ {\n+ if ($isInCatalog) {\n+ // Show PayPal shortcut on a product view page only if product has nonzero price\n+ /** @var $currentProduct \\Magento\\Catalog\\Model\\Product */\n+ $currentProduct = $this->_registry->registry('current_product');\n+ if ($currentProduct !== null) {\n+ $productPrice = (double)$currentProduct->getFinalPrice();\n+ $typeInstance = $currentProduct->getTypeInstance();\n+ if (empty($productPrice)\n+ && !$this->_productTypeConfig->isProductSet($currentProduct->getTypeId())\n+ && !$typeInstance->canConfigure($currentProduct)\n+ ) {\n+ return false;\n+ }\n+ }\n+ }\n+ return true;\n+ }\n+\n+ /**\n+ * Checks payment method and quote availability\n+ *\n+ * @param string $paymentCode\n+ * @return bool\n+ */\n+ public function isMethodAvailable($paymentCode)\n+ {\n+ // check payment method availability\n+ /** @var \\Magento\\Payment\\Model\\Method\\AbstractMethod $methodInstance */\n+ $methodInstance = $this->_paymentData->getMethodInstance($paymentCode);\n+ if (!$methodInstance->isAvailable()) {\n+ return false;\n+ }\n+ return true;\n+ }\n+}\n"
                },
                {
                    "change_type": "RENAME",
                    "old_path": "src/Payment/view/frontend/layout/checkout_cart_index.xml",
                    "new_path": "src/Payment/Helper/Shortcut/ValidatorInterface.php",
                    "diff": "-<?xml version=\"1.0\"?>\n-<!--\n+<?php\n/**\n* Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n*\n* express or implied. See the License for the specific language governing\n* permissions and limitations under the License.\n*/\n--->\n-<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" layout=\"1column\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n- <body>\n- <referenceContainer name=\"checkout.cart.methods\">\n- <block class=\"Amazon\\Payment\\Block\\PaymentLink\" name=\"checkout.cart.methods.amazon\" after=\"checkout.cart.methods.onepage.bottom\" template=\"Amazon_Payment::payment-link.phtml\" />\n- </referenceContainer>\n- </body>\n-</page>\n\\ No newline at end of file\n+\n+namespace Amazon\\Payment\\Helper\\Shortcut;\n+\n+interface ValidatorInterface\n+{\n+ /**\n+ * Validates shortcut\n+ *\n+ * @param string $code\n+ * @param bool $isInCatalog\n+ * @return bool\n+ */\n+ public function validate($code, $isInCatalog);\n+}\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/Model/Config.php",
                    "diff": "+<?php\n+/**\n+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+namespace Amazon\\Payment\\Model;\n+\n+use Magento\\Framework\\App\\Config\\ScopeConfigInterface;\n+\n+class Config extends \\Magento\\Payment\\Gateway\\Config\\Config {}\n\\ No newline at end of file\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Observer/AddAmazonButton.php",
                    "new_path": "src/Payment/Observer/AddAmazonButton.php",
                    "diff": "@@ -18,6 +18,7 @@ namespace Amazon\\Payment\\Observer;\nuse Magento\\Framework\\Event\\ObserverInterface;\nuse Magento\\Framework\\Event\\Observer;\nuse Amazon\\Core\\Helper\\Data;\n+use Amazon\\Payment\\Helper\\Shortcut\\Factory as ShortcutFactory;\nclass AddAmazonButton implements ObserverInterface\n{\n@@ -26,13 +27,21 @@ class AddAmazonButton implements ObserverInterface\n*/\nprotected $coreHelper;\n+ /**\n+ * @var ShortcutFactory\n+ */\n+ protected $shortcutFactory;\n+\n/**\n* @param Data $coreHelper\n+ * @param ShortcutFactory $shortcutFactory\n*/\npublic function __construct(\n- Data $coreHelper\n+ Data $coreHelper,\n+ ShortcutFactory $shortcutFactory\n) {\n$this->coreHelper = $coreHelper;\n+ $this->shortcutFactory = $shortcutFactory;\n}\npublic function execute(Observer $observer)\n@@ -42,9 +51,9 @@ class AddAmazonButton implements ObserverInterface\nif ($this->coreHelper->isPwaEnabled() && $this->coreHelper->isCurrentCurrencySupportedByAmazon()) {\n-// $params = [\n-// 'shortcutValidator' => $this->shortcutFactory->create($observer->getEvent()->getCheckoutSession()),\n-// ];\n+ $params = [\n+ 'shortcutValidator' => $this->shortcutFactory->create($observer->getEvent()->getCheckoutSession()),\n+ ];\n$params['checkoutSession'] = $observer->getEvent()->getCheckoutSession();\n/** @var \\Magento\\Framework\\View\\Element\\Template $shortcut */\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/etc/di.xml",
                    "new_path": "src/Payment/etc/di.xml",
                    "diff": "<plugin name=\"amazon_payment_webapi_error_processor\" type=\"Amazon\\Payment\\Plugin\\WebapiErrorProcessor\" sortOrder=\"1\" />\n</type>\n<type name=\"Magento\\Framework\\Mail\\MessageInterface\" shared=\"false\" />\n+ <type name=\"Amazon\\Payment\\Model\\Config\">\n+ <arguments>\n+ <argument name=\"methodCode\" xsi:type=\"const\">Amazon\\Payment\\Model\\Method\\Amazon::PAYMENT_METHOD_CODE</argument>\n+ </arguments>\n+ </type>\n+ <type name=\"Amazon\\Payment\\Helper\\Shortcut\\Validator\">\n+ <arguments>\n+ <argument name=\"amazonConfig\" xsi:type=\"object\">Amazon\\Payment\\Model\\Config</argument>\n+ </arguments>\n+ </type>\n</config>\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/etc/frontend/di.xml",
                    "new_path": "src/Payment/etc/frontend/di.xml",
                    "diff": "<?xml version=\"1.0\"?>\n<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:ObjectManager/etc/config.xsd\">\n- <virtualType name=\"Amazon\\Payment\\Model\\Config\" type=\"Magento\\Payment\\Gateway\\Config\\Config\">\n- <arguments>\n- <argument name=\"methodCode\" xsi:type=\"const\">Amazon\\Payment\\Model\\Method\\Amazon::PAYMENT_METHOD_CODE</argument>\n- </arguments>\n- </virtualType>\n<type name=\"Amazon\\Payment\\Block\\Minicart\\Button\">\n<arguments>\n<argument name=\"data\" xsi:type=\"array\">\n- <item name=\"template\" xsi:type=\"string\">Amazon_Payment::minicart-button.phtml</item>\n+ <item name=\"template\" xsi:type=\"string\">Amazon_Payment::payment-link.phtml</item>\n<item name=\"alias\" xsi:type=\"string\">amazon.button.mini-cart</item>\n- <item name=\"button_id\" xsi:type=\"string\">PayWithAmazon</item>\n</argument>\n<argument name=\"payment\" xsi:type=\"object\">Amazon\\Payment\\Model\\Method\\Amazon</argument>\n</arguments>\n"
                },
                {
                    "change_type": "DELETE",
                    "old_path": "src/Payment/view/frontend/templates/minicart-button.phtml",
                    "new_path": null,
                    "diff": "-<?php\n-/**\n- * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\").\n- * You may not use this file except in compliance with the License.\n- * A copy of the License is located at\n- *\n- * http://aws.amazon.com/apache2.0\n- *\n- * or in the \"license\" file accompanying this file. This file is distributed\n- * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n- * express or implied. See the License for the specific language governing\n- * permissions and limitations under the License.\n- */\n-\n-/**\n- * @var \\Amazon\\Payment\\Block\\Minicart\\Button $block\n- */\n-$config = [\n- 'Amazon_Payment/js/amazon-button' => [\n- 'buttonType' => 'PwA'\n- ]\n-];\n-\n-$tooltipConfig = [\n- 'dropdown' => [\n- 'activeClass' => '_active'\n- ]\n-];\n-?>\n-\n-<div id=\"minicart-amazon-pay-button\" class=\"amazon-minicart-container\">\n- <div class=\"amazon-button-container\">\n- <div class=\"amazon-button-container__cell\">\n- <div id=\"PayWithAmazon\" class=\"login-with-amazon\" data-mage-init='<?php /* @noEscape */ echo json_encode($config); ?>'></div>\n- </div>\n-\n- <div class=\"amazon-button-container__cell\">\n- <div class=\"field-tooltip toggle\">\n- <span class=\"field-tooltip-action action-help\" data-mage-init='<?php /* @noEscape */ echo json_encode($tooltipConfig); ?>' data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"></span>\n- <div class=\"field-tooltip-content\" data-target=\"dropdown\" aria-hidden=\"true\">Are you an Amazon customer? Pay now with address and payment details stored in your Amazon account.</div>\n- </div>\n- </div>\n- </div>\n-</div>\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/Helper/Shortcut/CheckoutValidator.php",
                    "diff": "+<?php\n+/**\n+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+namespace Amazon\\Payment\\Helper\\Shortcut;\n+\n+class CheckoutValidator implements ValidatorInterface\n+{\n+ /**\n+ * @var \\Magento\\Checkout\\Model\\Session\n+ */\n+ private $_checkoutSession;\n+\n+ /**\n+ * @var \\Magento\\Payment\\Helper\\Data\n+ */\n+ private $_paymentData;\n+\n+ /**\n+ * @var Validator\n+ */\n+ private $_shortcutValidator;\n+\n+ /**\n+ * @param \\Magento\\Checkout\\Model\\Session $checkoutSession\n+ * @param Validator $shortcutValidator\n+ * @param \\Magento\\Payment\\Helper\\Data $paymentData\n+ */\n+ public function __construct(\n+ \\Magento\\Checkout\\Model\\Session $checkoutSession,\n+ Validator $shortcutValidator,\n+ \\Magento\\Payment\\Helper\\Data $paymentData\n+ ) {\n+ $this->_checkoutSession = $checkoutSession;\n+ $this->_paymentData = $paymentData;\n+ $this->_shortcutValidator = $shortcutValidator;\n+ }\n+\n+ /**\n+ * Validates shortcut\n+ *\n+ * @param string $code\n+ * @param bool $isInCatalog\n+ * @return bool\n+ */\n+ public function validate($code, $isInCatalog)\n+ {\n+ return false;\n+ return $this->_shortcutValidator->isContextAvailable($code, $isInCatalog)\n+ && $this->_shortcutValidator->isPriceOrSetAvailable($isInCatalog)\n+ && $this->isMethodQuoteAvailable($code, $isInCatalog)\n+ && $this->isQuoteSummaryValid($isInCatalog);\n+ }\n+\n+ /**\n+ * Checks payment method and quote availability\n+ *\n+ * @param string $paymentCode\n+ * @param bool $isInCatalog\n+ * @return bool\n+ */\n+ public function isMethodQuoteAvailable($paymentCode, $isInCatalog)\n+ {\n+ $quote = $isInCatalog ? null : $this->_checkoutSession->getQuote();\n+ // check payment method availability\n+ /** @var \\Magento\\Payment\\Model\\Method\\AbstractMethod $methodInstance */\n+ $methodInstance = $this->_paymentData->getMethodInstance($paymentCode);\n+ if (!$methodInstance->isAvailable($quote)) {\n+ return false;\n+ }\n+ return true;\n+ }\n+\n+ /**\n+ * Validates minimum quote amount and zero grand total\n+ *\n+ * @param bool $isInCatalog\n+ * @return bool\n+ */\n+ public function isQuoteSummaryValid($isInCatalog)\n+ {\n+ $quote = $isInCatalog ? null : $this->_checkoutSession->getQuote();\n+ // validate minimum quote amount and validate quote for zero grandtotal\n+ if (null !== $quote && (!$quote->validateMinimumAmount() || !$quote->getGrandTotal())) {\n+ return false;\n+ }\n+ return true;\n+ }\n+}\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/Helper/Shortcut/Factory.php",
                    "diff": "+<?php\n+/**\n+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+namespace Amazon\\Payment\\Helper\\Shortcut;\n+\n+class Factory\n+{\n+ /**\n+ * Default validator\n+ */\n+ const DEFAULT_VALIDATOR = 'Amazon\\Payment\\Helper\\Shortcut\\Validator';\n+\n+ /**\n+ * Checkout validator\n+ */\n+ const CHECKOUT_VALIDATOR = 'Amazon\\Payment\\Helper\\Shortcut\\CheckoutValidator';\n+\n+ /**\n+ * @var \\Magento\\Framework\\ObjectManagerInterface\n+ */\n+ protected $_objectManager;\n+\n+ /**\n+ * @param \\Magento\\Framework\\ObjectManagerInterface $objectManager\n+ */\n+ public function __construct(\\Magento\\Framework\\ObjectManagerInterface $objectManager)\n+ {\n+ $this->_objectManager = $objectManager;\n+ }\n+\n+ /**\n+ * @param mixed $parameter\n+ * @return \\Amazon\\Payment\\Helper\\Shortcut\\ValidatorInterface\n+ */\n+ public function create($parameter = null)\n+ {\n+ $instanceName = self::DEFAULT_VALIDATOR;\n+ if (is_object($parameter) && $parameter instanceof \\Magento\\Checkout\\Model\\Session) {\n+ $instanceName = self::CHECKOUT_VALIDATOR;\n+ }\n+ return $this->_objectManager->create($instanceName);\n+ }\n+}\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/Helper/Shortcut/Validator.php",
                    "diff": "+<?php\n+/**\n+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+namespace Amazon\\Payment\\Helper\\Shortcut;\n+\n+/**\n+ * @SuppressWarnings(PHPMD.UnusedPrivateField)\n+ */\n+class Validator implements ValidatorInterface\n+{\n+ /**\n+ * @var \\Amazon\\Payment\\Model\\Config\n+ */\n+ private $_amazonConfigFactory;\n+\n+ /**\n+ * @var \\Magento\\Framework\\Registry\n+ */\n+ private $_registry;\n+\n+ /**\n+ * @var \\Magento\\Catalog\\Model\\ProductTypes\\ConfigInterface\n+ */\n+ private $_productTypeConfig;\n+\n+ /**\n+ * @var \\Magento\\Payment\\Helper\\Data\n+ */\n+ private $_paymentData;\n+\n+ /**\n+ * @param \\Amazon\\Payment\\Model\\ConfigFactory $amazonConfig\n+ * @param \\Magento\\Framework\\Registry $registry\n+ * @param \\Magento\\Catalog\\Model\\ProductTypes\\ConfigInterface $productTypeConfig\n+ * @param \\Magento\\Payment\\Helper\\Data $paymentData\n+ */\n+ public function __construct(\n+ \\Amazon\\Payment\\Model\\Config $amazonConfig,\n+ \\Magento\\Framework\\Registry $registry,\n+ \\Magento\\Catalog\\Model\\ProductTypes\\ConfigInterface $productTypeConfig,\n+ \\Magento\\Payment\\Helper\\Data $paymentData\n+ ) {\n+ $this->_amazonConfig = $amazonConfig;\n+ $this->_registry = $registry;\n+ $this->_productTypeConfig = $productTypeConfig;\n+ $this->_paymentData = $paymentData;\n+ }\n+\n+ /**\n+ * Validates shortcut\n+ *\n+ * @param string $code\n+ * @param bool $isInCatalog\n+ * @return bool\n+ */\n+ public function validate($code, $isInCatalog)\n+ {\n+ return $this->isContextAvailable($code, $isInCatalog)\n+ && $this->isPriceOrSetAvailable($isInCatalog)\n+ && $this->isMethodAvailable($code);\n+ }\n+\n+ /**\n+ * Checks visibility of context (cart or product page)\n+ *\n+ * @param string $paymentCode Payment method code\n+ * @param bool $isInCatalog\n+ * @return bool\n+ */\n+ public function isContextAvailable($paymentCode, $isInCatalog)\n+ {\n+ /** @var \\Magento\\Paypal\\Model\\Config $config */\n+ $config = $this->_amazonConfigFactory->create();\n+ $config->setMethod($paymentCode);\n+\n+ // check visibility on product page\n+ if ($isInCatalog && $config->getValue('pwa_pp_button_is_visible')) {\n+ return true;\n+ }\n+ return false;\n+ }\n+\n+ /**\n+ * Check is product available depending on final price or type set(configurable)\n+ *\n+ * @param bool $isInCatalog\n+ * @return bool\n+ */\n+ public function isPriceOrSetAvailable($isInCatalog)\n+ {\n+ if ($isInCatalog) {\n+ // Show PayPal shortcut on a product view page only if product has nonzero price\n+ /** @var $currentProduct \\Magento\\Catalog\\Model\\Product */\n+ $currentProduct = $this->_registry->registry('current_product');\n+ if ($currentProduct !== null) {\n+ $productPrice = (double)$currentProduct->getFinalPrice();\n+ $typeInstance = $currentProduct->getTypeInstance();\n+ if (empty($productPrice)\n+ && !$this->_productTypeConfig->isProductSet($currentProduct->getTypeId())\n+ && !$typeInstance->canConfigure($currentProduct)\n+ ) {\n+ return false;\n+ }\n+ }\n+ }\n+ return true;\n+ }\n+\n+ /**\n+ * Checks payment method and quote availability\n+ *\n+ * @param string $paymentCode\n+ * @return bool\n+ */\n+ public function isMethodAvailable($paymentCode)\n+ {\n+ // check payment method availability\n+ /** @var \\Magento\\Payment\\Model\\Method\\AbstractMethod $methodInstance */\n+ $methodInstance = $this->_paymentData->getMethodInstance($paymentCode);\n+ if (!$methodInstance->isAvailable()) {\n+ return false;\n+ }\n+ return true;\n+ }\n+}\n"
                },
                {
                    "change_type": "RENAME",
                    "old_path": "src/Payment/view/frontend/layout/checkout_cart_index.xml",
                    "new_path": "src/Payment/Helper/Shortcut/ValidatorInterface.php",
                    "diff": "-<?xml version=\"1.0\"?>\n-<!--\n+<?php\n/**\n* Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n*\n* express or implied. See the License for the specific language governing\n* permissions and limitations under the License.\n*/\n--->\n-<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" layout=\"1column\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n- <body>\n- <referenceContainer name=\"checkout.cart.methods\">\n- <block class=\"Amazon\\Payment\\Block\\PaymentLink\" name=\"checkout.cart.methods.amazon\" after=\"checkout.cart.methods.onepage.bottom\" template=\"Amazon_Payment::payment-link.phtml\" />\n- </referenceContainer>\n- </body>\n-</page>\n\\ No newline at end of file\n+\n+namespace Amazon\\Payment\\Helper\\Shortcut;\n+\n+interface ValidatorInterface\n+{\n+ /**\n+ * Validates shortcut\n+ *\n+ * @param string $code\n+ * @param bool $isInCatalog\n+ * @return bool\n+ */\n+ public function validate($code, $isInCatalog);\n+}\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/Model/Config.php",
                    "diff": "+<?php\n+/**\n+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+namespace Amazon\\Payment\\Model;\n+\n+use Magento\\Framework\\App\\Config\\ScopeConfigInterface;\n+\n+class Config extends \\Magento\\Payment\\Gateway\\Config\\Config {}\n\\ No newline at end of file\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Observer/AddAmazonButton.php",
                    "new_path": "src/Payment/Observer/AddAmazonButton.php",
                    "diff": "@@ -18,6 +18,7 @@ namespace Amazon\\Payment\\Observer;\nuse Magento\\Framework\\Event\\ObserverInterface;\nuse Magento\\Framework\\Event\\Observer;\nuse Amazon\\Core\\Helper\\Data;\n+use Amazon\\Payment\\Helper\\Shortcut\\Factory as ShortcutFactory;\nclass AddAmazonButton implements ObserverInterface\n{\n@@ -26,13 +27,21 @@ class AddAmazonButton implements ObserverInterface\n*/\nprotected $coreHelper;\n+ /**\n+ * @var ShortcutFactory\n+ */\n+ protected $shortcutFactory;\n+\n/**\n* @param Data $coreHelper\n+ * @param ShortcutFactory $shortcutFactory\n*/\npublic function __construct(\n- Data $coreHelper\n+ Data $coreHelper,\n+ ShortcutFactory $shortcutFactory\n) {\n$this->coreHelper = $coreHelper;\n+ $this->shortcutFactory = $shortcutFactory;\n}\npublic function execute(Observer $observer)\n@@ -42,9 +51,9 @@ class AddAmazonButton implements ObserverInterface\nif ($this->coreHelper->isPwaEnabled() && $this->coreHelper->isCurrentCurrencySupportedByAmazon()) {\n-// $params = [\n-// 'shortcutValidator' => $this->shortcutFactory->create($observer->getEvent()->getCheckoutSession()),\n-// ];\n+ $params = [\n+ 'shortcutValidator' => $this->shortcutFactory->create($observer->getEvent()->getCheckoutSession()),\n+ ];\n$params['checkoutSession'] = $observer->getEvent()->getCheckoutSession();\n/** @var \\Magento\\Framework\\View\\Element\\Template $shortcut */\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/etc/di.xml",
                    "new_path": "src/Payment/etc/di.xml",
                    "diff": "<plugin name=\"amazon_payment_webapi_error_processor\" type=\"Amazon\\Payment\\Plugin\\WebapiErrorProcessor\" sortOrder=\"1\" />\n</type>\n<type name=\"Magento\\Framework\\Mail\\MessageInterface\" shared=\"false\" />\n+ <type name=\"Amazon\\Payment\\Model\\Config\">\n+ <arguments>\n+ <argument name=\"methodCode\" xsi:type=\"const\">Amazon\\Payment\\Model\\Method\\Amazon::PAYMENT_METHOD_CODE</argument>\n+ </arguments>\n+ </type>\n+ <type name=\"Amazon\\Payment\\Helper\\Shortcut\\Validator\">\n+ <arguments>\n+ <argument name=\"amazonConfig\" xsi:type=\"object\">Amazon\\Payment\\Model\\Config</argument>\n+ </arguments>\n+ </type>\n</config>\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/etc/frontend/di.xml",
                    "new_path": "src/Payment/etc/frontend/di.xml",
                    "diff": "<?xml version=\"1.0\"?>\n<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:ObjectManager/etc/config.xsd\">\n- <virtualType name=\"Amazon\\Payment\\Model\\Config\" type=\"Magento\\Payment\\Gateway\\Config\\Config\">\n- <arguments>\n- <argument name=\"methodCode\" xsi:type=\"const\">Amazon\\Payment\\Model\\Method\\Amazon::PAYMENT_METHOD_CODE</argument>\n- </arguments>\n- </virtualType>\n<type name=\"Amazon\\Payment\\Block\\Minicart\\Button\">\n<arguments>\n<argument name=\"data\" xsi:type=\"array\">\n- <item name=\"template\" xsi:type=\"string\">Amazon_Payment::minicart-button.phtml</item>\n+ <item name=\"template\" xsi:type=\"string\">Amazon_Payment::payment-link.phtml</item>\n<item name=\"alias\" xsi:type=\"string\">amazon.button.mini-cart</item>\n- <item name=\"button_id\" xsi:type=\"string\">PayWithAmazon</item>\n</argument>\n<argument name=\"payment\" xsi:type=\"object\">Amazon\\Payment\\Model\\Method\\Amazon</argument>\n</arguments>\n"
                },
                {
                    "change_type": "DELETE",
                    "old_path": "src/Payment/view/frontend/templates/minicart-button.phtml",
                    "new_path": null,
                    "diff": "-<?php\n-/**\n- * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\").\n- * You may not use this file except in compliance with the License.\n- * A copy of the License is located at\n- *\n- * http://aws.amazon.com/apache2.0\n- *\n- * or in the \"license\" file accompanying this file. This file is distributed\n- * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n- * express or implied. See the License for the specific language governing\n- * permissions and limitations under the License.\n- */\n-\n-/**\n- * @var \\Amazon\\Payment\\Block\\Minicart\\Button $block\n- */\n-$config = [\n- 'Amazon_Payment/js/amazon-button' => [\n- 'buttonType' => 'PwA'\n- ]\n-];\n-\n-$tooltipConfig = [\n- 'dropdown' => [\n- 'activeClass' => '_active'\n- ]\n-];\n-?>\n-\n-<div id=\"minicart-amazon-pay-button\" class=\"amazon-minicart-container\">\n- <div class=\"amazon-button-container\">\n- <div class=\"amazon-button-container__cell\">\n- <div id=\"PayWithAmazon\" class=\"login-with-amazon\" data-mage-init='<?php /* @noEscape */ echo json_encode($config); ?>'></div>\n- </div>\n-\n- <div class=\"amazon-button-container__cell\">\n- <div class=\"field-tooltip toggle\">\n- <span class=\"field-tooltip-action action-help\" data-mage-init='<?php /* @noEscape */ echo json_encode($tooltipConfig); ?>' data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"></span>\n- <div class=\"field-tooltip-content\" data-target=\"dropdown\" aria-hidden=\"true\">Are you an Amazon customer? Pay now with address and payment details stored in your Amazon account.</div>\n- </div>\n- </div>\n- </div>\n-</div>\n"
                }
            ]
        }
    },
    "Row_16": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Proper category exclusion and product view validation"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Proper category exclusion and product view validation"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Helper/Shortcut/Validator.php",
                    "new_path": "src/Payment/Helper/Shortcut/Validator.php",
                    "diff": "@@ -42,21 +42,29 @@ class Validator implements ValidatorInterface\nprivate $_paymentData;\n/**\n- * @param \\Amazon\\Payment\\Model\\ConfigFactory $amazonConfig\n+ * @var \\Amazon\\Core\\Helper\\CategoryExclusion\n+ */\n+ private $_categoryExclusionHelper;\n+\n+ /**\n+ * @param \\Amazon\\Payment\\Model\\Config $amazonConfig\n* @param \\Magento\\Framework\\Registry $registry\n* @param \\Magento\\Catalog\\Model\\ProductTypes\\ConfigInterface $productTypeConfig\n* @param \\Magento\\Payment\\Helper\\Data $paymentData\n+ * @param \\Amazon\\Core\\Helper\\CategoryExclusion $categoryExclusionHelper\n*/\npublic function __construct(\n\\Amazon\\Payment\\Model\\Config $amazonConfig,\n\\Magento\\Framework\\Registry $registry,\n\\Magento\\Catalog\\Model\\ProductTypes\\ConfigInterface $productTypeConfig,\n- \\Magento\\Payment\\Helper\\Data $paymentData\n+ \\Magento\\Payment\\Helper\\Data $paymentData,\n+ \\Amazon\\Core\\Helper\\CategoryExclusion $categoryExclusionHelper\n) {\n$this->_amazonConfig = $amazonConfig;\n$this->_registry = $registry;\n$this->_productTypeConfig = $productTypeConfig;\n$this->_paymentData = $paymentData;\n+ $this->_categoryExclusionHelper = $categoryExclusionHelper;\n}\n/**\n@@ -88,6 +96,14 @@ class Validator implements ValidatorInterface\n// check visibility on product page\nif ($isInCatalog && $config->getValue('pwa_pp_button_is_visible')) {\n+ $currentProduct = $this->_registry->registry('current_product');\n+ if ($currentProduct !== null) {\n+ if ($this->_categoryExclusionHelper->productHasExcludedCategory($currentProduct))\n+ return false;\n+ } else {\n+ if ($this->_categoryExclusionHelper->isQuoteDirty())\n+ return false;\n+ }\nreturn true;\n}\nreturn false;\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Model/Config.php",
                    "new_path": "src/Payment/Model/Config.php",
                    "diff": "@@ -18,4 +18,17 @@ namespace Amazon\\Payment\\Model;\nuse Magento\\Framework\\App\\Config\\ScopeConfigInterface;\n-class Config extends \\Magento\\Payment\\Gateway\\Config\\Config {}\n\\ No newline at end of file\n+class Config extends \\Magento\\Payment\\Gateway\\Config\\Config {\n+ /**\n+ * Map any supported payment method into a config path by specified field name\n+ *\n+ * @param string $fieldName\n+ * @return string|null\n+ * @SuppressWarnings(PHPMD.CyclomaticComplexity)\n+ * @SuppressWarnings(PHPMD.NPathComplexity)\n+ */\n+ protected function _getSpecificConfigPath($fieldName)\n+ {\n+ return 'payment/amazon_payment/general/options';\n+ }\n+}\n\\ No newline at end of file\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Helper/Shortcut/Validator.php",
                    "new_path": "src/Payment/Helper/Shortcut/Validator.php",
                    "diff": "@@ -42,21 +42,29 @@ class Validator implements ValidatorInterface\nprivate $_paymentData;\n/**\n- * @param \\Amazon\\Payment\\Model\\ConfigFactory $amazonConfig\n+ * @var \\Amazon\\Core\\Helper\\CategoryExclusion\n+ */\n+ private $_categoryExclusionHelper;\n+\n+ /**\n+ * @param \\Amazon\\Payment\\Model\\Config $amazonConfig\n* @param \\Magento\\Framework\\Registry $registry\n* @param \\Magento\\Catalog\\Model\\ProductTypes\\ConfigInterface $productTypeConfig\n* @param \\Magento\\Payment\\Helper\\Data $paymentData\n+ * @param \\Amazon\\Core\\Helper\\CategoryExclusion $categoryExclusionHelper\n*/\npublic function __construct(\n\\Amazon\\Payment\\Model\\Config $amazonConfig,\n\\Magento\\Framework\\Registry $registry,\n\\Magento\\Catalog\\Model\\ProductTypes\\ConfigInterface $productTypeConfig,\n- \\Magento\\Payment\\Helper\\Data $paymentData\n+ \\Magento\\Payment\\Helper\\Data $paymentData,\n+ \\Amazon\\Core\\Helper\\CategoryExclusion $categoryExclusionHelper\n) {\n$this->_amazonConfig = $amazonConfig;\n$this->_registry = $registry;\n$this->_productTypeConfig = $productTypeConfig;\n$this->_paymentData = $paymentData;\n+ $this->_categoryExclusionHelper = $categoryExclusionHelper;\n}\n/**\n@@ -88,6 +96,14 @@ class Validator implements ValidatorInterface\n// check visibility on product page\nif ($isInCatalog && $config->getValue('pwa_pp_button_is_visible')) {\n+ $currentProduct = $this->_registry->registry('current_product');\n+ if ($currentProduct !== null) {\n+ if ($this->_categoryExclusionHelper->productHasExcludedCategory($currentProduct))\n+ return false;\n+ } else {\n+ if ($this->_categoryExclusionHelper->isQuoteDirty())\n+ return false;\n+ }\nreturn true;\n}\nreturn false;\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Model/Config.php",
                    "new_path": "src/Payment/Model/Config.php",
                    "diff": "@@ -18,4 +18,17 @@ namespace Amazon\\Payment\\Model;\nuse Magento\\Framework\\App\\Config\\ScopeConfigInterface;\n-class Config extends \\Magento\\Payment\\Gateway\\Config\\Config {}\n\\ No newline at end of file\n+class Config extends \\Magento\\Payment\\Gateway\\Config\\Config {\n+ /**\n+ * Map any supported payment method into a config path by specified field name\n+ *\n+ * @param string $fieldName\n+ * @return string|null\n+ * @SuppressWarnings(PHPMD.CyclomaticComplexity)\n+ * @SuppressWarnings(PHPMD.NPathComplexity)\n+ */\n+ protected function _getSpecificConfigPath($fieldName)\n+ {\n+ return 'payment/amazon_payment/general/options';\n+ }\n+}\n\\ No newline at end of file\n"
                }
            ]
        }
    },
    "Row_17": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Fix display issues with minicart"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Fix display issues with minicart"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/etc/frontend/di.xml",
                    "new_path": "src/Payment/etc/frontend/di.xml",
                    "diff": "<type name=\"Amazon\\Payment\\Block\\Minicart\\Button\">\n<arguments>\n<argument name=\"data\" xsi:type=\"array\">\n- <item name=\"template\" xsi:type=\"string\">Amazon_Payment::payment-link.phtml</item>\n+ <item name=\"template\" xsi:type=\"string\">Amazon_Payment::minicart-button.phtml</item>\n<item name=\"alias\" xsi:type=\"string\">amazon.button.mini-cart</item>\n</argument>\n<argument name=\"payment\" xsi:type=\"object\">Amazon\\Payment\\Model\\Method\\Amazon</argument>\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/etc/frontend/di.xml",
                    "new_path": "src/Payment/etc/frontend/di.xml",
                    "diff": "<type name=\"Amazon\\Payment\\Block\\Minicart\\Button\">\n<arguments>\n<argument name=\"data\" xsi:type=\"array\">\n- <item name=\"template\" xsi:type=\"string\">Amazon_Payment::payment-link.phtml</item>\n+ <item name=\"template\" xsi:type=\"string\">Amazon_Payment::minicart-button.phtml</item>\n<item name=\"alias\" xsi:type=\"string\">amazon.button.mini-cart</item>\n</argument>\n<argument name=\"payment\" xsi:type=\"object\">Amazon\\Payment\\Model\\Method\\Amazon</argument>\n"
                }
            ]
        }
    },
    "Row_18": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Get method from order, not quote"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Get method from order, not quote"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Observer/CompleteOrderStatus.php",
                    "new_path": "src/Payment/Observer/CompleteOrderStatus.php",
                    "diff": "@@ -19,27 +19,19 @@ use Amazon\\Core\\Helper\\Data;\nuse Amazon\\Payment\\Model\\Method\\Amazon;\nuse Magento\\Framework\\Event\\Observer;\nuse Magento\\Framework\\Event\\ObserverInterface;\n-use Magento\\Quote\\Api\\PaymentMethodManagementInterface;\nuse Magento\\Sales\\Api\\Data\\OrderInterface;\nuse Magento\\Sales\\Model\\Order;\nclass CompleteOrderStatus implements ObserverInterface\n{\n- /**\n- * @var PaymentMethodManagementInterface\n- */\n- protected $paymentMethodManagement;\n-\n/**\n* @var Data\n*/\nprotected $coreHelper;\npublic function __construct(\n- PaymentMethodManagementInterface $paymentMethodManagement,\nData $coreHelper\n) {\n- $this->paymentMethodManagement = $paymentMethodManagement;\n$this->coreHelper = $coreHelper;\n}\n@@ -49,7 +41,7 @@ class CompleteOrderStatus implements ObserverInterface\n* @var OrderInterface $order\n*/\n$order = $observer->getOrder();\n- $payment = $this->paymentMethodManagement->get($order->getQuoteId());\n+ $payment = $order->getPayment();\n$newOrderStatus = $this->coreHelper->getNewOrderStatus();\nif ($newOrderStatus\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Observer/CompleteOrderStatus.php",
                    "new_path": "src/Payment/Observer/CompleteOrderStatus.php",
                    "diff": "@@ -19,27 +19,19 @@ use Amazon\\Core\\Helper\\Data;\nuse Amazon\\Payment\\Model\\Method\\Amazon;\nuse Magento\\Framework\\Event\\Observer;\nuse Magento\\Framework\\Event\\ObserverInterface;\n-use Magento\\Quote\\Api\\PaymentMethodManagementInterface;\nuse Magento\\Sales\\Api\\Data\\OrderInterface;\nuse Magento\\Sales\\Model\\Order;\nclass CompleteOrderStatus implements ObserverInterface\n{\n- /**\n- * @var PaymentMethodManagementInterface\n- */\n- protected $paymentMethodManagement;\n-\n/**\n* @var Data\n*/\nprotected $coreHelper;\npublic function __construct(\n- PaymentMethodManagementInterface $paymentMethodManagement,\nData $coreHelper\n) {\n- $this->paymentMethodManagement = $paymentMethodManagement;\n$this->coreHelper = $coreHelper;\n}\n@@ -49,7 +41,7 @@ class CompleteOrderStatus implements ObserverInterface\n* @var OrderInterface $order\n*/\n$order = $observer->getOrder();\n- $payment = $this->paymentMethodManagement->get($order->getQuoteId());\n+ $payment = $order->getPayment();\n$newOrderStatus = $this->coreHelper->getNewOrderStatus();\nif ($newOrderStatus\n"
                }
            ]
        }
    },
    "Row_19": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "added scope parameter to payment widgets"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "added scope parameter to payment widgets"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/view/checkout-widget-address.js",
                    "new_path": "src/Payment/view/frontend/web/js/view/checkout-widget-address.js",
                    "diff": "@@ -48,7 +48,8 @@ define(\n},\noptions: {\nsellerId: window.amazonPayment.merchantId,\n- addressWidgetDOMId: 'addressBookWidgetDiv'\n+ addressWidgetDOMId: 'addressBookWidgetDiv',\n+ widgetScope: window.amazonPayment.loginScope\n},\nisCustomerLoggedIn: customer.isLoggedIn,\nisAmazonAccountLoggedIn: amazonStorage.isAmazonAccountLoggedIn,\n@@ -70,6 +71,7 @@ define(\nrenderAddressWidget: function () {\nnew OffAmazonPayments.Widgets.AddressBook({\nsellerId: self.options.sellerId,\n+ scope: self.options.widgetScope,\nonOrderReferenceCreate: function (orderReference) {\nvar orderid = orderReference.getAmazonOrderReferenceId();\namazonStorage.setOrderReference(orderid);\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/view/payment/method-renderer/amazon-payment-widget.js",
                    "new_path": "src/Payment/view/frontend/web/js/view/payment/method-renderer/amazon-payment-widget.js",
                    "diff": "@@ -49,7 +49,8 @@ define(\noptions: {\nsellerId: window.amazonPayment.merchantId,\n- paymentWidgetDOMId: 'walletWidgetDiv'\n+ paymentWidgetDOMId: 'walletWidgetDiv',\n+ widgetScope: window.amazonPayment.loginScope\n},\nisCustomerLoggedIn: customer.isLoggedIn,\nisAmazonAccountLoggedIn: amazonStorage.isAmazonAccountLoggedIn,\n@@ -74,6 +75,7 @@ define(\nrenderPaymentWidget: function () {\nnew OffAmazonPayments.Widgets.Wallet({\nsellerId: self.options.sellerId,\n+ scope: self.options.widgetScope,\namazonOrderReferenceId: amazonStorage.getOrderReference(),\nonPaymentSelect: function (orderReference) {\namazonStorage.isPlaceOrderDisabled(true);\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/view/checkout-widget-address.js",
                    "new_path": "src/Payment/view/frontend/web/js/view/checkout-widget-address.js",
                    "diff": "@@ -48,7 +48,8 @@ define(\n},\noptions: {\nsellerId: window.amazonPayment.merchantId,\n- addressWidgetDOMId: 'addressBookWidgetDiv'\n+ addressWidgetDOMId: 'addressBookWidgetDiv',\n+ widgetScope: window.amazonPayment.loginScope\n},\nisCustomerLoggedIn: customer.isLoggedIn,\nisAmazonAccountLoggedIn: amazonStorage.isAmazonAccountLoggedIn,\n@@ -70,6 +71,7 @@ define(\nrenderAddressWidget: function () {\nnew OffAmazonPayments.Widgets.AddressBook({\nsellerId: self.options.sellerId,\n+ scope: self.options.widgetScope,\nonOrderReferenceCreate: function (orderReference) {\nvar orderid = orderReference.getAmazonOrderReferenceId();\namazonStorage.setOrderReference(orderid);\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/view/payment/method-renderer/amazon-payment-widget.js",
                    "new_path": "src/Payment/view/frontend/web/js/view/payment/method-renderer/amazon-payment-widget.js",
                    "diff": "@@ -49,7 +49,8 @@ define(\noptions: {\nsellerId: window.amazonPayment.merchantId,\n- paymentWidgetDOMId: 'walletWidgetDiv'\n+ paymentWidgetDOMId: 'walletWidgetDiv',\n+ widgetScope: window.amazonPayment.loginScope\n},\nisCustomerLoggedIn: customer.isLoggedIn,\nisAmazonAccountLoggedIn: amazonStorage.isAmazonAccountLoggedIn,\n@@ -74,6 +75,7 @@ define(\nrenderPaymentWidget: function () {\nnew OffAmazonPayments.Widgets.Wallet({\nsellerId: self.options.sellerId,\n+ scope: self.options.widgetScope,\namazonOrderReferenceId: amazonStorage.getOrderReference(),\nonPaymentSelect: function (orderReference) {\namazonStorage.isPlaceOrderDisabled(true);\n"
                }
            ]
        }
    },
    "Row_20": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Changing layout to checkout, according to Magento 2.1 value"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Changing layout to checkout, according to Magento 2.1 value"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/layout/checkout_index_index.xml",
                    "new_path": "src/Payment/view/frontend/layout/checkout_index_index.xml",
                    "diff": "* permissions and limitations under the License.\n*/\n-->\n-<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" layout=\"1column\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n+<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" layout=\"checkout\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n<body>\n<referenceBlock name=\"minicart\">\n<arguments>\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/layout/checkout_index_index.xml",
                    "new_path": "src/Payment/view/frontend/layout/checkout_index_index.xml",
                    "diff": "* permissions and limitations under the License.\n*/\n-->\n-<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" layout=\"1column\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n+<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" layout=\"checkout\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n<body>\n<referenceBlock name=\"minicart\">\n<arguments>\n"
                }
            ]
        }
    },
    "Row_21": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "keeping the name for now"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "keeping the name for now"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "composer.json",
                    "new_path": "composer.json",
                    "diff": "{\n- \"name\": \"amzn/amazon-payments-magento-2-plugin\",\n+ \"name\": \"amazon/module-login-and-pay\",\n\"description\": \"Official Magento2 Plugin to integrate with Amazon Payments\",\n\"type\": \"magento2-module\",\n\"version\": \"1.0.10\",\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "marketplace-composer.json",
                    "new_path": "marketplace-composer.json",
                    "diff": "{\n- \"name\": \"amzn/module-login-and-pay\",\n+ \"name\": \"amazon/module-login-and-pay\",\n\"description\": \"Official Magento2 Plugin to integrate with Amazon Payments\",\n\"type\": \"metapackage\",\n\"version\": \"1.0.10\",\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/composer.json",
                    "new_path": "src/Core/composer.json",
                    "diff": "{\n- \"name\": \"amzn/module-core\",\n+ \"name\": \"amazon/module-core\",\n\"description\": \"Shared functionality for Amazon Login and Amazon Payment modules\",\n\"type\": \"magento2-module\",\n\"version\": \"1.0.10\",\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Login/composer.json",
                    "new_path": "src/Login/composer.json",
                    "diff": "{\n- \"name\": \"amzn/module-login\",\n+ \"name\": \"amazon/module-login\",\n\"description\": \"Amazon Login module\",\n\"type\": \"magento2-module\",\n\"version\": \"1.0.10\",\n\"Apache-2.0\"\n],\n\"require\": {\n- \"amzn/module-core\": \"^1.0.1\",\n+ \"amazon/module-core\": \"^1.0.1\",\n\"magento/module-customer\": \"^100.1.0\",\n\"magento/module-checkout\": \"^100.1.0\"\n},\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/composer.json",
                    "new_path": "src/Payment/composer.json",
                    "diff": "{\n- \"name\": \"amzn/module-payment\",\n+ \"name\": \"amazon/module-payment\",\n\"description\": \"Amazon Payment module\",\n\"type\": \"magento2-module\",\n\"version\": \"1.0.10\",\n\"Apache-2.0\"\n],\n\"require\": {\n- \"amzn/module-core\": \"^1.0.1\",\n- \"amzn/module-login\": \"^1.0.1\",\n+ \"amazon/module-core\": \"^1.0.1\",\n+ \"amazon/module-login\": \"^1.0.1\",\n\"magento/module-eav\": \"^100.1.0\",\n\"magento/module-sales\": \"^100.1.0\",\n\"magento/module-quote\": \"^100.1.0\",\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "composer.json",
                    "new_path": "composer.json",
                    "diff": "{\n- \"name\": \"amzn/amazon-payments-magento-2-plugin\",\n+ \"name\": \"amazon/module-login-and-pay\",\n\"description\": \"Official Magento2 Plugin to integrate with Amazon Payments\",\n\"type\": \"magento2-module\",\n\"version\": \"1.0.10\",\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "marketplace-composer.json",
                    "new_path": "marketplace-composer.json",
                    "diff": "{\n- \"name\": \"amzn/module-login-and-pay\",\n+ \"name\": \"amazon/module-login-and-pay\",\n\"description\": \"Official Magento2 Plugin to integrate with Amazon Payments\",\n\"type\": \"metapackage\",\n\"version\": \"1.0.10\",\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/composer.json",
                    "new_path": "src/Core/composer.json",
                    "diff": "{\n- \"name\": \"amzn/module-core\",\n+ \"name\": \"amazon/module-core\",\n\"description\": \"Shared functionality for Amazon Login and Amazon Payment modules\",\n\"type\": \"magento2-module\",\n\"version\": \"1.0.10\",\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Login/composer.json",
                    "new_path": "src/Login/composer.json",
                    "diff": "{\n- \"name\": \"amzn/module-login\",\n+ \"name\": \"amazon/module-login\",\n\"description\": \"Amazon Login module\",\n\"type\": \"magento2-module\",\n\"version\": \"1.0.10\",\n\"Apache-2.0\"\n],\n\"require\": {\n- \"amzn/module-core\": \"^1.0.1\",\n+ \"amazon/module-core\": \"^1.0.1\",\n\"magento/module-customer\": \"^100.1.0\",\n\"magento/module-checkout\": \"^100.1.0\"\n},\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/composer.json",
                    "new_path": "src/Payment/composer.json",
                    "diff": "{\n- \"name\": \"amzn/module-payment\",\n+ \"name\": \"amazon/module-payment\",\n\"description\": \"Amazon Payment module\",\n\"type\": \"magento2-module\",\n\"version\": \"1.0.10\",\n\"Apache-2.0\"\n],\n\"require\": {\n- \"amzn/module-core\": \"^1.0.1\",\n- \"amzn/module-login\": \"^1.0.1\",\n+ \"amazon/module-core\": \"^1.0.1\",\n+ \"amazon/module-login\": \"^1.0.1\",\n\"magento/module-eav\": \"^100.1.0\",\n\"magento/module-sales\": \"^100.1.0\",\n\"magento/module-quote\": \"^100.1.0\",\n"
                }
            ]
        }
    },
    "Row_22": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "GH issue and PR template added"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "GH issue and PR template added"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": ".github/ISSUE_TEMPLATE.md",
                    "diff": "+<!-- Thanks for contributing! Please pick a meaningful title and fill in the details below. -->\n+\n+#### What I expected\n+\n+<!-- What you or customer expected when performing the steps -->\n+\n+#### What happened instead\n+\n+<!-- What actual results you or customer got -->\n+\n+#### Steps to reproduce the issue\n+\n+<!-- Please add detailed steps to reproduce the issue. -->\n+\n+#### Your setup\n+\n+* Magento version:\n+* Magento Edition: Community / Enterprise / Enterprise Cloud\n+* JavaScript Console: Please add a screenshot of the Chrome Javascript console to speed up the process\n+* Shop URL : <!-- if you are willing to share -->\n+\n+<!--\n+PLEASE NOTE\n+- These comments won't show up when you submit the issue.\n+- Everything is optional, but try to add as many details as possible.\n+- Screenshot worth a thousand words, use screenshots if possible.\n+-->\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": ".github/PULL_REQUEST_TEMPLATE.md",
                    "diff": "+Fixes # .\n+\n+#### Additional details about this PR\n\\ No newline at end of file\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": ".gitignore",
                    "new_path": ".gitignore",
                    "diff": "vendor/\nbin/\nauth.json\n-\n-.github/*\n\\ No newline at end of file\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": ".github/ISSUE_TEMPLATE.md",
                    "diff": "+<!-- Thanks for contributing! Please pick a meaningful title and fill in the details below. -->\n+\n+#### What I expected\n+\n+<!-- What you or customer expected when performing the steps -->\n+\n+#### What happened instead\n+\n+<!-- What actual results you or customer got -->\n+\n+#### Steps to reproduce the issue\n+\n+<!-- Please add detailed steps to reproduce the issue. -->\n+\n+#### Your setup\n+\n+* Magento version:\n+* Magento Edition: Community / Enterprise / Enterprise Cloud\n+* JavaScript Console: Please add a screenshot of the Chrome Javascript console to speed up the process\n+* Shop URL : <!-- if you are willing to share -->\n+\n+<!--\n+PLEASE NOTE\n+- These comments won't show up when you submit the issue.\n+- Everything is optional, but try to add as many details as possible.\n+- Screenshot worth a thousand words, use screenshots if possible.\n+-->\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": ".github/PULL_REQUEST_TEMPLATE.md",
                    "diff": "+Fixes # .\n+\n+#### Additional details about this PR\n\\ No newline at end of file\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": ".gitignore",
                    "new_path": ".gitignore",
                    "diff": "vendor/\nbin/\nauth.json\n-\n-.github/*\n\\ No newline at end of file\n"
                }
            ]
        }
    },
    "Row_23": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "re-brand language fixes"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "re-brand language fixes"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "README.md",
                    "new_path": "README.md",
                    "diff": "* Magento 2.1+\n* [Magento 2 System Requirements](http://devdocs.magento.com/guides/v2.0/install-gde/system-requirements.html)\n* SSL is installed on your site and active on Checkout and Login pages\n-* A verified Amazon Pay account\n+* A verified Amazon Payments merchant account\n## Installation and Configuration\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "README.md",
                    "new_path": "README.md",
                    "diff": "* Magento 2.1+\n* [Magento 2 System Requirements](http://devdocs.magento.com/guides/v2.0/install-gde/system-requirements.html)\n* SSL is installed on your site and active on Checkout and Login pages\n-* A verified Amazon Pay account\n+* A verified Amazon Payments merchant account\n## Installation and Configuration\n"
                }
            ]
        }
    },
    "Row_24": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Short Readme update"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Short Readme update"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "README.md",
                    "new_path": "README.md",
                    "diff": "Please follow the instructions in the [User Guide] (https://amzn.github.io/amazon-payments-magento-2-plugin)\n## Release Notes\n-### v1.1.0 Rebrand, final module name, public launch\n+### v1.1.0 Rebrand\n#### Enhancements:\n* This release does not add any new features\n#### Bug Fixes:\n* This release does not fix any bugs\n-### v1.0.10 Automated key exchange, new streamlined registration, condensed UI\n+### v1.0.10 Small fixes\n#### Enhancements:\n* #31 Scope parameter propagated to the Amazon Pay widgets\n* #11 Integrate checkout agreement blocks in the checkout\n#### Bug Fixes:\n- * #27 Fix capture error when auth is greater than 7 days old\n+ * #27 Get the payment method from the order instead of the quote\n* #33 Fix the checkout layout block to be in line with Magento 2.1\n-\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "README.md",
                    "new_path": "README.md",
                    "diff": "Please follow the instructions in the [User Guide] (https://amzn.github.io/amazon-payments-magento-2-plugin)\n## Release Notes\n-### v1.1.0 Rebrand, final module name, public launch\n+### v1.1.0 Rebrand\n#### Enhancements:\n* This release does not add any new features\n#### Bug Fixes:\n* This release does not fix any bugs\n-### v1.0.10 Automated key exchange, new streamlined registration, condensed UI\n+### v1.0.10 Small fixes\n#### Enhancements:\n* #31 Scope parameter propagated to the Amazon Pay widgets\n* #11 Integrate checkout agreement blocks in the checkout\n#### Bug Fixes:\n- * #27 Fix capture error when auth is greater than 7 days old\n+ * #27 Get the payment method from the order instead of the quote\n* #33 Fix the checkout layout block to be in line with Magento 2.1\n-\n"
                }
            ]
        }
    },
    "Row_25": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Updating platform_id"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Updating platform_id"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Model/OrderInformationManagement.php",
                    "new_path": "src/Payment/Model/OrderInformationManagement.php",
                    "diff": "@@ -128,7 +128,7 @@ class OrderInformationManagement implements OrderInformationManagementInterface\n'Magento Version : ' . $this->productMetadata->getVersion() . ' ' .\n'Plugin Version : ' . $this->paymentHelper->getModuleVersion()\n,\n- 'platform_id' => $this->coreHelper->getMerchantId(ScopeInterface::SCOPE_STORE, $storeId)\n+ 'platform_id' => 'A2ZAYEJU54T1BM'\n];\n$responseParser = $this->clientFactory->create($storeId)->setOrderReferenceDetails($data);\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Model/OrderInformationManagement.php",
                    "new_path": "src/Payment/Model/OrderInformationManagement.php",
                    "diff": "@@ -128,7 +128,7 @@ class OrderInformationManagement implements OrderInformationManagementInterface\n'Magento Version : ' . $this->productMetadata->getVersion() . ' ' .\n'Plugin Version : ' . $this->paymentHelper->getModuleVersion()\n,\n- 'platform_id' => $this->coreHelper->getMerchantId(ScopeInterface::SCOPE_STORE, $storeId)\n+ 'platform_id' => 'A2ZAYEJU54T1BM'\n];\n$responseParser = $this->clientFactory->create($storeId)->setOrderReferenceDetails($data);\n"
                }
            ]
        }
    },
    "Row_26": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Display all store URLs in admin area for whitelisting"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Display all store URLs in admin area for whitelisting"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/Form/Field/IpnUrl.php",
                    "new_path": "src/Core/Block/Adminhtml/Form/Field/IpnUrl.php",
                    "diff": "@@ -23,16 +23,18 @@ class IpnUrl extends BaseField\n{\nprotected function _renderValue(AbstractElement $element)\n{\n- $value = '';\n- $store = $this->_storeManager->getStore($this->getRequest()->getParam('store', 0));\n+ $stores = $this->_storeManager->getStores();\n+ $valueReturn = '';\n+ foreach ($stores as $store) {\n$baseUrl = $store->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\n-\nif ($baseUrl) {\n$value = $baseUrl . 'amazonpayments/payment/ipn/';\n+ $valueReturn .= \"<div>\".$value.\"</div>\";\n+ }\n}\n- return '<td class=\"value\">' . $value . '</td>';\n+ return '<td class=\"value\">' . $valueReturn . '</td>';\n}\nprotected function _renderInheritCheckbox(AbstractElement $element)\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/Form/Field/JsOrigin.php",
                    "new_path": "src/Core/Block/Adminhtml/Form/Field/JsOrigin.php",
                    "diff": "@@ -25,17 +25,19 @@ class JsOrigin extends BaseField\n{\nprotected function _renderValue(AbstractElement $element)\n{\n- $value = '';\n- $store = $this->_storeManager->getStore($this->getRequest()->getParam('store', 0));\n+ $stores = $this->_storeManager->getStores();\n+ $valueReturn = '';\n+ foreach ($stores as $store) {\n$baseUrl = $store->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\n-\nif ($baseUrl) {\n$uri = UriFactory::factory($baseUrl);\n$value = $uri->getScheme() . '://' . $uri->getHost();\n+ $valueReturn .= \"<div>\".$value.\"</div>\";\n+ }\n}\n- return '<td class=\"value\">' . $value . '</td>';\n+ return '<td class=\"value\">' . $valueReturn . '</td>';\n}\nprotected function _renderInheritCheckbox(AbstractElement $element)\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/Form/Field/RedirectUrl.php",
                    "new_path": "src/Core/Block/Adminhtml/Form/Field/RedirectUrl.php",
                    "diff": "@@ -23,16 +23,18 @@ class RedirectUrl extends BaseField\n{\nprotected function _renderValue(AbstractElement $element)\n{\n- $value = '';\n- $store = $this->_storeManager->getStore($this->getRequest()->getParam('store', 0));\n+ $stores = $this->_storeManager->getStores();\n+ $valueReturn = '';\n+ foreach ($stores as $store) {\n$baseUrl = $store->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\n-\nif ($baseUrl) {\n$value = $baseUrl . 'amazon/login/processAuthHash/';\n+ $valueReturn .= \"<div>\".$value.\"</div>\";\n+ }\n}\n- return '<td class=\"value\">' . $value . '</td>';\n+ return '<td class=\"value\">' . $valueReturn . '</td>';\n}\nprotected function _renderInheritCheckbox(AbstractElement $element)\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/Form/Field/IpnUrl.php",
                    "new_path": "src/Core/Block/Adminhtml/Form/Field/IpnUrl.php",
                    "diff": "@@ -23,16 +23,18 @@ class IpnUrl extends BaseField\n{\nprotected function _renderValue(AbstractElement $element)\n{\n- $value = '';\n- $store = $this->_storeManager->getStore($this->getRequest()->getParam('store', 0));\n+ $stores = $this->_storeManager->getStores();\n+ $valueReturn = '';\n+ foreach ($stores as $store) {\n$baseUrl = $store->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\n-\nif ($baseUrl) {\n$value = $baseUrl . 'amazonpayments/payment/ipn/';\n+ $valueReturn .= \"<div>\".$value.\"</div>\";\n+ }\n}\n- return '<td class=\"value\">' . $value . '</td>';\n+ return '<td class=\"value\">' . $valueReturn . '</td>';\n}\nprotected function _renderInheritCheckbox(AbstractElement $element)\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/Form/Field/JsOrigin.php",
                    "new_path": "src/Core/Block/Adminhtml/Form/Field/JsOrigin.php",
                    "diff": "@@ -25,17 +25,19 @@ class JsOrigin extends BaseField\n{\nprotected function _renderValue(AbstractElement $element)\n{\n- $value = '';\n- $store = $this->_storeManager->getStore($this->getRequest()->getParam('store', 0));\n+ $stores = $this->_storeManager->getStores();\n+ $valueReturn = '';\n+ foreach ($stores as $store) {\n$baseUrl = $store->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\n-\nif ($baseUrl) {\n$uri = UriFactory::factory($baseUrl);\n$value = $uri->getScheme() . '://' . $uri->getHost();\n+ $valueReturn .= \"<div>\".$value.\"</div>\";\n+ }\n}\n- return '<td class=\"value\">' . $value . '</td>';\n+ return '<td class=\"value\">' . $valueReturn . '</td>';\n}\nprotected function _renderInheritCheckbox(AbstractElement $element)\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/Form/Field/RedirectUrl.php",
                    "new_path": "src/Core/Block/Adminhtml/Form/Field/RedirectUrl.php",
                    "diff": "@@ -23,16 +23,18 @@ class RedirectUrl extends BaseField\n{\nprotected function _renderValue(AbstractElement $element)\n{\n- $value = '';\n- $store = $this->_storeManager->getStore($this->getRequest()->getParam('store', 0));\n+ $stores = $this->_storeManager->getStores();\n+ $valueReturn = '';\n+ foreach ($stores as $store) {\n$baseUrl = $store->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\n-\nif ($baseUrl) {\n$value = $baseUrl . 'amazon/login/processAuthHash/';\n+ $valueReturn .= \"<div>\".$value.\"</div>\";\n+ }\n}\n- return '<td class=\"value\">' . $value . '</td>';\n+ return '<td class=\"value\">' . $valueReturn . '</td>';\n}\nprotected function _renderInheritCheckbox(AbstractElement $element)\n"
                }
            ]
        }
    },
    "Row_27": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "final name of the module"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "final name of the module"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "composer.json",
                    "new_path": "composer.json",
                    "diff": "{\n- \"name\": \"amzn/amazon-pay-magento-2-module\",\n+ \"name\": \"amzn/amazon-pay-and-login-magento-2-module\",\n\"description\": \"Official Magento2 Plugin to integrate with Amazon Pay and Login with Amazon\",\n\"type\": \"magento2-module\",\n\"version\": \"1.1.0\",\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "marketplace-composer.json",
                    "new_path": "marketplace-composer.json",
                    "diff": "{\n- \"name\": \"amzn/amazon-pay-magento-2-module\",\n+ \"name\": \"amzn/amazon-pay-and-login-magento-2-module\",\n\"description\": \"Official Magento2 Plugin to integrate with Amazon Pay and Login with Amazon\",\n\"type\": \"metapackage\",\n\"version\": \"1.1.0\",\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "composer.json",
                    "new_path": "composer.json",
                    "diff": "{\n- \"name\": \"amzn/amazon-pay-magento-2-module\",\n+ \"name\": \"amzn/amazon-pay-and-login-magento-2-module\",\n\"description\": \"Official Magento2 Plugin to integrate with Amazon Pay and Login with Amazon\",\n\"type\": \"magento2-module\",\n\"version\": \"1.1.0\",\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "marketplace-composer.json",
                    "new_path": "marketplace-composer.json",
                    "diff": "{\n- \"name\": \"amzn/amazon-pay-magento-2-module\",\n+ \"name\": \"amzn/amazon-pay-and-login-magento-2-module\",\n\"description\": \"Official Magento2 Plugin to integrate with Amazon Pay and Login with Amazon\",\n\"type\": \"metapackage\",\n\"version\": \"1.1.0\",\n"
                }
            ]
        }
    },
    "Row_28": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Created option to disable Login button usage on homepage/cms pages to speed up the initial load"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Created option to disable Login button usage on homepage/cms pages to speed up the initial load"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Config.php",
                    "new_path": "src/Core/Block/Config.php",
                    "diff": "@@ -74,6 +74,7 @@ class Config extends Template\n'customerLoginPageUrl' => $this->url->getLoginUrl(),\n'sandboxSimulationOptions' => [],\n'loginScope' => $this->coreHelper->getLoginScope(),\n+ 'allowAmLoginLoading' => $this->coreHelper->allowAmLoginLoading(),\n'isEuPaymentRegion' => $this->coreHelper->isEuPaymentRegion(),\n'oAuthHashRedirectUrl' => $this->coreHelper->getOAuthRedirectUrl(),\n'isQuoteDirty' => $this->categoryExclusionHelper->isQuoteDirty(),\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Helper/Data.php",
                    "new_path": "src/Core/Helper/Data.php",
                    "diff": "@@ -609,6 +609,20 @@ class Data extends AbstractHelper\n&& $this->scopeConfig->isSetFlag('payment/amazon_payment/pwa_pp_button_is_visible', $scope, $scopeCode);\n}\n+ /**\n+ * @param string $scope\n+ * @param null $scopeCode\n+ * @return bool\n+ */\n+ public function allowAmLoginLoading($scope = ScopeInterface::SCOPE_STORE, $scopeCode = null)\n+ {\n+ return $this->scopeConfig->isSetFlag(\n+ 'customer/startup/amazon_login_in_popup',\n+ $scope,\n+ $scopeCode\n+ );\n+ }\n+\n/**\n* @param string $scope\n* @param null|string $scopeCode\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Login/etc/adminhtml/system.xml",
                    "diff": "+<?xml version=\"1.0\"?>\n+<!--\n+/**\n+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+-->\n+<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:module:Magento_Config:etc/system_file.xsd\">\n+ <system>\n+ <section id=\"customer\">\n+ <group id=\"startup\">\n+ <field id=\"amazon_login_in_popup\" translate=\"label comment\" type=\"select\" sortOrder=\"1\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\" canRestore=\"1\">\n+ <label>Amazon Login available in Authentication popup</label>\n+ <source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n+ <comment>Disabling this may decrease page load time but will also remove the Amazon Login option from authentication popup.</comment>\n+ </field>\n+ </group>\n+ </section>\n+ </system>\n+</config>\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Login/etc/config.xml",
                    "diff": "+<?xml version=\"1.0\"?>\n+<!--\n+/**\n+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+-->\n+<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:module:Magento_Store:etc/config.xsd\">\n+ <default>\n+ <customer>\n+ <startup>\n+ <amazon_login_in_popup>1</amazon_login_in_popup>\n+ </startup>\n+ </customer>\n+ </default>\n+</config>\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Login/view/frontend/layout/default.xml",
                    "new_path": "src/Login/view/frontend/layout/default.xml",
                    "diff": "<item name=\"authenticationPopup\" xsi:type=\"array\">\n<item name=\"children\" xsi:type=\"array\">\n<item name=\"amazon-button\" xsi:type=\"array\">\n- <item name=\"component\" xsi:type=\"string\">Amazon_Login/js/view/login-button</item>\n+ <item name=\"component\" xsi:type=\"string\">Amazon_Login/js/view/login-button-wrapper</item>\n<item name=\"sortOrder\" xsi:type=\"string\">0</item>\n<item name=\"displayArea\" xsi:type=\"string\">additional-login-form-fields</item>\n<item name=\"config\" xsi:type=\"array\">\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Login/view/frontend/web/js/view/login-button-wrapper.js",
                    "diff": "+/**\n+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+if (window.amazonPayment.allowAmLoginLoading == true) {\n+ define(['require', 'Amazon_Login/js/view/login-button'], function (require) {\n+ return require(\"Amazon_Login/js/view/login-button\");\n+ });\n+} else {\n+ define(['require', 'uiComponent'], function (require) {\n+ return require(\"uiComponent\");\n+ });\n+}\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Config.php",
                    "new_path": "src/Core/Block/Config.php",
                    "diff": "@@ -74,6 +74,7 @@ class Config extends Template\n'customerLoginPageUrl' => $this->url->getLoginUrl(),\n'sandboxSimulationOptions' => [],\n'loginScope' => $this->coreHelper->getLoginScope(),\n+ 'allowAmLoginLoading' => $this->coreHelper->allowAmLoginLoading(),\n'isEuPaymentRegion' => $this->coreHelper->isEuPaymentRegion(),\n'oAuthHashRedirectUrl' => $this->coreHelper->getOAuthRedirectUrl(),\n'isQuoteDirty' => $this->categoryExclusionHelper->isQuoteDirty(),\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Helper/Data.php",
                    "new_path": "src/Core/Helper/Data.php",
                    "diff": "@@ -609,6 +609,20 @@ class Data extends AbstractHelper\n&& $this->scopeConfig->isSetFlag('payment/amazon_payment/pwa_pp_button_is_visible', $scope, $scopeCode);\n}\n+ /**\n+ * @param string $scope\n+ * @param null $scopeCode\n+ * @return bool\n+ */\n+ public function allowAmLoginLoading($scope = ScopeInterface::SCOPE_STORE, $scopeCode = null)\n+ {\n+ return $this->scopeConfig->isSetFlag(\n+ 'customer/startup/amazon_login_in_popup',\n+ $scope,\n+ $scopeCode\n+ );\n+ }\n+\n/**\n* @param string $scope\n* @param null|string $scopeCode\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Login/etc/adminhtml/system.xml",
                    "diff": "+<?xml version=\"1.0\"?>\n+<!--\n+/**\n+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+-->\n+<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:module:Magento_Config:etc/system_file.xsd\">\n+ <system>\n+ <section id=\"customer\">\n+ <group id=\"startup\">\n+ <field id=\"amazon_login_in_popup\" translate=\"label comment\" type=\"select\" sortOrder=\"1\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\" canRestore=\"1\">\n+ <label>Amazon Login available in Authentication popup</label>\n+ <source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n+ <comment>Disabling this may decrease page load time but will also remove the Amazon Login option from authentication popup.</comment>\n+ </field>\n+ </group>\n+ </section>\n+ </system>\n+</config>\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Login/etc/config.xml",
                    "diff": "+<?xml version=\"1.0\"?>\n+<!--\n+/**\n+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+-->\n+<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:module:Magento_Store:etc/config.xsd\">\n+ <default>\n+ <customer>\n+ <startup>\n+ <amazon_login_in_popup>1</amazon_login_in_popup>\n+ </startup>\n+ </customer>\n+ </default>\n+</config>\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Login/view/frontend/layout/default.xml",
                    "new_path": "src/Login/view/frontend/layout/default.xml",
                    "diff": "<item name=\"authenticationPopup\" xsi:type=\"array\">\n<item name=\"children\" xsi:type=\"array\">\n<item name=\"amazon-button\" xsi:type=\"array\">\n- <item name=\"component\" xsi:type=\"string\">Amazon_Login/js/view/login-button</item>\n+ <item name=\"component\" xsi:type=\"string\">Amazon_Login/js/view/login-button-wrapper</item>\n<item name=\"sortOrder\" xsi:type=\"string\">0</item>\n<item name=\"displayArea\" xsi:type=\"string\">additional-login-form-fields</item>\n<item name=\"config\" xsi:type=\"array\">\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Login/view/frontend/web/js/view/login-button-wrapper.js",
                    "diff": "+/**\n+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+if (window.amazonPayment.allowAmLoginLoading == true) {\n+ define(['require', 'Amazon_Login/js/view/login-button'], function (require) {\n+ return require(\"Amazon_Login/js/view/login-button\");\n+ });\n+} else {\n+ define(['require', 'uiComponent'], function (require) {\n+ return require(\"uiComponent\");\n+ });\n+}\n"
                }
            ]
        }
    },
    "Row_29": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Added a switch to turn off minicart button loading from admin"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Added a switch to turn off minicart button loading from admin"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Helper/Data.php",
                    "new_path": "src/Core/Helper/Data.php",
                    "diff": "@@ -609,6 +609,16 @@ class Data extends AbstractHelper\n&& $this->scopeConfig->isSetFlag('payment/amazon_payment/pwa_pp_button_is_visible', $scope, $scopeCode);\n}\n+ /**\n+ * @param string $scope\n+ * @param null $scopeCode\n+ * @return bool\n+ */\n+ public function isPayButtonAvailableInMinicart($scope = ScopeInterface::SCOPE_STORE, $scopeCode = null)\n+ {\n+ return $this->scopeConfig->isSetFlag('payment/amazon_payment/minicart_button_is_visible', $scope, $scopeCode);\n+ }\n+\n/**\n* @param string $scope\n* @param null $scopeCode\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/adminhtml/system.xml",
                    "new_path": "src/Core/etc/adminhtml/system.xml",
                    "diff": "<source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n<config_path>payment/amazon_payment/pwa_pp_button_is_visible</config_path>\n</field>\n+ <field id=\"minicart_button_is_visible\" translate=\"label comment\" type=\"select\" sortOrder=\"70\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n+ <label>Amazon Pay button is visible in Minicart</label>\n+ <source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n+ <config_path>payment/amazon_payment/minicart_button_is_visible</config_path>\n+ <comment>Disabling this may decrease page load time in CMS pages and homepage.</comment>\n+ </field>\n</group>\n</group>\n<group id=\"advanced\" translate=\"label\" type=\"text\" sortOrder=\"20\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/config.xml",
                    "new_path": "src/Core/etc/config.xml",
                    "diff": "<can_use_checkout>1</can_use_checkout>\n<packstation_terms>Packstation,Pack-Station,Pack Station,PO Box,Post Office box,Locker</packstation_terms>\n<pwa_pp_button_is_visible>1</pwa_pp_button_is_visible>\n+ <minicart_button_is_visible>1</minicart_button_is_visible>\n<button_type>full</button_type>\n<button_size>medium</button_size>\n<logging>1</logging>\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Block/Minicart/Button.php",
                    "new_path": "src/Payment/Block/Minicart/Button.php",
                    "diff": "@@ -18,6 +18,7 @@ namespace Amazon\\Payment\\Block\\Minicart;\nuse Magento\\Checkout\\Model\\Session;\nuse Magento\\Payment\\Model\\MethodInterface;\nuse Amazon\\Payment\\Helper\\Data;\n+use Amazon\\Core\\Helper\\Data as AmazonCoreHelper;\nuse Magento\\Paypal\\Block\\Express\\InContext;\nuse Magento\\Framework\\View\\Element\\Template;\nuse Magento\\Catalog\\Block\\ShortcutInterface;\n@@ -59,12 +60,18 @@ class Button extends Template implements ShortcutInterface\nprivate $session;\n/**\n- * Constructor\n+ * @var AmazonCoreHelper\n+ */\n+ private $coreHelper;\n+\n+ /**\n+ * Button constructor.\n* @param Context $context\n* @param ResolverInterface $localeResolver\n* @param Data $mainHelper\n- * @param MethodInterface $payment\n* @param Session $session\n+ * @param MethodInterface $payment\n+ * @param AmazonCoreHelper $coreHelper\n* @param array $data\n*/\npublic function __construct(\n@@ -73,6 +80,7 @@ class Button extends Template implements ShortcutInterface\nData $mainHelper,\nSession $session,\nMethodInterface $payment,\n+ AmazonCoreHelper $coreHelper,\narray $data = []\n) {\nparent::__construct($context, $data);\n@@ -81,6 +89,7 @@ class Button extends Template implements ShortcutInterface\n$this->mainHelper = $mainHelper;\n$this->payment = $payment;\n$this->session = $session;\n+ $this->coreHelper = $coreHelper;\n}\n/**\n@@ -88,7 +97,8 @@ class Button extends Template implements ShortcutInterface\n*/\nprotected function shouldRender()\n{\n- return $this->payment->isAvailable($this->session->getQuote())\n+ return $this->coreHelper->isPayButtonAvailableInMinicart()\n+ && $this->payment->isAvailable($this->session->getQuote())\n&& $this->isMiniCart;\n}\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Helper/Data.php",
                    "new_path": "src/Core/Helper/Data.php",
                    "diff": "@@ -609,6 +609,16 @@ class Data extends AbstractHelper\n&& $this->scopeConfig->isSetFlag('payment/amazon_payment/pwa_pp_button_is_visible', $scope, $scopeCode);\n}\n+ /**\n+ * @param string $scope\n+ * @param null $scopeCode\n+ * @return bool\n+ */\n+ public function isPayButtonAvailableInMinicart($scope = ScopeInterface::SCOPE_STORE, $scopeCode = null)\n+ {\n+ return $this->scopeConfig->isSetFlag('payment/amazon_payment/minicart_button_is_visible', $scope, $scopeCode);\n+ }\n+\n/**\n* @param string $scope\n* @param null $scopeCode\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/adminhtml/system.xml",
                    "new_path": "src/Core/etc/adminhtml/system.xml",
                    "diff": "<source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n<config_path>payment/amazon_payment/pwa_pp_button_is_visible</config_path>\n</field>\n+ <field id=\"minicart_button_is_visible\" translate=\"label comment\" type=\"select\" sortOrder=\"70\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n+ <label>Amazon Pay button is visible in Minicart</label>\n+ <source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n+ <config_path>payment/amazon_payment/minicart_button_is_visible</config_path>\n+ <comment>Disabling this may decrease page load time in CMS pages and homepage.</comment>\n+ </field>\n</group>\n</group>\n<group id=\"advanced\" translate=\"label\" type=\"text\" sortOrder=\"20\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/config.xml",
                    "new_path": "src/Core/etc/config.xml",
                    "diff": "<can_use_checkout>1</can_use_checkout>\n<packstation_terms>Packstation,Pack-Station,Pack Station,PO Box,Post Office box,Locker</packstation_terms>\n<pwa_pp_button_is_visible>1</pwa_pp_button_is_visible>\n+ <minicart_button_is_visible>1</minicart_button_is_visible>\n<button_type>full</button_type>\n<button_size>medium</button_size>\n<logging>1</logging>\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Block/Minicart/Button.php",
                    "new_path": "src/Payment/Block/Minicart/Button.php",
                    "diff": "@@ -18,6 +18,7 @@ namespace Amazon\\Payment\\Block\\Minicart;\nuse Magento\\Checkout\\Model\\Session;\nuse Magento\\Payment\\Model\\MethodInterface;\nuse Amazon\\Payment\\Helper\\Data;\n+use Amazon\\Core\\Helper\\Data as AmazonCoreHelper;\nuse Magento\\Paypal\\Block\\Express\\InContext;\nuse Magento\\Framework\\View\\Element\\Template;\nuse Magento\\Catalog\\Block\\ShortcutInterface;\n@@ -59,12 +60,18 @@ class Button extends Template implements ShortcutInterface\nprivate $session;\n/**\n- * Constructor\n+ * @var AmazonCoreHelper\n+ */\n+ private $coreHelper;\n+\n+ /**\n+ * Button constructor.\n* @param Context $context\n* @param ResolverInterface $localeResolver\n* @param Data $mainHelper\n- * @param MethodInterface $payment\n* @param Session $session\n+ * @param MethodInterface $payment\n+ * @param AmazonCoreHelper $coreHelper\n* @param array $data\n*/\npublic function __construct(\n@@ -73,6 +80,7 @@ class Button extends Template implements ShortcutInterface\nData $mainHelper,\nSession $session,\nMethodInterface $payment,\n+ AmazonCoreHelper $coreHelper,\narray $data = []\n) {\nparent::__construct($context, $data);\n@@ -81,6 +89,7 @@ class Button extends Template implements ShortcutInterface\n$this->mainHelper = $mainHelper;\n$this->payment = $payment;\n$this->session = $session;\n+ $this->coreHelper = $coreHelper;\n}\n/**\n@@ -88,7 +97,8 @@ class Button extends Template implements ShortcutInterface\n*/\nprotected function shouldRender()\n{\n- return $this->payment->isAvailable($this->session->getQuote())\n+ return $this->coreHelper->isPayButtonAvailableInMinicart()\n+ && $this->payment->isAvailable($this->session->getQuote())\n&& $this->isMiniCart;\n}\n"
                }
            ]
        }
    },
    "Row_30": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Adjusted amazon-core require deps\nBy adding jquery/jquery-storageapi as a require dependency $.cookieStorage is always available. In some instances it is not available, depending on what scripts are used in any given instanc.e"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Adjusted amazon-core require deps\nBy adding jquery/jquery-storageapi as a require dependency $.cookieStorage is always available. In some instances it is not available, depending on what scripts are used in any given instanc.e"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/amazon-core.js",
                    "new_path": "src/Payment/view/frontend/web/js/amazon-core.js",
                    "diff": "@@ -18,7 +18,8 @@ define([\n'ko',\n'amazonPaymentConfig',\n'amazonWidgetsLoader',\n- 'bluebird'\n+ 'bluebird',\n+ 'jquery/jquery-storageapi'\n], function ($, ko, amazonPaymentConfig) {\n\"use strict\";\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/amazon-core.js",
                    "new_path": "src/Payment/view/frontend/web/js/amazon-core.js",
                    "diff": "@@ -18,7 +18,8 @@ define([\n'ko',\n'amazonPaymentConfig',\n'amazonWidgetsLoader',\n- 'bluebird'\n+ 'bluebird',\n+ 'jquery/jquery-storageapi'\n], function ($, ko, amazonPaymentConfig) {\n\"use strict\";\n"
                }
            ]
        }
    },
    "Row_31": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Title underlines have been to short"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Title underlines have been to short"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "docs/customisation.rst",
                    "new_path": "docs/customisation.rst",
                    "diff": "@@ -2,7 +2,7 @@ Frontend Customisation\n========================\nQ: I'd like to add a `Amazon Pay` or `Login with Amazon` button elsewhere on my site\n--------------------------\n+------------------------------------------------------------------------------------\nIf you are wanting to add one of these buttons to a new location on your site you need to update the **XML** for the page you want to add it to.\n@@ -37,7 +37,7 @@ If you wish to add a `Amazon Pay` button elsewhere in your store, you can follow\nYou can position and target which block the button appears in as with the `Login with Amazon` button. If you need more information on how to position and add new blocks into Magento 2 please see the `Magento 2 documentation <http://devdocs.magento.com/guides/v2.1/frontend-dev-guide/layouts/layout-overview.html>`_\nQ: I'd like to customise the authorisation decline e-mail\n--------------------------\n+---------------------------------------------------------\nYou can easily customise the authorisation decline e-mails by creating a version in your own theme. To do this you need to copy the current template into your own theme:\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "docs/customisation.rst",
                    "new_path": "docs/customisation.rst",
                    "diff": "@@ -2,7 +2,7 @@ Frontend Customisation\n========================\nQ: I'd like to add a `Amazon Pay` or `Login with Amazon` button elsewhere on my site\n--------------------------\n+------------------------------------------------------------------------------------\nIf you are wanting to add one of these buttons to a new location on your site you need to update the **XML** for the page you want to add it to.\n@@ -37,7 +37,7 @@ If you wish to add a `Amazon Pay` button elsewhere in your store, you can follow\nYou can position and target which block the button appears in as with the `Login with Amazon` button. If you need more information on how to position and add new blocks into Magento 2 please see the `Magento 2 documentation <http://devdocs.magento.com/guides/v2.1/frontend-dev-guide/layouts/layout-overview.html>`_\nQ: I'd like to customise the authorisation decline e-mail\n--------------------------\n+---------------------------------------------------------\nYou can easily customise the authorisation decline e-mails by creating a version in your own theme. To do this you need to copy the current template into your own theme:\n"
                }
            ]
        }
    },
    "Row_32": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Title underline fixed"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Title underline fixed"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "docs/prerequisites.rst",
                    "new_path": "docs/prerequisites.rst",
                    "diff": "@@ -14,7 +14,7 @@ System requirements\n.. _prerequisites-amazon-account-setup:\n**Amazon Pay and Login with Amazon** account setup\n--------------------------------------------\n+--------------------------------------------------\nRegistering an Amazon Payments merchant Account\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "docs/prerequisites.rst",
                    "new_path": "docs/prerequisites.rst",
                    "diff": "@@ -14,7 +14,7 @@ System requirements\n.. _prerequisites-amazon-account-setup:\n**Amazon Pay and Login with Amazon** account setup\n--------------------------------------------\n+--------------------------------------------------\nRegistering an Amazon Payments merchant Account\n"
                }
            ]
        }
    },
    "Row_33": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Removed admin layout file because all it contained was reference to non-existing css file"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Removed admin layout file because all it contained was reference to non-existing css file"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "DELETE",
                    "old_path": "src/Core/view/adminhtml/layout/adminhtml_system_config_edit.xml",
                    "new_path": null,
                    "diff": "-<?xml version=\"1.0\"?>\n-<!--\n-/**\n- * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\").\n- * You may not use this file except in compliance with the License.\n- * A copy of the License is located at\n- *\n- * http://aws.amazon.com/apache2.0\n- *\n- * or in the \"license\" file accompanying this file. This file is distributed\n- * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n- * express or implied. See the License for the specific language governing\n- * permissions and limitations under the License.\n- */\n--->\n-<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" layout=\"admin-2columns-left\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n- <head>\n- <css src=\"Magento_Catalog::catalog/category-selector.css\"/>\n- </head>\n-</page>\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "DELETE",
                    "old_path": "src/Core/view/adminhtml/layout/adminhtml_system_config_edit.xml",
                    "new_path": null,
                    "diff": "-<?xml version=\"1.0\"?>\n-<!--\n-/**\n- * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\").\n- * You may not use this file except in compliance with the License.\n- * A copy of the License is located at\n- *\n- * http://aws.amazon.com/apache2.0\n- *\n- * or in the \"license\" file accompanying this file. This file is distributed\n- * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n- * express or implied. See the License for the specific language governing\n- * permissions and limitations under the License.\n- */\n--->\n-<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" layout=\"admin-2columns-left\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n- <head>\n- <css src=\"Magento_Catalog::catalog/category-selector.css\"/>\n- </head>\n-</page>\n"
                }
            ]
        }
    },
    "Row_34": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Make sure URLs displayed are unique"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Make sure URLs displayed are unique"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/Form/Field/IpnUrl.php",
                    "new_path": "src/Core/Block/Adminhtml/Form/Field/IpnUrl.php",
                    "diff": "@@ -25,15 +25,21 @@ class IpnUrl extends BaseField\n{\n$stores = $this->_storeManager->getStores();\n$valueReturn = '';\n+ $urlArray = array();\nforeach ($stores as $store) {\n$baseUrl = $store->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\nif ($baseUrl) {\n$value = $baseUrl . 'amazonpayments/payment/ipn/';\n- $valueReturn .= \"<div>\".$value.\"</div>\";\n+ $urlArray[] = \"<div>\".$value.\"</div>\";\n}\n}\n+ $urlArray = array_unique($urlArray);\n+ foreach ($urlArray as $uniqueUrl) {\n+ $valueReturn .= \"<div>\".$uniqueUrl.\"</div>\";\n+ }\n+\nreturn '<td class=\"value\">' . $valueReturn . '</td>';\n}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/Form/Field/JsOrigin.php",
                    "new_path": "src/Core/Block/Adminhtml/Form/Field/JsOrigin.php",
                    "diff": "@@ -27,16 +27,21 @@ class JsOrigin extends BaseField\n{\n$stores = $this->_storeManager->getStores();\n$valueReturn = '';\n+ $urlArray = array();\nforeach ($stores as $store) {\n$baseUrl = $store->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\nif ($baseUrl) {\n$uri = UriFactory::factory($baseUrl);\n- $value = $uri->getScheme() . '://' . $uri->getHost();\n- $valueReturn .= \"<div>\".$value.\"</div>\";\n+ $urlArray[] = $uri->getScheme() . '://' . $uri->getHost();\n}\n}\n+ $urlArray = array_unique($urlArray);\n+ foreach ($urlArray as $uniqueUrl) {\n+ $valueReturn .= \"<div>\".$uniqueUrl.\"</div>\";\n+ }\n+\nreturn '<td class=\"value\">' . $valueReturn . '</td>';\n}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/Form/Field/RedirectUrl.php",
                    "new_path": "src/Core/Block/Adminhtml/Form/Field/RedirectUrl.php",
                    "diff": "@@ -25,15 +25,21 @@ class RedirectUrl extends BaseField\n{\n$stores = $this->_storeManager->getStores();\n$valueReturn = '';\n+ $urlArray = array();\nforeach ($stores as $store) {\n$baseUrl = $store->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\nif ($baseUrl) {\n$value = $baseUrl . 'amazon/login/processAuthHash/';\n- $valueReturn .= \"<div>\".$value.\"</div>\";\n+ $urlArray[] = \"<div>\".$value.\"</div>\";\n}\n}\n+ $urlArray = array_unique($urlArray);\n+ foreach ($urlArray as $uniqueUrl) {\n+ $valueReturn .= \"<div>\".$uniqueUrl.\"</div>\";\n+ }\n+\nreturn '<td class=\"value\">' . $valueReturn . '</td>';\n}\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/Form/Field/IpnUrl.php",
                    "new_path": "src/Core/Block/Adminhtml/Form/Field/IpnUrl.php",
                    "diff": "@@ -25,15 +25,21 @@ class IpnUrl extends BaseField\n{\n$stores = $this->_storeManager->getStores();\n$valueReturn = '';\n+ $urlArray = array();\nforeach ($stores as $store) {\n$baseUrl = $store->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\nif ($baseUrl) {\n$value = $baseUrl . 'amazonpayments/payment/ipn/';\n- $valueReturn .= \"<div>\".$value.\"</div>\";\n+ $urlArray[] = \"<div>\".$value.\"</div>\";\n}\n}\n+ $urlArray = array_unique($urlArray);\n+ foreach ($urlArray as $uniqueUrl) {\n+ $valueReturn .= \"<div>\".$uniqueUrl.\"</div>\";\n+ }\n+\nreturn '<td class=\"value\">' . $valueReturn . '</td>';\n}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/Form/Field/JsOrigin.php",
                    "new_path": "src/Core/Block/Adminhtml/Form/Field/JsOrigin.php",
                    "diff": "@@ -27,16 +27,21 @@ class JsOrigin extends BaseField\n{\n$stores = $this->_storeManager->getStores();\n$valueReturn = '';\n+ $urlArray = array();\nforeach ($stores as $store) {\n$baseUrl = $store->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\nif ($baseUrl) {\n$uri = UriFactory::factory($baseUrl);\n- $value = $uri->getScheme() . '://' . $uri->getHost();\n- $valueReturn .= \"<div>\".$value.\"</div>\";\n+ $urlArray[] = $uri->getScheme() . '://' . $uri->getHost();\n}\n}\n+ $urlArray = array_unique($urlArray);\n+ foreach ($urlArray as $uniqueUrl) {\n+ $valueReturn .= \"<div>\".$uniqueUrl.\"</div>\";\n+ }\n+\nreturn '<td class=\"value\">' . $valueReturn . '</td>';\n}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/Form/Field/RedirectUrl.php",
                    "new_path": "src/Core/Block/Adminhtml/Form/Field/RedirectUrl.php",
                    "diff": "@@ -25,15 +25,21 @@ class RedirectUrl extends BaseField\n{\n$stores = $this->_storeManager->getStores();\n$valueReturn = '';\n+ $urlArray = array();\nforeach ($stores as $store) {\n$baseUrl = $store->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\nif ($baseUrl) {\n$value = $baseUrl . 'amazon/login/processAuthHash/';\n- $valueReturn .= \"<div>\".$value.\"</div>\";\n+ $urlArray[] = \"<div>\".$value.\"</div>\";\n}\n}\n+ $urlArray = array_unique($urlArray);\n+ foreach ($urlArray as $uniqueUrl) {\n+ $valueReturn .= \"<div>\".$uniqueUrl.\"</div>\";\n+ }\n+\nreturn '<td class=\"value\">' . $valueReturn . '</td>';\n}\n"
                }
            ]
        }
    },
    "Row_35": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Admin version data added"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Admin version data added"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Core/Block/Adminhtml/System/Config/Form/Version.php",
                    "diff": "+<?php\n+\n+namespace Amazon\\Core\\Block\\Adminhtml\\System\\Config\\Form;\n+\n+use Magento\\Backend\\Block\\Template\\Context;\n+use Magento\\Framework\\Module\\ModuleListInterface;\n+\n+class Version extends \\Magento\\Config\\Block\\System\\Config\\Form\\Field\n+{\n+ const MODULE_AMAZON_CORE = 'Amazon_Core';\n+ const MODULE_AMAZON_LOGIN = 'Amazon_Login';\n+ const MODULE_AMAZON_PAYMENT = 'Amazon_Payment';\n+\n+ protected $_moduleList;\n+\n+ public function __construct(\n+ ModuleListInterface $moduleList,\n+ Context $context,\n+ array $data = []\n+ ) {\n+ $this->_moduleList = $moduleList;\n+ parent::__construct($context, $data);\n+ }\n+\n+ public function render(\\Magento\\Framework\\Data\\Form\\Element\\AbstractElement $element)\n+ {\n+ $output = '<div style=\"background-color:#eee;padding:1em;border:1px solid #ddd;\">';\n+ $output .= 'Amazon Core version: ' . $this->getVersion(self::MODULE_AMAZON_CORE) . '<br style=\"display:inherit;\" />';\n+ $output .= 'Amazon Login version: ' . $this->getVersion(self::MODULE_AMAZON_LOGIN) . '<br style=\"display:inherit;\" />';\n+ $output .= 'Amazon Payment version: ' . $this->getVersion(self::MODULE_AMAZON_PAYMENT);\n+ $output .= \"</div>\";\n+ return $output;\n+ }\n+\n+ protected function getVersion($module)\n+ {\n+ $version = $this->_moduleList->getOne($module);\n+ if ($version && isset($version['setup_version'])) {\n+ return $version['setup_version'];\n+ } else {\n+ return 'Missing!';\n+ }\n+ }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/adminhtml/system.xml",
                    "new_path": "src/Core/etc/adminhtml/system.xml",
                    "diff": "<section id=\"payment\">\n<group id=\"amazon_payment\" translate=\"label\" type=\"text\" sortOrder=\"8\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Amazon Pay</label>\n+ <field id=\"version\" type=\"text\" translate=\"label comment\" sortOrder=\"10\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n+ <frontend_model>Amazon\\Core\\Block\\Adminhtml\\System\\Config\\Form\\Version</frontend_model>\n+ </field>\n<group id=\"general\" translate=\"label\" type=\"text\" sortOrder=\"10\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>General</label>\n<group id=\"credentials\" translate=\"label\" type=\"text\" sortOrder=\"10\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Core/Block/Adminhtml/System/Config/Form/Version.php",
                    "diff": "+<?php\n+\n+namespace Amazon\\Core\\Block\\Adminhtml\\System\\Config\\Form;\n+\n+use Magento\\Backend\\Block\\Template\\Context;\n+use Magento\\Framework\\Module\\ModuleListInterface;\n+\n+class Version extends \\Magento\\Config\\Block\\System\\Config\\Form\\Field\n+{\n+ const MODULE_AMAZON_CORE = 'Amazon_Core';\n+ const MODULE_AMAZON_LOGIN = 'Amazon_Login';\n+ const MODULE_AMAZON_PAYMENT = 'Amazon_Payment';\n+\n+ protected $_moduleList;\n+\n+ public function __construct(\n+ ModuleListInterface $moduleList,\n+ Context $context,\n+ array $data = []\n+ ) {\n+ $this->_moduleList = $moduleList;\n+ parent::__construct($context, $data);\n+ }\n+\n+ public function render(\\Magento\\Framework\\Data\\Form\\Element\\AbstractElement $element)\n+ {\n+ $output = '<div style=\"background-color:#eee;padding:1em;border:1px solid #ddd;\">';\n+ $output .= 'Amazon Core version: ' . $this->getVersion(self::MODULE_AMAZON_CORE) . '<br style=\"display:inherit;\" />';\n+ $output .= 'Amazon Login version: ' . $this->getVersion(self::MODULE_AMAZON_LOGIN) . '<br style=\"display:inherit;\" />';\n+ $output .= 'Amazon Payment version: ' . $this->getVersion(self::MODULE_AMAZON_PAYMENT);\n+ $output .= \"</div>\";\n+ return $output;\n+ }\n+\n+ protected function getVersion($module)\n+ {\n+ $version = $this->_moduleList->getOne($module);\n+ if ($version && isset($version['setup_version'])) {\n+ return $version['setup_version'];\n+ } else {\n+ return 'Missing!';\n+ }\n+ }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/adminhtml/system.xml",
                    "new_path": "src/Core/etc/adminhtml/system.xml",
                    "diff": "<section id=\"payment\">\n<group id=\"amazon_payment\" translate=\"label\" type=\"text\" sortOrder=\"8\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Amazon Pay</label>\n+ <field id=\"version\" type=\"text\" translate=\"label comment\" sortOrder=\"10\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n+ <frontend_model>Amazon\\Core\\Block\\Adminhtml\\System\\Config\\Form\\Version</frontend_model>\n+ </field>\n<group id=\"general\" translate=\"label\" type=\"text\" sortOrder=\"10\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>General</label>\n<group id=\"credentials\" translate=\"label\" type=\"text\" sortOrder=\"10\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n"
                }
            ]
        }
    },
    "Row_36": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Charge on Order notification now uses success style instead of warning"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Charge on Order notification now uses success style instead of warning"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/template/notification.html",
                    "new_path": "src/Payment/view/frontend/web/template/notification.html",
                    "diff": "<!-- ko if: (isAmazonAccountLoggedIn) -->\n<!-- ko if: (chargeOnOrder) -->\n<!-- ko if: (isEuPaymentRegion) -->\n- <div class=\"message warning\"><span data-bind=\"text: message\"></span></div>\n+ <div class=\"message success\"><span data-bind=\"text: message\"></span></div>\n<!-- /ko -->\n<!-- /ko -->\n<!-- /ko -->\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/template/notification.html",
                    "new_path": "src/Payment/view/frontend/web/template/notification.html",
                    "diff": "<!-- ko if: (isAmazonAccountLoggedIn) -->\n<!-- ko if: (chargeOnOrder) -->\n<!-- ko if: (isEuPaymentRegion) -->\n- <div class=\"message warning\"><span data-bind=\"text: message\"></span></div>\n+ <div class=\"message success\"><span data-bind=\"text: message\"></span></div>\n<!-- /ko -->\n<!-- /ko -->\n<!-- /ko -->\n"
                }
            ]
        }
    },
    "Row_37": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Add configuration option for \"Store Name\""
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Add configuration option for \"Store Name\""
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Helper/Data.php",
                    "new_path": "src/Core/Helper/Data.php",
                    "diff": "@@ -469,6 +469,26 @@ class Data extends AbstractHelper\n);\n}\n+ /*\n+ * @return string\n+ */\n+ public function getStoreName($scope = ScopeInterface::SCOPE_STORE, $scopeCode = null)\n+ {\n+ return $this->scopeConfig->getValue(\n+ 'payment/amazon_payment/storename',\n+ $scope,\n+ $scopeCode\n+ );\n+ }\n+\n+ /*\n+ * @return string\n+ */\n+ public function getStoreFrontName($storeId)\n+ {\n+ return $this->storeManager->getStore($storeId)->getName();\n+ }\n+\n/*\n* @return string\n*/\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/adminhtml/system.xml",
                    "new_path": "src/Core/etc/adminhtml/system.xml",
                    "diff": "<source_model>Magento\\Sales\\Model\\Config\\Source\\Order\\Status\\Processing</source_model>\n<config_path>payment/amazon_payment/new_order_status</config_path>\n</field>\n+ <field id=\"storename\" translate=\"label\" type=\"text\" sortOrder=\"30\" showInDefault=\"1\" showInWebsite=\"0\" showInStore=\"1\">\n+ <label>Store Name</label>\n+ <config_path>payment/amazon_payment/storename</config_path>\n+ </field>\n</group>\n<group id=\"sales_exclusions\" translate=\"label\" type=\"text\" sortOrder=\"30\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Sales Exclusions</label>\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Helper/Email.php",
                    "new_path": "src/Payment/Helper/Email.php",
                    "diff": "@@ -74,10 +74,17 @@ class Email extends AbstractHelper\n$order->getStoreId()\n);\n+ $storeName = $this->coreHelper->getStoreName(ScopeInterface::SCOPE_STORE, $order->getStoreId());\n+ if (!$storeName) {\n+ $storeName = $this->coreHelper->getStoreFrontName($order->getStoreId());\n+ }\n+\n$vars = [\n'amazonAccountUrl' => $this->amazonCoreHelper\n->getAmazonAccountUrlByPaymentRegion($paymentRegionByOrderStore),\n+ 'storeName' => $storeName,\n];\n+\n$emailTransportBuilder->setTemplateVars($vars);\n$emailTransportBuilder->getTransport()->sendMessage();\n@@ -92,6 +99,11 @@ class Email extends AbstractHelper\n{\n$emailTransportBuilder = $this->emailTransportBuilderFactory->create();\n+ $storeName = $this->coreHelper->getStoreName(ScopeInterface::SCOPE_STORE, $order->getStoreId());\n+ if (!$storeName) {\n+ $storeName = $this->coreHelper->getStoreFrontName($order->getStoreId());\n+ }\n+\n$emailTransportBuilder->addTo($order->getCustomerEmail(), $order->getCustomerName());\n$emailTransportBuilder->setFrom('general');\n$emailTransportBuilder->setTemplateIdentifier('amazon_payments_auth_hard_decline');\n@@ -101,7 +113,12 @@ class Email extends AbstractHelper\n'store' => $order->getStoreId()\n]\n);\n- $emailTransportBuilder->setTemplateVars([]);\n+\n+ $vars = [\n+ 'storeName' => $storeName,\n+ ];\n+\n+ $emailTransportBuilder->setTemplateVars($vars);\n$emailTransportBuilder->getTransport()->sendMessage();\n}\n}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Model/OrderInformationManagement.php",
                    "new_path": "src/Payment/Model/OrderInformationManagement.php",
                    "diff": "@@ -118,12 +118,17 @@ class OrderInformationManagement implements OrderInformationManagementInterface\n$this->setReservedOrderId($quote);\n+ $storeName = $this->coreHelper->getStoreName(ScopeInterface::SCOPE_STORE, $storeId);\n+ if (!$storeName) {\n+ $storeName = $quote->getStore()->getName();\n+ }\n+\n$data = [\n'amazon_order_reference_id' => $amazonOrderReferenceId,\n'amount' => $quote->getGrandTotal(),\n'currency_code' => $quote->getQuoteCurrencyCode(),\n'seller_order_id' => $quote->getReservedOrderId(),\n- 'store_name' => $quote->getStore()->getName(),\n+ 'store_name' => $storeName,\n'custom_information' =>\n'Magento Version : ' . $this->productMetadata->getVersion() . ' ' .\n'Plugin Version : ' . $this->paymentHelper->getModuleVersion()\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/email/hard-declined-auth.html",
                    "new_path": "src/Payment/view/frontend/email/hard-declined-auth.html",
                    "diff": "<p>{{trans \"Valued customer\"}},</p>\n<br>\n<p>\n- {{trans \"Unfortunately Amazon Pay declined the payment for your order in our online shop %storeName. Please contact us.\" storeName=$store.getFrontendName()}}.\n+ {{trans \"Unfortunately Amazon Pay declined the payment for your order in our online shop %storeName. Please contact us.\" storeName=$storeName}}.\n</p>\n<p>{{trans \"Kind regards\"}},</p>\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/email/soft-declined-auth.html",
                    "new_path": "src/Payment/view/frontend/email/soft-declined-auth.html",
                    "diff": "<p>{{trans \"Valued customer\"}},</p>\n<br>\n<p>\n- {{trans \"Thank you very much for your order at %storeName\" storeName=$store.getFrontendName()}}.\n+ {{trans \"Thank you very much for your order at %storeName\" storeName=$storeName}}.\n{{trans \"Amazon Pay was not able to process your payment\"}}.\n</p>\n<p>\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Helper/Data.php",
                    "new_path": "src/Core/Helper/Data.php",
                    "diff": "@@ -469,6 +469,26 @@ class Data extends AbstractHelper\n);\n}\n+ /*\n+ * @return string\n+ */\n+ public function getStoreName($scope = ScopeInterface::SCOPE_STORE, $scopeCode = null)\n+ {\n+ return $this->scopeConfig->getValue(\n+ 'payment/amazon_payment/storename',\n+ $scope,\n+ $scopeCode\n+ );\n+ }\n+\n+ /*\n+ * @return string\n+ */\n+ public function getStoreFrontName($storeId)\n+ {\n+ return $this->storeManager->getStore($storeId)->getName();\n+ }\n+\n/*\n* @return string\n*/\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/adminhtml/system.xml",
                    "new_path": "src/Core/etc/adminhtml/system.xml",
                    "diff": "<source_model>Magento\\Sales\\Model\\Config\\Source\\Order\\Status\\Processing</source_model>\n<config_path>payment/amazon_payment/new_order_status</config_path>\n</field>\n+ <field id=\"storename\" translate=\"label\" type=\"text\" sortOrder=\"30\" showInDefault=\"1\" showInWebsite=\"0\" showInStore=\"1\">\n+ <label>Store Name</label>\n+ <config_path>payment/amazon_payment/storename</config_path>\n+ </field>\n</group>\n<group id=\"sales_exclusions\" translate=\"label\" type=\"text\" sortOrder=\"30\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Sales Exclusions</label>\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Helper/Email.php",
                    "new_path": "src/Payment/Helper/Email.php",
                    "diff": "@@ -74,10 +74,17 @@ class Email extends AbstractHelper\n$order->getStoreId()\n);\n+ $storeName = $this->coreHelper->getStoreName(ScopeInterface::SCOPE_STORE, $order->getStoreId());\n+ if (!$storeName) {\n+ $storeName = $this->coreHelper->getStoreFrontName($order->getStoreId());\n+ }\n+\n$vars = [\n'amazonAccountUrl' => $this->amazonCoreHelper\n->getAmazonAccountUrlByPaymentRegion($paymentRegionByOrderStore),\n+ 'storeName' => $storeName,\n];\n+\n$emailTransportBuilder->setTemplateVars($vars);\n$emailTransportBuilder->getTransport()->sendMessage();\n@@ -92,6 +99,11 @@ class Email extends AbstractHelper\n{\n$emailTransportBuilder = $this->emailTransportBuilderFactory->create();\n+ $storeName = $this->coreHelper->getStoreName(ScopeInterface::SCOPE_STORE, $order->getStoreId());\n+ if (!$storeName) {\n+ $storeName = $this->coreHelper->getStoreFrontName($order->getStoreId());\n+ }\n+\n$emailTransportBuilder->addTo($order->getCustomerEmail(), $order->getCustomerName());\n$emailTransportBuilder->setFrom('general');\n$emailTransportBuilder->setTemplateIdentifier('amazon_payments_auth_hard_decline');\n@@ -101,7 +113,12 @@ class Email extends AbstractHelper\n'store' => $order->getStoreId()\n]\n);\n- $emailTransportBuilder->setTemplateVars([]);\n+\n+ $vars = [\n+ 'storeName' => $storeName,\n+ ];\n+\n+ $emailTransportBuilder->setTemplateVars($vars);\n$emailTransportBuilder->getTransport()->sendMessage();\n}\n}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Model/OrderInformationManagement.php",
                    "new_path": "src/Payment/Model/OrderInformationManagement.php",
                    "diff": "@@ -118,12 +118,17 @@ class OrderInformationManagement implements OrderInformationManagementInterface\n$this->setReservedOrderId($quote);\n+ $storeName = $this->coreHelper->getStoreName(ScopeInterface::SCOPE_STORE, $storeId);\n+ if (!$storeName) {\n+ $storeName = $quote->getStore()->getName();\n+ }\n+\n$data = [\n'amazon_order_reference_id' => $amazonOrderReferenceId,\n'amount' => $quote->getGrandTotal(),\n'currency_code' => $quote->getQuoteCurrencyCode(),\n'seller_order_id' => $quote->getReservedOrderId(),\n- 'store_name' => $quote->getStore()->getName(),\n+ 'store_name' => $storeName,\n'custom_information' =>\n'Magento Version : ' . $this->productMetadata->getVersion() . ' ' .\n'Plugin Version : ' . $this->paymentHelper->getModuleVersion()\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/email/hard-declined-auth.html",
                    "new_path": "src/Payment/view/frontend/email/hard-declined-auth.html",
                    "diff": "<p>{{trans \"Valued customer\"}},</p>\n<br>\n<p>\n- {{trans \"Unfortunately Amazon Pay declined the payment for your order in our online shop %storeName. Please contact us.\" storeName=$store.getFrontendName()}}.\n+ {{trans \"Unfortunately Amazon Pay declined the payment for your order in our online shop %storeName. Please contact us.\" storeName=$storeName}}.\n</p>\n<p>{{trans \"Kind regards\"}},</p>\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/email/soft-declined-auth.html",
                    "new_path": "src/Payment/view/frontend/email/soft-declined-auth.html",
                    "diff": "<p>{{trans \"Valued customer\"}},</p>\n<br>\n<p>\n- {{trans \"Thank you very much for your order at %storeName\" storeName=$store.getFrontendName()}}.\n+ {{trans \"Thank you very much for your order at %storeName\" storeName=$storeName}}.\n{{trans \"Amazon Pay was not able to process your payment\"}}.\n</p>\n<p>\n"
                }
            ]
        }
    },
    "Row_38": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Added a feature to block Amazon checkout widget when quote grand total is 0"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Added a feature to block Amazon checkout widget when quote grand total is 0"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Helper/CategoryExclusion.php",
                    "new_path": "src/Core/Helper/CategoryExclusion.php",
                    "diff": "@@ -77,6 +77,11 @@ class CategoryExclusion extends AbstractHelper\n*/\npublic function isQuoteDirty()\n{\n+ // Quote is 0 or less\n+ if ($this->quote->getGrandTotal() <= 0) {\n+ return true;\n+ }\n+\nif (!empty($this->getExcludedCategories())) {\n/** @var \\Magento\\Quote\\Model\\Quote\\Item\\AbstractItem $quoteItem */\nforeach ($this->quote->getAllItems() as $quoteItem) {\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Helper/CategoryExclusion.php",
                    "new_path": "src/Core/Helper/CategoryExclusion.php",
                    "diff": "@@ -77,6 +77,11 @@ class CategoryExclusion extends AbstractHelper\n*/\npublic function isQuoteDirty()\n{\n+ // Quote is 0 or less\n+ if ($this->quote->getGrandTotal() <= 0) {\n+ return true;\n+ }\n+\nif (!empty($this->getExcludedCategories())) {\n/** @var \\Magento\\Quote\\Model\\Quote\\Item\\AbstractItem $quoteItem */\nforeach ($this->quote->getAllItems() as $quoteItem) {\n"
                }
            ]
        }
    },
    "Row_39": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Shipping information plugin now ignores quote with grand total 0"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Shipping information plugin now ignores quote with grand total 0"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Helper/Shortcut/CheckoutValidator.php",
                    "new_path": "src/Payment/Helper/Shortcut/CheckoutValidator.php",
                    "diff": "@@ -57,7 +57,6 @@ class CheckoutValidator implements ValidatorInterface\n*/\npublic function validate($code, $isInCatalog)\n{\n- return false;\nreturn $this->_shortcutValidator->isContextAvailable($code, $isInCatalog)\n&& $this->_shortcutValidator->isPriceOrSetAvailable($isInCatalog)\n&& $this->isMethodQuoteAvailable($code, $isInCatalog)\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Plugin/ShippingInformationManagement.php",
                    "new_path": "src/Payment/Plugin/ShippingInformationManagement.php",
                    "diff": "@@ -51,6 +51,12 @@ class ShippingInformationManagement\n$return = $proceed($cartId, $shippingInformation);\n$quote = $this->cartRepository->getActive($cartId);\n+\n+ /* Grand total is 0, skip rest of the plugin */\n+ if ($quote->getGrandTotal() <= 0) {\n+ return $return;\n+ }\n+\n$amazonOrderReferenceId = $quote->getExtensionAttributes()->getAmazonOrderReferenceId();\nif ($amazonOrderReferenceId) {\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Helper/Shortcut/CheckoutValidator.php",
                    "new_path": "src/Payment/Helper/Shortcut/CheckoutValidator.php",
                    "diff": "@@ -57,7 +57,6 @@ class CheckoutValidator implements ValidatorInterface\n*/\npublic function validate($code, $isInCatalog)\n{\n- return false;\nreturn $this->_shortcutValidator->isContextAvailable($code, $isInCatalog)\n&& $this->_shortcutValidator->isPriceOrSetAvailable($isInCatalog)\n&& $this->isMethodQuoteAvailable($code, $isInCatalog)\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Plugin/ShippingInformationManagement.php",
                    "new_path": "src/Payment/Plugin/ShippingInformationManagement.php",
                    "diff": "@@ -51,6 +51,12 @@ class ShippingInformationManagement\n$return = $proceed($cartId, $shippingInformation);\n$quote = $this->cartRepository->getActive($cartId);\n+\n+ /* Grand total is 0, skip rest of the plugin */\n+ if ($quote->getGrandTotal() <= 0) {\n+ return $return;\n+ }\n+\n$amazonOrderReferenceId = $quote->getExtensionAttributes()->getAmazonOrderReferenceId();\nif ($amazonOrderReferenceId) {\n"
                }
            ]
        }
    },
    "Row_40": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Card charge notification removed"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Card charge notification removed"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/layout/checkout_index_index.xml",
                    "new_path": "src/Payment/view/frontend/layout/checkout_index_index.xml",
                    "diff": "<item name=\"components\" xsi:type=\"array\">\n<item name=\"checkout\" xsi:type=\"array\">\n<item name=\"children\" xsi:type=\"array\">\n+ <!--\n<item name=\"amazon-payment-notification\" xsi:type=\"array\">\n<item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/notification</item>\n<item name=\"displayArea\" xsi:type=\"string\">messages</item>\n<item name=\"message\" xsi:type=\"string\" translate=\"true\">Your card will be charged on completion of this order.</item>\n</item>\n</item>\n+ -->\n<item name=\"steps\" xsi:type=\"array\">\n<item name=\"children\" xsi:type=\"array\">\n<item name=\"shipping-step\" xsi:type=\"array\">\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/layout/checkout_index_index.xml",
                    "new_path": "src/Payment/view/frontend/layout/checkout_index_index.xml",
                    "diff": "<item name=\"components\" xsi:type=\"array\">\n<item name=\"checkout\" xsi:type=\"array\">\n<item name=\"children\" xsi:type=\"array\">\n+ <!--\n<item name=\"amazon-payment-notification\" xsi:type=\"array\">\n<item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/notification</item>\n<item name=\"displayArea\" xsi:type=\"string\">messages</item>\n<item name=\"message\" xsi:type=\"string\" translate=\"true\">Your card will be charged on completion of this order.</item>\n</item>\n</item>\n+ -->\n<item name=\"steps\" xsi:type=\"array\">\n<item name=\"children\" xsi:type=\"array\">\n<item name=\"shipping-step\" xsi:type=\"array\">\n"
                }
            ]
        }
    },
    "Row_41": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Updating supported versions of PHP per Magento documentation"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Updating supported versions of PHP per Magento documentation"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "marketplace-composer.json",
                    "new_path": "marketplace-composer.json",
                    "diff": "\"Apache-2.0\"\n],\n\"require\": {\n- \"php\": \"~5.6.0|7.0.2|~7.0.6\",\n+ \"php\": \"~5.6.5|7.0.2|7.0.4|~7.0.6\",\n\"amzn/login-and-pay-with-amazon-sdk-php\": \"^2.1.0\",\n\"amzn/amazon-pay-and-login-with-amazon-core-module\": \"^1.1.0\",\n\"amzn/login-with-amazon-module\": \"^1.1.0\",\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "marketplace-composer.json",
                    "new_path": "marketplace-composer.json",
                    "diff": "\"Apache-2.0\"\n],\n\"require\": {\n- \"php\": \"~5.6.0|7.0.2|~7.0.6\",\n+ \"php\": \"~5.6.5|7.0.2|7.0.4|~7.0.6\",\n\"amzn/login-and-pay-with-amazon-sdk-php\": \"^2.1.0\",\n\"amzn/amazon-pay-and-login-with-amazon-core-module\": \"^1.1.0\",\n\"amzn/login-with-amazon-module\": \"^1.1.0\",\n"
                }
            ]
        }
    },
    "Row_42": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Do not remove 'free' method in case it exists"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Do not remove 'free' method in case it exists"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/view/payment/list.js",
                    "new_path": "src/Payment/view/frontend/web/js/view/payment/list.js",
                    "diff": "@@ -42,7 +42,7 @@ define([\ncheckoutDataResolver.resolvePaymentMethod();\n//remove renderer for \"deleted\" payment methods\n_.each(changes, function (change) {\n- if (amazonStorage.isAmazonAccountLoggedIn() && change.value.method !== 'amazon_payment') {\n+ if (this._shouldRemovePaymentMethod(change.value.method)) {\nthis.removeRenderer(change.value.method);\nchange.status = 'deleted';\n}\n@@ -54,6 +54,15 @@ define([\nreturn this;\n},\n+ /**\n+ * Check if a payment method is applicable with Amazon Pay\n+ * @param method\n+ * @returns {boolean}\n+ * @private\n+ */\n+ _shouldRemovePaymentMethod: function (method) {\n+ return amazonStorage.isAmazonAccountLoggedIn() && method !== 'amazon_payment' && method !== 'free';\n+ },\n/**\n* handle decline codes\n* @private\n@@ -91,7 +100,7 @@ define([\n//if the payment methods are already set\n$(document).on('rendered', '#amazon_payment', function () {\n_.each(paymentMethods(), function (payment) {\n- if (amazonStorage.isAmazonAccountLoggedIn() && payment.method !== 'amazon_payment') {\n+ if (this._shouldRemovePaymentMethod(payment.method)) {\nthis.removeRenderer(payment.method);\n}\n}, self);\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/view/payment/list.js",
                    "new_path": "src/Payment/view/frontend/web/js/view/payment/list.js",
                    "diff": "@@ -42,7 +42,7 @@ define([\ncheckoutDataResolver.resolvePaymentMethod();\n//remove renderer for \"deleted\" payment methods\n_.each(changes, function (change) {\n- if (amazonStorage.isAmazonAccountLoggedIn() && change.value.method !== 'amazon_payment') {\n+ if (this._shouldRemovePaymentMethod(change.value.method)) {\nthis.removeRenderer(change.value.method);\nchange.status = 'deleted';\n}\n@@ -54,6 +54,15 @@ define([\nreturn this;\n},\n+ /**\n+ * Check if a payment method is applicable with Amazon Pay\n+ * @param method\n+ * @returns {boolean}\n+ * @private\n+ */\n+ _shouldRemovePaymentMethod: function (method) {\n+ return amazonStorage.isAmazonAccountLoggedIn() && method !== 'amazon_payment' && method !== 'free';\n+ },\n/**\n* handle decline codes\n* @private\n@@ -91,7 +100,7 @@ define([\n//if the payment methods are already set\n$(document).on('rendered', '#amazon_payment', function () {\n_.each(paymentMethods(), function (payment) {\n- if (amazonStorage.isAmazonAccountLoggedIn() && payment.method !== 'amazon_payment') {\n+ if (this._shouldRemovePaymentMethod(payment.method)) {\nthis.removeRenderer(payment.method);\n}\n}, self);\n"
                }
            ]
        }
    },
    "Row_43": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Restore original validation line"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Restore original validation line"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Helper/Shortcut/CheckoutValidator.php",
                    "new_path": "src/Payment/Helper/Shortcut/CheckoutValidator.php",
                    "diff": "@@ -57,6 +57,7 @@ class CheckoutValidator implements ValidatorInterface\n*/\npublic function validate($code, $isInCatalog)\n{\n+ return false;\nreturn $this->_shortcutValidator->isContextAvailable($code, $isInCatalog)\n&& $this->_shortcutValidator->isPriceOrSetAvailable($isInCatalog)\n&& $this->isMethodQuoteAvailable($code, $isInCatalog)\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Helper/Shortcut/CheckoutValidator.php",
                    "new_path": "src/Payment/Helper/Shortcut/CheckoutValidator.php",
                    "diff": "@@ -57,6 +57,7 @@ class CheckoutValidator implements ValidatorInterface\n*/\npublic function validate($code, $isInCatalog)\n{\n+ return false;\nreturn $this->_shortcutValidator->isContextAvailable($code, $isInCatalog)\n&& $this->_shortcutValidator->isPriceOrSetAvailable($isInCatalog)\n&& $this->isMethodQuoteAvailable($code, $isInCatalog)\n"
                }
            ]
        }
    },
    "Row_44": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Version info update"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Version info update"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/System/Config/Form/Version.php",
                    "new_path": "src/Core/Block/Adminhtml/System/Config/Form/Version.php",
                    "diff": "@@ -25,9 +25,7 @@ class Version extends \\Magento\\Config\\Block\\System\\Config\\Form\\Field\npublic function render(\\Magento\\Framework\\Data\\Form\\Element\\AbstractElement $element)\n{\n$output = '<div style=\"background-color:#eee;padding:1em;border:1px solid #ddd;\">';\n- $output .= 'Amazon Core version: ' . $this->getVersion(self::MODULE_AMAZON_CORE) . '<br style=\"display:inherit;\" />';\n- $output .= 'Amazon Login version: ' . $this->getVersion(self::MODULE_AMAZON_LOGIN) . '<br style=\"display:inherit;\" />';\n- $output .= 'Amazon Payment version: ' . $this->getVersion(self::MODULE_AMAZON_PAYMENT);\n+ $output .= 'Extension version: ' . $this->getVersion(self::MODULE_AMAZON_CORE);\n$output .= \"</div>\";\nreturn $output;\n}\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/System/Config/Form/Version.php",
                    "new_path": "src/Core/Block/Adminhtml/System/Config/Form/Version.php",
                    "diff": "@@ -25,9 +25,7 @@ class Version extends \\Magento\\Config\\Block\\System\\Config\\Form\\Field\npublic function render(\\Magento\\Framework\\Data\\Form\\Element\\AbstractElement $element)\n{\n$output = '<div style=\"background-color:#eee;padding:1em;border:1px solid #ddd;\">';\n- $output .= 'Amazon Core version: ' . $this->getVersion(self::MODULE_AMAZON_CORE) . '<br style=\"display:inherit;\" />';\n- $output .= 'Amazon Login version: ' . $this->getVersion(self::MODULE_AMAZON_LOGIN) . '<br style=\"display:inherit;\" />';\n- $output .= 'Amazon Payment version: ' . $this->getVersion(self::MODULE_AMAZON_PAYMENT);\n+ $output .= 'Extension version: ' . $this->getVersion(self::MODULE_AMAZON_CORE);\n$output .= \"</div>\";\nreturn $output;\n}\n"
                }
            ]
        }
    },
    "Row_45": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Forces extension explicitly use built in modernizr plugin"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Forces extension explicitly use built in modernizr plugin"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/amazon-button.js",
                    "new_path": "src/Payment/view/frontend/web/js/amazon-button.js",
                    "diff": "@@ -21,7 +21,7 @@ define([\n'modernizr/modernizr',\n'amazonCore',\n'jquery/ui'\n-], function ($, customerData, sectionConfig, amazonPaymentConfig, amazonCsrf) {\n+], function ($, customerData, sectionConfig, amazonPaymentConfig, amazonCsrf, mdrnzr) {\n\"use strict\";\nvar _this,\n@@ -79,7 +79,7 @@ define([\n},\nusePopUp: function () {\n//always use redirect journey on product page and touch devices\n- return ((window.location.protocol === 'https:' && !$('body').hasClass('catalog-product-view')) && !Modernizr.touch);\n+ return ((window.location.protocol === 'https:' && !$('body').hasClass('catalog-product-view')) && !mdrnzr.touch);\n},\n/**\n* onAmazonPaymentsReady\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/amazon-button.js",
                    "new_path": "src/Payment/view/frontend/web/js/amazon-button.js",
                    "diff": "@@ -21,7 +21,7 @@ define([\n'modernizr/modernizr',\n'amazonCore',\n'jquery/ui'\n-], function ($, customerData, sectionConfig, amazonPaymentConfig, amazonCsrf) {\n+], function ($, customerData, sectionConfig, amazonPaymentConfig, amazonCsrf, mdrnzr) {\n\"use strict\";\nvar _this,\n@@ -79,7 +79,7 @@ define([\n},\nusePopUp: function () {\n//always use redirect journey on product page and touch devices\n- return ((window.location.protocol === 'https:' && !$('body').hasClass('catalog-product-view')) && !Modernizr.touch);\n+ return ((window.location.protocol === 'https:' && !$('body').hasClass('catalog-product-view')) && !mdrnzr.touch);\n},\n/**\n* onAmazonPaymentsReady\n"
                }
            ]
        }
    },
    "Row_46": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Fixed a condition that is no longer necessary"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Fixed a condition that is no longer necessary"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Helper/CategoryExclusion.php",
                    "new_path": "src/Core/Helper/CategoryExclusion.php",
                    "diff": "@@ -77,11 +77,6 @@ class CategoryExclusion extends AbstractHelper\n*/\npublic function isQuoteDirty()\n{\n- // Quote is 0 or less\n- if ($this->quote->getGrandTotal() <= 0) {\n- return true;\n- }\n-\nif (!empty($this->getExcludedCategories())) {\n/** @var \\Magento\\Quote\\Model\\Quote\\Item\\AbstractItem $quoteItem */\nforeach ($this->quote->getAllItems() as $quoteItem) {\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Helper/CategoryExclusion.php",
                    "new_path": "src/Core/Helper/CategoryExclusion.php",
                    "diff": "@@ -77,11 +77,6 @@ class CategoryExclusion extends AbstractHelper\n*/\npublic function isQuoteDirty()\n{\n- // Quote is 0 or less\n- if ($this->quote->getGrandTotal() <= 0) {\n- return true;\n- }\n-\nif (!empty($this->getExcludedCategories())) {\n/** @var \\Magento\\Quote\\Model\\Quote\\Item\\AbstractItem $quoteItem */\nforeach ($this->quote->getAllItems() as $quoteItem) {\n"
                }
            ]
        }
    },
    "Row_47": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Refix the Modernizr requirement with adding support for both v2 and v3 APIs"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Refix the Modernizr requirement with adding support for both v2 and v3 APIs"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/amazon-button.js",
                    "new_path": "src/Payment/view/frontend/web/js/amazon-button.js",
                    "diff": "@@ -21,7 +21,7 @@ define([\n'modernizr/modernizr',\n'amazonCore',\n'jquery/ui'\n-], function ($, customerData, sectionConfig, amazonPaymentConfig, amazonCsrf, mdrnzr) {\n+], function ($, customerData, sectionConfig, amazonPaymentConfig, amazonCsrf) {\n\"use strict\";\nvar _this,\n@@ -77,9 +77,18 @@ define([\n_popupCallback: function () {\nreturn _this.usePopUp() ? _this.secureHttpsCallback : amazonPaymentConfig.getValue('oAuthHashRedirectUrl');\n},\n+ /**\n+ * Are touch events available\n+ * (Supports both v2 and v3 Modernizr)\n+ * @returns {Boolean}\n+ * @private\n+ */\n+ _touchSupported: function () {\n+ return Modernizr.touch !== undefined ? Modernizr.touch : Modernizr.touchevents;\n+ },\nusePopUp: function () {\n//always use redirect journey on product page and touch devices\n- return ((window.location.protocol === 'https:' && !$('body').hasClass('catalog-product-view')) && !mdrnzr.touch);\n+ return ((window.location.protocol === 'https:' && !$('body').hasClass('catalog-product-view')) && !_this._touchSupported());\n},\n/**\n* onAmazonPaymentsReady\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/amazon-button.js",
                    "new_path": "src/Payment/view/frontend/web/js/amazon-button.js",
                    "diff": "@@ -21,7 +21,7 @@ define([\n'modernizr/modernizr',\n'amazonCore',\n'jquery/ui'\n-], function ($, customerData, sectionConfig, amazonPaymentConfig, amazonCsrf, mdrnzr) {\n+], function ($, customerData, sectionConfig, amazonPaymentConfig, amazonCsrf) {\n\"use strict\";\nvar _this,\n@@ -77,9 +77,18 @@ define([\n_popupCallback: function () {\nreturn _this.usePopUp() ? _this.secureHttpsCallback : amazonPaymentConfig.getValue('oAuthHashRedirectUrl');\n},\n+ /**\n+ * Are touch events available\n+ * (Supports both v2 and v3 Modernizr)\n+ * @returns {Boolean}\n+ * @private\n+ */\n+ _touchSupported: function () {\n+ return Modernizr.touch !== undefined ? Modernizr.touch : Modernizr.touchevents;\n+ },\nusePopUp: function () {\n//always use redirect journey on product page and touch devices\n- return ((window.location.protocol === 'https:' && !$('body').hasClass('catalog-product-view')) && !mdrnzr.touch);\n+ return ((window.location.protocol === 'https:' && !$('body').hasClass('catalog-product-view')) && !_this._touchSupported());\n},\n/**\n* onAmazonPaymentsReady\n"
                }
            ]
        }
    },
    "Row_48": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Comments, internationalisation"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Comments, internationalisation"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/System/Config/Form/Version.php",
                    "new_path": "src/Core/Block/Adminhtml/System/Config/Form/Version.php",
                    "diff": "@@ -11,8 +11,17 @@ class Version extends \\Magento\\Config\\Block\\System\\Config\\Form\\Field\nconst MODULE_AMAZON_LOGIN = 'Amazon_Login';\nconst MODULE_AMAZON_PAYMENT = 'Amazon_Payment';\n+ /**\n+ * @var ModuleListInterface\n+ */\nprotected $_moduleList;\n+ /**\n+ * Version constructor.\n+ * @param ModuleListInterface $moduleList\n+ * @param Context $context\n+ * @param array $data\n+ */\npublic function __construct(\nModuleListInterface $moduleList,\nContext $context,\n@@ -22,21 +31,29 @@ class Version extends \\Magento\\Config\\Block\\System\\Config\\Form\\Field\nparent::__construct($context, $data);\n}\n+ /**\n+ * @param \\Magento\\Framework\\Data\\Form\\Element\\AbstractElement $element\n+ * @return string\n+ */\npublic function render(\\Magento\\Framework\\Data\\Form\\Element\\AbstractElement $element)\n{\n$output = '<div style=\"background-color:#eee;padding:1em;border:1px solid #ddd;\">';\n- $output .= 'Extension version: ' . $this->getVersion(self::MODULE_AMAZON_CORE);\n+ $output .= __('Extension version') . ': ' . $this->getVersion(self::MODULE_AMAZON_CORE);\n$output .= \"</div>\";\nreturn $output;\n}\n+ /**\n+ * @param $module\n+ * @return \\Magento\\Framework\\Phrase\n+ */\nprotected function getVersion($module)\n{\n$version = $this->_moduleList->getOne($module);\nif ($version && isset($version['setup_version'])) {\nreturn $version['setup_version'];\n} else {\n- return 'Missing!';\n+ return __('Missing!');\n}\n}\n}\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/System/Config/Form/Version.php",
                    "new_path": "src/Core/Block/Adminhtml/System/Config/Form/Version.php",
                    "diff": "@@ -11,8 +11,17 @@ class Version extends \\Magento\\Config\\Block\\System\\Config\\Form\\Field\nconst MODULE_AMAZON_LOGIN = 'Amazon_Login';\nconst MODULE_AMAZON_PAYMENT = 'Amazon_Payment';\n+ /**\n+ * @var ModuleListInterface\n+ */\nprotected $_moduleList;\n+ /**\n+ * Version constructor.\n+ * @param ModuleListInterface $moduleList\n+ * @param Context $context\n+ * @param array $data\n+ */\npublic function __construct(\nModuleListInterface $moduleList,\nContext $context,\n@@ -22,21 +31,29 @@ class Version extends \\Magento\\Config\\Block\\System\\Config\\Form\\Field\nparent::__construct($context, $data);\n}\n+ /**\n+ * @param \\Magento\\Framework\\Data\\Form\\Element\\AbstractElement $element\n+ * @return string\n+ */\npublic function render(\\Magento\\Framework\\Data\\Form\\Element\\AbstractElement $element)\n{\n$output = '<div style=\"background-color:#eee;padding:1em;border:1px solid #ddd;\">';\n- $output .= 'Extension version: ' . $this->getVersion(self::MODULE_AMAZON_CORE);\n+ $output .= __('Extension version') . ': ' . $this->getVersion(self::MODULE_AMAZON_CORE);\n$output .= \"</div>\";\nreturn $output;\n}\n+ /**\n+ * @param $module\n+ * @return \\Magento\\Framework\\Phrase\n+ */\nprotected function getVersion($module)\n{\n$version = $this->_moduleList->getOne($module);\nif ($version && isset($version['setup_version'])) {\nreturn $version['setup_version'];\n} else {\n- return 'Missing!';\n+ return __('Missing!');\n}\n}\n}\n"
                }
            ]
        }
    },
    "Row_49": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Updated code safety, do not operate or order when payment != amazon"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Updated code safety, do not operate or order when payment != amazon"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Observer/CompleteOrder.php",
                    "new_path": "src/Payment/Observer/CompleteOrder.php",
                    "diff": "@@ -30,30 +30,44 @@ class CompleteOrder implements ObserverInterface\n*/\nprotected $orderInformationManagement;\n+ /**\n+ * CompleteOrder constructor.\n+ * @param OrderInformationManagement $orderInformationManagement\n+ */\npublic function __construct(\nOrderInformationManagement $orderInformationManagement\n) {\n$this->orderInformationManagement = $orderInformationManagement;\n}\n+ /**\n+ * @param Observer $observer\n+ */\npublic function execute(Observer $observer)\n{\n/**\n* @var OrderInterface $order\n*/\n$order = $observer->getOrder();\n- $complete = Order::STATE_COMPLETE;\n- if ($order->getState() == $complete && $order->getStoredData()[OrderInterface::STATE] != $complete) {\n+ if ($order->getPayment() && $order->getPayment()->getMethod() != Amazon::PAYMENT_METHOD_CODE) {\n+ return;\n+ }\n+\n+ if ($order->getState() == Order::STATE_COMPLETE &&\n+ $order->getStoredData()[OrderInterface::STATE] != Order::STATE_COMPLETE) {\n$this->closeOrderReference($order);\n}\n}\n+ /**\n+ * @param OrderInterface $order\n+ */\nprotected function closeOrderReference(OrderInterface $order)\n{\ntry {\n$amazonOrderReferenceId = $order->getExtensionAttributes()->getAmazonOrderReferenceId();\n- if ($amazonOrderReferenceId && Amazon::PAYMENT_METHOD_CODE == $order->getPayment()->getMethod()) {\n+ if ($amazonOrderReferenceId) {\n$this->orderInformationManagement->closeOrderReference($amazonOrderReferenceId, $order->getStoreId());\n}\n} catch (Exception $e) {\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Observer/CompleteOrder.php",
                    "new_path": "src/Payment/Observer/CompleteOrder.php",
                    "diff": "@@ -30,30 +30,44 @@ class CompleteOrder implements ObserverInterface\n*/\nprotected $orderInformationManagement;\n+ /**\n+ * CompleteOrder constructor.\n+ * @param OrderInformationManagement $orderInformationManagement\n+ */\npublic function __construct(\nOrderInformationManagement $orderInformationManagement\n) {\n$this->orderInformationManagement = $orderInformationManagement;\n}\n+ /**\n+ * @param Observer $observer\n+ */\npublic function execute(Observer $observer)\n{\n/**\n* @var OrderInterface $order\n*/\n$order = $observer->getOrder();\n- $complete = Order::STATE_COMPLETE;\n- if ($order->getState() == $complete && $order->getStoredData()[OrderInterface::STATE] != $complete) {\n+ if ($order->getPayment() && $order->getPayment()->getMethod() != Amazon::PAYMENT_METHOD_CODE) {\n+ return;\n+ }\n+\n+ if ($order->getState() == Order::STATE_COMPLETE &&\n+ $order->getStoredData()[OrderInterface::STATE] != Order::STATE_COMPLETE) {\n$this->closeOrderReference($order);\n}\n}\n+ /**\n+ * @param OrderInterface $order\n+ */\nprotected function closeOrderReference(OrderInterface $order)\n{\ntry {\n$amazonOrderReferenceId = $order->getExtensionAttributes()->getAmazonOrderReferenceId();\n- if ($amazonOrderReferenceId && Amazon::PAYMENT_METHOD_CODE == $order->getPayment()->getMethod()) {\n+ if ($amazonOrderReferenceId) {\n$this->orderInformationManagement->closeOrderReference($amazonOrderReferenceId, $order->getStoreId());\n}\n} catch (Exception $e) {\n"
                }
            ]
        }
    },
    "Row_50": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Update installation.rst\nFix typo."
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Update installation.rst\nFix typo."
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "docs/installation.rst",
                    "new_path": "docs/installation.rst",
                    "diff": "@@ -8,7 +8,7 @@ Pre-installation steps\nInstallation process\n--------------------\nCurrently, the installation via the web setup wizard is the preferred way of installing the extension.\n-Please follow this guide_ to learm how this works.\n+Please follow this guide_ to learn how this works.\n.. _guide: http://docs.magento.com/marketplace/user_guide/quick-tour/install-extension.html\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "docs/installation.rst",
                    "new_path": "docs/installation.rst",
                    "diff": "@@ -8,7 +8,7 @@ Pre-installation steps\nInstallation process\n--------------------\nCurrently, the installation via the web setup wizard is the preferred way of installing the extension.\n-Please follow this guide_ to learm how this works.\n+Please follow this guide_ to learn how this works.\n.. _guide: http://docs.magento.com/marketplace/user_guide/quick-tour/install-extension.html\n"
                }
            ]
        }
    },
    "Row_51": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Modify Installation Section of docs"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Modify Installation Section of docs"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "docs/installation.rst",
                    "new_path": "docs/installation.rst",
                    "diff": "@@ -5,20 +5,24 @@ Pre-installation steps\n----------------------\n* Create a backup of your shop before proceeding to install.\n-Installation process\n---------------------\n-The installation via the web setup wizard is the preferred way of installing the extension.\n-Please follow this guide_ to learm how this works.\n+Web Setup Wizard / Magento Marketplace Install Method (Preferred)\n+-----------------------------------------------------------------\n+The installation via the Web Setup Wizard is the preferred method of installation.\n+Please follow the `Magento Marketplace User Guide`_ to learn how this works.\n-.. _guide: http://docs.magento.com/marketplace/user_guide/quick-tour/install-extension.html\n+Our extension can be found here: https://marketplace.magento.com/amzn-amazon-pay-and-login-magento-2-module.html\n+.. _`Magento Marketplace User Guide`: http://docs.magento.com/marketplace/user_guide/quick-tour/install-extension.html\n+\n+Manual Composer Install Method\n+------------------------------\nIn case you are not able or willing to use the web installation, you can install the extension using composer.\n-- Sign in to your server via ssh\n-- cd into you Magento instalation directory\n+- Sign in to your server via SSH\n+- `cd` into you Magento installation directory\n- Install the extension via composer: `composer require amzn/amazon-payments-magento-2-plugin:^1.1.0`\n- Enable the extension: `php bin/magento module:enable Amazon_Core Amazon_Login Amazon_Payment`\n- Upgrade the Magento instalation: `php bin/magento setup:upgrade`\n-- Follow any advice the upgrade routine will give\n+- Follow any advice the upgrade routine provides\n- Deploy static content: `php bin/magento setup:static-content:deploy xx_XX yy_YY` where xx_XX, yy_YY, ... are the locales you are aiming to support\n- Check permissions on directories and files and set them correctly if needed\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "docs/installation.rst",
                    "new_path": "docs/installation.rst",
                    "diff": "@@ -5,20 +5,24 @@ Pre-installation steps\n----------------------\n* Create a backup of your shop before proceeding to install.\n-Installation process\n---------------------\n-The installation via the web setup wizard is the preferred way of installing the extension.\n-Please follow this guide_ to learm how this works.\n+Web Setup Wizard / Magento Marketplace Install Method (Preferred)\n+-----------------------------------------------------------------\n+The installation via the Web Setup Wizard is the preferred method of installation.\n+Please follow the `Magento Marketplace User Guide`_ to learn how this works.\n-.. _guide: http://docs.magento.com/marketplace/user_guide/quick-tour/install-extension.html\n+Our extension can be found here: https://marketplace.magento.com/amzn-amazon-pay-and-login-magento-2-module.html\n+.. _`Magento Marketplace User Guide`: http://docs.magento.com/marketplace/user_guide/quick-tour/install-extension.html\n+\n+Manual Composer Install Method\n+------------------------------\nIn case you are not able or willing to use the web installation, you can install the extension using composer.\n-- Sign in to your server via ssh\n-- cd into you Magento instalation directory\n+- Sign in to your server via SSH\n+- `cd` into you Magento installation directory\n- Install the extension via composer: `composer require amzn/amazon-payments-magento-2-plugin:^1.1.0`\n- Enable the extension: `php bin/magento module:enable Amazon_Core Amazon_Login Amazon_Payment`\n- Upgrade the Magento instalation: `php bin/magento setup:upgrade`\n-- Follow any advice the upgrade routine will give\n+- Follow any advice the upgrade routine provides\n- Deploy static content: `php bin/magento setup:static-content:deploy xx_XX yy_YY` where xx_XX, yy_YY, ... are the locales you are aiming to support\n- Check permissions on directories and files and set them correctly if needed\n"
                }
            ]
        }
    },
    "Row_52": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Update overview.rst\nUpdating getting the extension section."
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Update overview.rst\nUpdating getting the extension section."
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "docs/overview.rst",
                    "new_path": "docs/overview.rst",
                    "diff": "@@ -20,6 +20,9 @@ Extension features\nGetting the extension\n---------------------\n-TBC\n+The extension can be installed using the following methods:\n+\n+* Preferred Method - From the Magento Marketplace using the Web Setup Wizard\n+* Manually using composer from the command line\nRefer to the :doc:`installation` section to get more details concerning installation procedure.\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "docs/overview.rst",
                    "new_path": "docs/overview.rst",
                    "diff": "@@ -20,6 +20,9 @@ Extension features\nGetting the extension\n---------------------\n-TBC\n+The extension can be installed using the following methods:\n+\n+* Preferred Method - From the Magento Marketplace using the Web Setup Wizard\n+* Manually using composer from the command line\nRefer to the :doc:`installation` section to get more details concerning installation procedure.\n"
                }
            ]
        }
    },
    "Row_53": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Update conf.py\nupdating version number"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Update conf.py\nupdating version number"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "docs/conf.py",
                    "new_path": "docs/conf.py",
                    "diff": "@@ -60,9 +60,9 @@ author = u'Amazon.com Inc or its affiliates'\n# built documents.\n#\n# The short X.Y version.\n-version = u'1.1.0'\n+version = u'1.1.1'\n# The full version, including alpha/beta/rc tags.\n-release = u'1.1.0'\n+release = u'1.1.1'\n# The language for content autogenerated by Sphinx. Refer to documentation\n# for a list of supported languages.\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "docs/conf.py",
                    "new_path": "docs/conf.py",
                    "diff": "@@ -60,9 +60,9 @@ author = u'Amazon.com Inc or its affiliates'\n# built documents.\n#\n# The short X.Y version.\n-version = u'1.1.0'\n+version = u'1.1.1'\n# The full version, including alpha/beta/rc tags.\n-release = u'1.1.0'\n+release = u'1.1.1'\n# The language for content autogenerated by Sphinx. Refer to documentation\n# for a list of supported languages.\n"
                }
            ]
        }
    },
    "Row_54": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Changed the way how 'amazon_payment' is retreived to fix a bug where amazon widget would not be reloaded in case of auth is declined"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Changed the way how 'amazon_payment' is retreived to fix a bug where amazon widget would not be reloaded in case of auth is declined"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/view/payment/list.js",
                    "new_path": "src/Payment/view/frontend/web/js/view/payment/list.js",
                    "diff": "@@ -125,12 +125,10 @@ define([\n* @private\n*/\n_reInitializeAmazonWalletWidget: function () {\n- var items = this.getRegion('payment-method-items');\n- _.find(items(), function (value) {\n- if (value.index === 'amazon_payment') {\n- value.renderPaymentWidget();\n+ var child = this.getChild('amazon_payment');\n+ if (child) {\n+ child.renderPaymentWidget();\n}\n- }, this);\n},\n/**\n* hides editable content and links to prevent unexptect behaviour\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/view/payment/list.js",
                    "new_path": "src/Payment/view/frontend/web/js/view/payment/list.js",
                    "diff": "@@ -125,12 +125,10 @@ define([\n* @private\n*/\n_reInitializeAmazonWalletWidget: function () {\n- var items = this.getRegion('payment-method-items');\n- _.find(items(), function (value) {\n- if (value.index === 'amazon_payment') {\n- value.renderPaymentWidget();\n+ var child = this.getChild('amazon_payment');\n+ if (child) {\n+ child.renderPaymentWidget();\n}\n- }, this);\n},\n/**\n* hides editable content and links to prevent unexptect behaviour\n"
                }
            ]
        }
    },
    "Row_55": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Update amazon-button.js\nUpdate comment for usePopUp logic to explain why we use the conditional check we do."
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Update amazon-button.js\nUpdate comment for usePopUp logic to explain why we use the conditional check we do."
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/amazon-button.js",
                    "new_path": "src/Payment/view/frontend/web/js/amazon-button.js",
                    "diff": "@@ -86,8 +86,15 @@ define([\n_touchSupported: function () {\nreturn Modernizr.touch !== undefined ? Modernizr.touch : Modernizr.touchevents;\n},\n+ /**\n+ * Should we use the pop up login flow?\n+ * - are we on an HTTPS page (required for popup)\n+ * - confirm we are not on the product detail page (items are added asynchronously to the cart, hence popups will be blocked)\n+ * - confirm we are not using a touch device (redirect provides a better mobile experience)\n+ * @returns {Boolean}\n+ * @public\n+ */\nusePopUp: function () {\n- //always use redirect journey on product page and touch devices\nreturn ((window.location.protocol === 'https:' && !$('body').hasClass('catalog-product-view')) && !_this._touchSupported());\n},\n/**\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/amazon-button.js",
                    "new_path": "src/Payment/view/frontend/web/js/amazon-button.js",
                    "diff": "@@ -86,8 +86,15 @@ define([\n_touchSupported: function () {\nreturn Modernizr.touch !== undefined ? Modernizr.touch : Modernizr.touchevents;\n},\n+ /**\n+ * Should we use the pop up login flow?\n+ * - are we on an HTTPS page (required for popup)\n+ * - confirm we are not on the product detail page (items are added asynchronously to the cart, hence popups will be blocked)\n+ * - confirm we are not using a touch device (redirect provides a better mobile experience)\n+ * @returns {Boolean}\n+ * @public\n+ */\nusePopUp: function () {\n- //always use redirect journey on product page and touch devices\nreturn ((window.location.protocol === 'https:' && !$('body').hasClass('catalog-product-view')) && !_this._touchSupported());\n},\n/**\n"
                }
            ]
        }
    },
    "Row_56": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "add SimplePath functionality"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "add SimplePath functionality"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Core/Block/Adminhtml/System/Config/SimplePathAdmin.php",
                    "diff": "+<?php\n+\n+namespace Amazon\\Core\\Block\\Adminhtml\\System\\Config;\n+\n+use Amazon\\Core\\Helper\\CategoryExclusion;\n+use Amazon\\Core\\Helper\\Data;\n+use Amazon\\Core\\Model\\Config\\SimplePath;\n+use Magento\\Customer\\Model\\Url;\n+use Magento\\Framework\\View\\Element\\Template;\n+use Magento\\Framework\\View\\Element\\Template\\Context;\n+\n+class SimplePathAdmin extends Template\n+{\n+ /**\n+ * @var \\Amazon\\Core\\Model\\Config\\simplePath\n+ */\n+ protected $_model;\n+\n+\n+ function __construct(\n+ Context $context,\n+ SimplePath $simplePath,\n+ \\Magento\\Framework\\UrlInterface $urlInterface\n+ )\n+ {\n+ parent::__construct($context);\n+ $this->simplePath = $simplePath;\n+ $this->urlInterface = $urlInterface;\n+ }\n+\n+ /**\n+ * Return SimplePath settings\n+ */\n+ function getAmazonSpJson()\n+ {\n+ return json_encode($this->simplePath->getJsonAmazonSpConfig());\n+ }\n+\n+ /**\n+ * Render only on Payment Methods page\n+ */\n+ protected function _toHtml()\n+ {\n+ return strpos($this->urlInterface->getCurrentUrl(), 'payment') === FALSE ? '' : parent::_toHtml();\n+ }\n+}\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Core/Controller/Adminhtml/Simplepath/Poll.php",
                    "diff": "+<?php\n+\n+namespace Amazon\\Core\\Controller\\Adminhtml\\Simplepath;\n+\n+use Magento\\Backend\\App\\Action\\Context;\n+use Magento\\Backend\\Controller\\Adminhtml\\System;\n+\n+class Poll extends System\n+{\n+\n+\n+ public function __construct(\n+ Context $context,\n+ \\Amazon\\Core\\Model\\Config\\SimplePath $simplePath,\n+ \\Magento\\Framework\\App\\Config\\ScopeConfigInterface $scopeConfig,\n+ \\Magento\\Framework\\Controller\\Result\\JsonFactory $jsonResultFactory\n+ )\n+ {\n+ parent::__construct($context);\n+ $this->simplePath = $simplePath;\n+ $this->scopeConfig = $scopeConfig;\n+ $this->jsonResultFactory = $jsonResultFactory;\n+\n+ }\n+\n+\n+ /**\n+ * Detect whether Amazon credentials are set (polled by Ajax)\n+ */\n+ public function execute()\n+ {\n+ // Keypair is destroyed when credentials are saved\n+ $shouldRefresh = !($this->scopeConfig->getValue(\\Amazon\\Core\\Model\\Config\\SimplePath::CONFIG_XML_PATH_PUBLIC_KEY, 'default', 0));\n+\n+ if ($shouldRefresh) {\n+ $this->simplePath->autoEnable();\n+ }\n+\n+ $result = $this->jsonResultFactory->create();\n+ $result->setData((int)$shouldRefresh);\n+ return $result;\n+ }\n+}\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Core/Controller/Simplepath/Listener.php",
                    "diff": "+<?php\n+\n+namespace Amazon\\Core\\Controller\\Simplepath;\n+\n+class Listener extends \\Magento\\Framework\\App\\Action\\Action\n+{\n+\n+ // @var \\Magento\\Framework\\Controller\\Result\\JsonFactory\n+ protected $jsonResultFactory;\n+\n+ // @var \\Amazon\\Core\\Model\\Config\\SimplePath\n+ protected $simplepath;\n+\n+\n+ public function __construct(\n+ \\Magento\\Framework\\App\\Action\\Context $context,\n+ \\Magento\\Framework\\Controller\\Result\\JsonFactory $jsonResultFactory,\n+ \\Amazon\\Core\\Model\\Config\\SimplePath $simplepath,\n+ \\Magento\\Framework\\App\\Config\\ScopeConfigInterface $scopeConfig\n+\n+ ) {\n+ $this->simplepath = $simplepath;\n+ $this->jsonResultFactory = $jsonResultFactory;\n+ $this->scopeConfig = $scopeConfig;\n+ parent::__construct($context);\n+ }\n+\n+\n+ /**\n+ * Parse POST request from Amazon and import keys\n+ */\n+ public function execute()\n+ {\n+\n+ $url = parse_url(\\Amazon\\Core\\Model\\Config\\SimplePath::API_ENDPOINT_DOWNLOAD_KEYS);\n+\n+ header('Access-Control-Allow-Origin: https://' . $url['host']);\n+ header('Access-Control-Allow-Methods: GET, POST');\n+ header('Access-Control-Allow-Headers: Content-Type');\n+\n+ $payload = $this->_request->getParam('payload');\n+\n+ $result = $this->jsonResultFactory->create();\n+\n+ $return = array('result' => 'error', 'message' => 'Empty response.');\n+\n+ try {\n+ if ($payload && strpos($payload, 'encryptedKey') !== FALSE) {\n+\n+ $json = $this->simplepath->decryptPayload($payload, false);\n+\n+ if ($json) {\n+ $return = array('result' => 'success');\n+ }\n+ } else {\n+ $result->setHttpResponseCode(\\Magento\\Framework\\Webapi\\Exception::HTTP_BAD_REQUEST);\n+ $return = array('result' => 'error', 'message' => 'payload parameter not found.');\n+ }\n+\n+ } catch (Exception $e) {\n+ $result->setHttpResponseCode(\\Magento\\Framework\\Webapi\\Exception::HTTP_BAD_REQUEST);\n+ $return = array('result' => 'error', 'message' => $e->getMessage());\n+ }\n+\n+ $result->setData($return);\n+\n+ return $result;\n+ }\n+\n+\n+ /**\n+ * Overridden to allow POST without form key\n+ *\n+ * @return bool\n+ */\n+ public function _processUrlKeys()\n+ {\n+ $_isValidFormKey = true;\n+ $_isValidSecretKey = true;\n+ $_keyErrorMsg = '';\n+ if ($this->_auth->isLoggedIn()) {\n+ if ($this->_backendUrl->useSecretKey()) {\n+ $_isValidSecretKey = $this->_validateSecretKey();\n+ $_keyErrorMsg = __('You entered an invalid Secret Key. Please refresh the page.');\n+ }\n+ }\n+ if (!$_isValidFormKey || !$_isValidSecretKey) {\n+ $this->_actionFlag->set('', self::FLAG_NO_DISPATCH, true);\n+ $this->_actionFlag->set('', self::FLAG_NO_POST_DISPATCH, true);\n+ if ($this->getRequest()->getQuery('isAjax', false) || $this->getRequest()->getQuery('ajax', false)) {\n+ $this->getResponse()->representJson(\n+ $this->_objectManager->get(\n+ 'Magento\\Framework\\Json\\Helper\\Data'\n+ )->jsonEncode(\n+ ['error' => true, 'message' => $_keyErrorMsg]\n+ )\n+ );\n+ } else {\n+ $this->_redirect($this->_backendUrl->getStartupPageUrl());\n+ }\n+ return false;\n+ }\n+ return true;\n+ }\n+\n+}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/Credentials/Json.php",
                    "new_path": "src/Core/Model/Config/Credentials/Json.php",
                    "diff": "@@ -17,6 +17,7 @@ namespace Amazon\\Core\\Model\\Config\\Credentials;\nuse Amazon\\Core\\Helper\\Data;\nuse Amazon\\Core\\Model\\Validation\\JsonConfigDataValidatorFactory;\n+use Amazon\\Core\\Model\\Config\\SimplePath;\nuse Magento\\Config\\Model\\ResourceModel\\Config as ConfigWriter;\nuse Magento\\Framework\\Encryption\\EncryptorInterface;\nuse Magento\\Framework\\Json\\DecoderInterface;\n@@ -57,6 +58,11 @@ class Json\n*/\nprotected $encryptor;\n+ /**\n+ * @var SimplePath\n+ */\n+ protected $simplePath;\n+\n/**\n* @param Data $amazonCoreHelper\n* @param JsonConfigDataValidatorFactory $jsonConfigDataValidator\n@@ -71,7 +77,8 @@ class Json\nConfigWriter $configWriter,\nMessageManager $messageManager,\nDecoderInterface $jsonDecoder,\n- EncryptorInterface $encryptor\n+ EncryptorInterface $encryptor,\n+ SimplePath $simplePath\n) {\n$this->amazonCoreHelper = $amazonCoreHelper;\n$this->jsonConfigDataValidatorFactory = $jsonConfigDataValidator;\n@@ -79,6 +86,7 @@ class Json\n$this->messageManager = $messageManager;\n$this->jsonDecoder = $jsonDecoder;\n$this->encryptor = $encryptor;\n+ $this->simplePath = $simplePath;\n}\n/**\n@@ -103,6 +111,11 @@ class Json\n$arrayCredentials = $this->jsonDecoder->decode($jsonCredentials);\n$this->wipeJsonCredentialsConfig($scopeData);\n+ // Decrypt SimplePath JSON\n+ if (isset($arrayCredentials['encryptedKey'])) {\n+ $arrayCredentials = $this->jsonDecoder->decode($this->simplePath->decryptPayload(json_encode($arrayCredentials), false, false));\n+ }\n+\nforeach ($this->amazonCoreHelper->getAmazonCredentialsFields() as $mandatoryField) {\n$valueToSave = $arrayCredentials[$mandatoryField];\n$encryptedFields = array_flip($this->amazonCoreHelper->getAmazonCredentialsEncryptedFields());\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "+<?php\n+\n+namespace Amazon\\Core\\Model\\Config;\n+\n+use Amazon\\Core\\Helper\\Data;\n+use Magento\\Framework\\App\\State;\n+use Magento\\Framework\\App\\Cache\\Type\\Config as CacheTypeConfig;\n+use Magento\\Store\\Model\\ScopeInterface;\n+use Magento\\Backend\\Model\\UrlInterface;\n+\n+class SimplePath\n+{\n+ const API_ENDPOINT_DOWNLOAD_KEYS = 'https://payments.amazon.com/register';\n+ const API_ENDPOINT_GET_PUBLICKEY = 'https://payments.amazon.com/register/getpublickey';\n+\n+ const PARAM_SP_ID = 'A2K7HE1S3M5XJ';\n+\n+ const CONFIG_XML_PATH_PRIVATE_KEY = 'payment/amazon_payments/simplepath/privatekey';\n+ const CONFIG_XML_PATH_PUBLIC_KEY = 'payment/amazon_payments/simplepath/publickey';\n+\n+ /**\n+ * @var \\Magento\\Backend\\Model\\UrlInterface\n+ */\n+ protected $backendUrl;\n+\n+ /**\n+ * SimplePath constructor.\n+ *\n+ * @param ScopeConfigInterface $config\n+ * @param Data $coreHelper\n+ * @param State $state\n+ */\n+ //public function __construct(ScopeConfigInterface $config, Data $coreHelper, State $state, UrlInterface $backendUrl)\n+\n+ public function __construct(\n+ \\Magento\\Framework\\App\\Config\\ConfigResource\\ConfigInterface $config,\n+ \\Magento\\Framework\\App\\Config\\ScopeConfigInterface $scopeConfig,\n+ \\Magento\\Framework\\Encryption\\EncryptorInterface $encryptor,\n+ \\Magento\\Store\\Model\\StoreManagerInterface $storeManager,\n+ \\Magento\\Backend\\Model\\UrlInterface $backendUrl,\n+ \\phpseclib\\Crypt\\RSA $rsa,\n+ \\phpseclib\\Crypt\\AES $aes,\n+ \\Magento\\Framework\\App\\Cache\\Manager $cacheManager,\n+ \\Magento\\Framework\\App\\Request\\Http $request,\n+ \\Magento\\Framework\\App\\ResourceConnection $connection,\n+ \\Magento\\Framework\\Module\\ModuleListInterface $moduleList,\n+ \\Magento\\Framework\\App\\ProductMetadataInterface $productMeta,\n+ \\Magento\\Framework\\Message\\ManagerInterface $messageManager,\n+ \\Psr\\Log\\LoggerInterface $logger\n+ )\n+ {\n+\n+ $this->config = $config;\n+ $this->scopeConfig = $scopeConfig;\n+ $this->encryptor = $encryptor;\n+ $this->storeManager = $storeManager;\n+ $this->backendUrl = $backendUrl;\n+ $this->rsa = $rsa;\n+ $this->aes = $aes;\n+ $this->cacheManager = $cacheManager;\n+ $this->request = $request;\n+ $this->connection = $connection;\n+ $this->moduleList = $moduleList;\n+ $this->productMeta = $productMeta;\n+ $this->logger = $logger;\n+\n+ $this->messageManager = $messageManager;\n+ }\n+\n+ /**\n+ * Generate and save RSA keys\n+ */\n+ public function generateKeys()\n+ {\n+ //$keys = $rsa->generateKeys(array('private_key_bits' => 2048, 'privateKeyBits' => 2048, 'hashAlgorithm' => 'sha1'));\n+\n+ $keys = $this->rsa->createKey(2048);\n+\n+ $this->config\n+ ->saveConfig(self::CONFIG_XML_PATH_PUBLIC_KEY, $keys['publickey'], 'default', 0)\n+ ->saveConfig(self::CONFIG_XML_PATH_PRIVATE_KEY, $this->encryptor->encrypt($keys['privatekey']), 'default', 0);\n+\n+ $this->cacheManager->clean([CacheTypeConfig::TYPE_IDENTIFIER]);\n+\n+ return $keys;\n+ }\n+\n+ /**\n+ * Delete key-pair from config\n+ */\n+ public function destroyKeys()\n+ {\n+ $this->config\n+ ->deleteConfig(self::CONFIG_XML_PATH_PUBLIC_KEY, 'default', 0)\n+ ->deleteConfig(self::CONFIG_XML_PATH_PRIVATE_KEY, 'default', 0);\n+\n+ $this->cacheManager->clean([CacheTypeConfig::TYPE_IDENTIFIER]);\n+ }\n+\n+ /**\n+ * Return RSA public key\n+ *\n+ * @param bool $pemformat Return key in PEM format\n+ */\n+ public function getPublicKey($pemformat = false, $reset = false)\n+ {\n+ $publickey = $this->scopeConfig->getValue(self::CONFIG_XML_PATH_PUBLIC_KEY, 'default', 0);\n+\n+ // Generate key pair\n+ if (!$publickey || $reset || strlen($publickey) < 300) {\n+ $keys = $this->generateKeys();\n+ $publickey = $keys['publickey'];\n+ }\n+\n+ if (!$pemformat) {\n+ $publickey = str_replace(array('-----BEGIN PUBLIC KEY-----', '-----END PUBLIC KEY-----', \"\\n\"), array('','',''), $publickey);\n+ // Remove binary characters\n+ $publickey = preg_replace('/[\\x00-\\x1F\\x80-\\xFF]/', '', $publickey);\n+ }\n+ return $publickey;\n+ }\n+\n+ /**\n+ * Return RSA private key\n+ */\n+ public function getPrivateKey()\n+ {\n+ return $this->encryptor->decrypt($this->scopeConfig->getValue(self::CONFIG_XML_PATH_PRIVATE_KEY, 'default', 0));\n+ }\n+\n+ /**\n+ * Convert key to PEM format for openssl functions\n+ */\n+ public function key2pem($key)\n+ {\n+ return \"-----BEGIN PUBLIC KEY-----\\n\" .\n+ chunk_split($key, 64, \"\\n\") .\n+ \"-----END PUBLIC KEY-----\\n\";\n+ }\n+\n+ /**\n+ * Verify and decrypt JSON payload\n+ *\n+ * @param string $payloadJson\n+ */\n+ public function decryptPayload($payloadJson, $autoEnable = true, $autoSave = true)\n+ {\n+ try {\n+ $payload = (object) json_decode($payloadJson);\n+ $payloadVerify = clone $payload;\n+\n+ // Unencrypted?\n+ if (!isset($payload->encryptedKey) && isset($payload->merchant_id, $payload->access_key, $payload->secret_key)) {\n+ return $this->saveToConfig($payloadJson, $autoEnable);\n+ }\n+\n+ // Validate JSON\n+ if (!isset($payload->encryptedKey, $payload->encryptedPayload, $payload->iv, $payload->sigKeyID, $payload->signature)) {\n+ throw new \\Magento\\Framework\\Validator\\Exception(__(\"Unable to import Amazon keys. Please verify your JSON format and values.\"));\n+ }\n+\n+ // URL decode values\n+ foreach ($payload as $key => $value) {\n+ $payload->$key = urldecode($value);\n+ }\n+\n+ // Retrieve Amazon public key to verify signature\n+ try {\n+ $client = new \\Zend_Http_Client(self::API_ENDPOINT_GET_PUBLICKEY, array(\n+ 'maxredirects' => 2,\n+ 'timeout' => 30));\n+\n+ $client->setParameterGet(array('sigkey_id' => $payload->sigKeyID));\n+\n+ $response = $client->request();\n+ $amazonPublickey = urldecode($response->getBody());\n+\n+ } catch (Exception $e) {\n+ throw new \\Magento\\Framework\\Validator\\Exception(__($e->getMessage()));\n+ }\n+\n+ // Use raw JSON (without signature or URL decode) as the data to verify signature\n+ unset($payloadVerify->signature);\n+ $payloadVerifyJson = json_encode($payloadVerify);\n+\n+ // Verify signature using Amazon publickey and JSON paylaod\n+ if ($amazonPublickey && openssl_verify($payloadVerifyJson, base64_decode($payload->signature), $this->key2pem($amazonPublickey), 'SHA256')) {\n+\n+ // Decrypt Amazon key using own private key\n+ $decryptedKey = null;\n+ openssl_private_decrypt(base64_decode($payload->encryptedKey), $decryptedKey, $this->getPrivateKey(), OPENSSL_PKCS1_OAEP_PADDING);\n+\n+ // Decrypt final payload (AES 128-bit CBC)\n+ if (function_exists('mcrypt_decrypt')) {\n+ $finalPayload = @mcrypt_decrypt(MCRYPT_RIJNDAEL_128, $decryptedKey, base64_decode($payload->encryptedPayload), MCRYPT_MODE_CBC, base64_decode($payload->iv));\n+ } else {\n+ // This uses openssl_decrypt, which may have issues\n+ $this->aes->setKey($decryptedKey);\n+ $this->aes->setIV(base64_decode($payload->iv, true));\n+ $this->aes->setKeyLength(128);\n+ $finalPayload = $this->aes->decrypt($payload->encryptedPayload);\n+ }\n+\n+ // Remove binary characters\n+ $finalPayload = preg_replace('/[\\x00-\\x1F\\x80-\\xFF]/', '', $finalPayload);\n+\n+ if (json_decode($finalPayload)) {\n+ if ($autoSave) {\n+ $this->saveToConfig($finalPayload, $autoEnable);\n+ $this->destroyKeys();\n+ }\n+\n+ return $finalPayload;\n+ }\n+\n+ } else {\n+ throw new \\Magento\\Framework\\Validator\\Exception(\"Unable to verify signature for JSON payload.\");\n+ }\n+\n+ } catch (Exception $e) {\n+ $this->logger->critical($e);\n+ $this->messageManager->addError(__($e->getMessage()));\n+\n+ $link = 'https://payments.amazon.com/help/202024240';\n+ $this->messageManager->addError(__(\"If you're experiencing consistent errors with transferring keys, click <a href=\\\"%s\\\" target=\\\"_blank\\\">Manual Transfer Instructions</a> to learn more.\", $link));\n+ }\n+\n+ return false;\n+ }\n+\n+ /**\n+ * Save values to Mage config\n+ *\n+ * @param string $json\n+ */\n+ public function saveToConfig($json, $autoEnable = true)\n+ {\n+ if ($values = (object) json_decode($json)) {\n+ foreach ($values as $key => $value) {\n+ $values->{strtolower($key)} = $value;\n+ }\n+\n+ $this->config->saveConfig('payment/amazon_payment/merchant_id', $values->merchant_id, 'default', 0);\n+ $this->config->saveConfig('payment/amazon_payment/client_id', $values->client_id, 'default', 0);\n+ $this->config->saveConfig('payment/amazon_payment/client_secret', $this->encryptor->encrypt($values->client_secret), 'default', 0);\n+ $this->config->saveConfig('payment/amazon_payment/access_key', $values->access_key, 'default', 0);\n+ $this->config->saveConfig('payment/amazon_payment/secret_key', $this->encryptor->encrypt($values->secret_key), 'default', 0);\n+\n+ if ($autoEnable) {\n+ $this->autoEnable();\n+ }\n+\n+ $this->cacheManager->clean([CacheTypeConfig::TYPE_IDENTIFIER]);\n+\n+ return true;\n+ }\n+ }\n+\n+ /**\n+ * Auto-enable payment method\n+ */\n+ public function autoEnable()\n+ {\n+ if (!$this->scopeConfig->getValue('payment/amazon_payment/pwa_enabled')) {\n+ $this->config->saveConfig('payment/amazon_payment/pwa_enabled', true, 'default', 0);\n+ $this->messageManager->addSuccess(__(\"Login and Pay with Amazon is now enabled.\"));\n+ }\n+ }\n+\n+ /**\n+ * Return listener URL\n+ */\n+ public function getReturnUrl()\n+ {\n+ /*\n+ //$url = $this->_backendUrl->getUrl('amazon_payments/simplepath', array('_store' => Mage::helper('amazon_payments')->getAdminStoreId(), '_forced_secure' => true));\n+ $url = $this->_backendUrl->getUrl('amazon_payments/simplepath');\n+ // $this->_storeManager->getStore()->getBaseUrl()\n+ // Add index.php\n+ $baseUrl = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB, true);\n+ return str_replace($baseUrl, $baseUrl . 'index.php/', $url);\n+ */\n+\n+ $baseUrl = $this->storeManager->getStore()->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\n+ $baseUrl = str_replace('http:', 'https:', $baseUrl);\n+ return $baseUrl . 'amazon_core/simplepath/listener';\n+\n+ //return $this->storeManager->getStore()->getUrl('amazon_core/simplepath/listener', array('_secure' => true, '_forced_secure' => true));\n+ }\n+\n+ /**\n+ * Return simplepath URL\n+ */\n+ public function getSimplepathUrl()\n+ {\n+ return self::API_ENDPOINT_DOWNLOAD_KEYS . '?returnUrl=' . urlencode($this->getReturnUrl()) .\n+ '&pub_key=' . urlencode($this->getPublicKey()) .\n+ '#event/fromSP';\n+ }\n+\n+ /**\n+ * Return array of form POST params for SimplePath sign up\n+ */\n+ public function getFormParams()\n+ {\n+ // Retrieve store URLs from config table\n+ $urls = array();\n+ $db = $this->connection->getConnection();\n+ $select = $db->select()\n+ ->from(\n+ ['c' => 'core_config_data']\n+ )\n+ ->where('c.path IN (?)', array('web/unsecure/base_url', 'web/secure/base_url'));\n+\n+ foreach ($db->fetchAll($select) as $row) {\n+ $url = parse_url($row['value']);\n+\n+ if (isset($url['host'])){\n+ $urls[] = 'https://' . $url['host'];\n+ }\n+ }\n+\n+ $urls = array_unique($urls);\n+\n+\n+ $version = $this->moduleList->getOne('Amazon_Core');\n+ $coreVersion = ($version && isset($version['setup_version'])) ? $version['setup_version'] : '--';\n+\n+ return array(\n+ 'locale' => $this->scopeConfig->getValue('general/country/default'),\n+ 'spId' => self::PARAM_SP_ID,\n+ 'allowedLoginDomains[]' => $urls,\n+ 'spSoftwareVersion' => $coreVersion,\n+ 'spAmazonPluginVersion' => $this->productMeta->getVersion(),\n+ );\n+ }\n+\n+ /**\n+ * Return array of config for JSON AmazonSp variable.\n+ */\n+ public function getJsonAmazonSpConfig()\n+ {\n+ return array(\n+ 'amazonUrl' => $this->getSimplepathUrl(),\n+ 'pollUrl' => $this->backendUrl->getUrl('amazonsp/simplepath/poll'),\n+ 'spUrl' => $this->backendUrl->getUrl('amazonsp/simplepath/spurl'),\n+ 'importUrl' => $this->backendUrl->getUrl('amazonsp/simplepath/import'),\n+ 'isSecure' => (int) ($this->request->isSecure()),\n+ 'region' => (int) $this->scopeConfig->getValue('general/country/default'),\n+ //'isUsa' => (int) (Mage::helper('amazon_payments')->getAdminConfig() == 'US' && Mage::helper('amazon_payments')->getAdminRegion() != 'eu'),\n+ 'hasOpenssl' => (int) (extension_loaded('openssl')),\n+ 'formParams' => $this->getFormParams(),\n+ );\n+ }\n+}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Validation/JsonConfigDataValidator.php",
                    "new_path": "src/Core/Model/Validation/JsonConfigDataValidator.php",
                    "diff": "@@ -66,6 +66,11 @@ class JsonConfigDataValidator extends AbstractValidator\nprotected function mandatoryFieldsExist($decodedCredentials)\n{\n+ // SimplePath\n+ if (isset($decodedCredentials['encryptedKey'])) {\n+ return true;\n+ }\n+\nforeach ($this->amazonCoreHelper->getAmazonCredentialsFields() as $mandatoryField) {\nif (!isset($decodedCredentials[$mandatoryField])) {\nreturn false;\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/adminhtml/routes.xml",
                    "new_path": "src/Core/etc/adminhtml/routes.xml",
                    "diff": "<route id=\"amazonlogs\" frontName=\"amazonlogs\">\n<module name=\"Amazon_Core\" />\n</route>\n+ <route id=\"amazonsp\" frontName=\"amazonsp\">\n+ <module name=\"Amazon_Core\" />\n+ </route>\n</router>\n</config>\n\\ No newline at end of file\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/adminhtml/system.xml",
                    "new_path": "src/Core/etc/adminhtml/system.xml",
                    "diff": "<section id=\"payment\">\n<group id=\"amazon_payment\" translate=\"label\" type=\"text\" sortOrder=\"8\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Amazon Pay</label>\n+ <comment><![CDATA[\n+\n+ <div id=\"amazon_simplepath\">\n+ <span style=\"display:inline-block;padding-bottom:1em;\">\n+ <button><span>Get started with account registration</span></button>\n+ &nbsp; &nbsp;\n+ <button><span>My account is ready, I need to connect it to Magento</span></button>\n+ </span>\n+ <span style=\"display:inline-block;\">\n+ &nbsp; or &nbsp;\n+ <a href=\"#\" id=\"simplepath-skip\">I've already setup Pay with Amazon, I want to edit my settings</a>\n+ </span>\n+\n+ <p style=\"color:red;display:none\" id=\"amazon_https_required\">In order to enable automatic account configuration using Amazon's secure key exchange, please turn on secure admin pages in System > Configuration > Web > Use secure URLs in Admin.</p>\n+ <p style=\"color:red;display:none\" id=\"amazon_openssl_required\">In order to set keys, the OpenSSL PHP library is required.</p>\n+ <p style=\"color:red;display:none\" id=\"amazon_reload\">Updating your config with new keys, please wait...</p>\n+\n+ </div>\n+\n+ <div id=\"amazon_simplepath_back\" style=\"display:none;margin-bottom:1em;margin-top:-0.5em;\">\n+ <a href=\"#\">&laquo; Back</a>\n+ </div>\n+\n+ ]]></comment>\n<field id=\"version\" type=\"text\" translate=\"label comment\" sortOrder=\"10\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<frontend_model>Amazon\\Core\\Block\\Adminhtml\\System\\Config\\Form\\Version</frontend_model>\n</field>\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Core/etc/frontend/routes.xml",
                    "diff": "+<?xml version=\"1.0\"?>\n+<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:App/etc/routes.xsd\">\n+ <router id=\"standard\">\n+ <route id=\"amazon_core\" frontName=\"amazon_core\">\n+ <module name=\"Amazon_Core\" />\n+ </route>\n+ </router>\n+</config>\n\\ No newline at end of file\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Core/view/adminhtml/layout/adminhtml_system_config_edit.xml",
                    "diff": "+<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" layout=\"admin-2columns-left\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n+ <body>\n+ <referenceContainer name=\"js\">\n+ <block class=\"Amazon\\Core\\Block\\Adminhtml\\System\\Config\\SimplePathAdmin\" template=\"Amazon_Core::system/config/simplepath_admin.phtml\" cacheable=\"false\" />\n+ </referenceContainer>\n+ </body>\n+</page>\n\\ No newline at end of file\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "+<script>\n+\n+var AmazonSp = <?php echo $this->getAmazonSpJson(); ?>;\n+\n+require([\"prototype\"], function(){\n+\n+ var amazonPollInterval = 1500; // poll every ms for keys\n+ var amazonPollTimer = null;\n+\n+\n+ var amazonSimplepath = $(\"amazon_simplepath\");\n+ var amazonFields = $$(\"#payment_us_amazon_payment .form-list\");\n+ var amazonSpBack = $(\"amazon_simplepath_back\");\n+\n+\n+ if ($(\"payment_us_amazon_payment_general_credentials_merchant_id\") != null) {\n+ if (!$(\"payment_us_amazon_payment_general_credentials_merchant_id\").value) {\n+ amazonFields.each(Element.hide);\n+ } else {\n+ amazonSpBack.show();\n+ amazonSimplepath.hide();\n+\n+ if (window.location.hash == \"#payment_amazon_payments-head\") {\n+ showAmazonConfig();\n+ }\n+ }\n+ }\n+\n+ // Generate form to post to Amazon\n+ var form = new Element('form', { method: 'post', action: AmazonSp.amazonUrl, id: 'simplepath_form', target: 'simplepath'});\n+ //$$('body')[0].insert(form);\n+ amazonSimplepath.wrap(form);\n+\n+ // Convert formParams JSON to hidden inputs\n+ var formInput;\n+ for (var key in AmazonSp.formParams) {\n+ if (typeof AmazonSp.formParams[key] == 'object' || typeof AmazonSp.formParams[key] == 'array') {\n+ for (var i in AmazonSp.formParams[key]) {\n+ if (typeof AmazonSp.formParams[key][i] != \"function\") {\n+ form.insert(new Element('input', { type: 'hidden', name: key, value: AmazonSp.formParams[key][i]}));\n+ }\n+ }\n+ } else {\n+ form.insert(new Element('input', { type: 'hidden', name: key, value: AmazonSp.formParams[key]}));\n+ }\n+ }\n+\n+ // Get Started clicked\n+ $(\"simplepath_form\").observe(\"submit\", function(e) {\n+ var heights = [660, 720, 810, 900];\n+ var popupHeight = heights[0];\n+ for (var i in heights) {\n+ popupHeight = (window.innerHeight >= heights[i]) ? heights[i] : popupHeight;\n+ }\n+\n+ window.launchPopup('', 768, popupHeight);\n+\n+ //amazonFields[1].show();\n+ amazonFields.each(Element.show);\n+\n+ if (!amazonPollTimer) {\n+ amazonPollTimer = setTimeout(pollForKeys, amazonPollInterval);\n+ }\n+ });\n+\n+ // User is skipping simplepath\n+ amazonSimplepath.select(\"a\")[0].observe(\"click\", function(e) {\n+ e.stop();\n+ amazonSpBack.show();\n+ showAmazonConfig();\n+ });\n+\n+ // User clicked 'Back'\n+ $(\"amazon_simplepath_back\").select(\"a\")[0].observe(\"click\", function(e) {\n+ e.stop();\n+ amazonSpBack.hide();\n+ amazonSimplepath.show();\n+ });\n+\n+\n+ function showAmazonConfig() {\n+ amazonFields.each(Element.show);\n+ amazonSimplepath.hide();\n+ amazonSpBack.show();\n+\n+ if (!$('payment_us_amazon_payment_general-head').hasClassName('open')) {\n+ $('payment_us_amazon_payment_general-head').click();\n+ $('payment_us_amazon_payment_general_credentials-head').click();\n+ $('payment_us_amazon_payment_general_options-head').click();\n+ }\n+ }\n+\n+\n+ function pollForKeys() {\n+ new Ajax.Request(AmazonSp.pollUrl, {\n+ method:'get',\n+ onSuccess: function(transport) {\n+ if (transport.responseText == '1') {\n+ $(\"amazon_reload\").show();\n+ document.location.replace(document.location + \"#payment_amazon_payments-head\");\n+ location.reload();\n+ } else {\n+ amazonPollTimer = setTimeout(pollForKeys, amazonPollInterval);\n+ }\n+\n+ },\n+ onFailure: function() { },\n+ // Disable \"Please Wait\" modal\n+ onCreate: function(request) {\n+ Ajax.Responders.unregister(varienLoaderHandler.handler);\n+ },\n+ });\n+ }\n+\n+\n+});\n+\n+// Add Mage validator to fix \"Save Config\" button from not submitting\n+require([\"jquery\", \"jquery/validate\"], function($) {\n+ $(\"#simplepath_form\").validate();\n+});\n+\n+\n+</script>\n+\n+\n+<script>\n+// Amazon Pop-up\n+(function () {\n+ 'use strict';\n+\n+ function launchPopup(url, requestedWidth, requestedHeight) {\n+ var leftOffset = getLeftOffset(requestedWidth),\n+ topOffset = getTopOffset(requestedHeight),\n+ newWindow = window.open(url, 'simplepath', 'scrollbars=yes, width=' + requestedWidth + ', height=' + requestedHeight + ', top=' + topOffset + ', left=' + leftOffset);\n+\n+ if (window.focus) {\n+ newWindow.focus();\n+ }\n+ }\n+\n+ function getLeftOffset(requestedWidth) {\n+ var dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : screen.left;\n+\n+ return ((windowWidth() / 2) - (requestedWidth / 2)) + dualScreenLeft;\n+ }\n+\n+ function getTopOffset(requestedHeight) {\n+ var dualScreenTop = window.screenTop !== undefined ? window.screenTop : screen.top;\n+\n+ return ((windowHeight() / 2) - (requestedHeight / 2)) + dualScreenTop;\n+ }\n+\n+ function windowWidth() {\n+ if (window.innerWidth) {\n+ return window.innerWidth;\n+ } else if (document.documentElement.clientWidth) {\n+ return document.documentElement.clientWidth;\n+ } else {\n+ return screen.width;\n+ }\n+ }\n+\n+ function windowHeight() {\n+ if (window.innerHeight) {\n+ return window.innerHeight;\n+ } else if (document.documentElement.clientHeight) {\n+ return document.documentElement.clientHeight;\n+ } else {\n+ return screen.height;\n+ }\n+ }\n+\n+ window.launchPopup = launchPopup;\n+})();\n+</script>\n\\ No newline at end of file\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Core/Block/Adminhtml/System/Config/SimplePathAdmin.php",
                    "diff": "+<?php\n+\n+namespace Amazon\\Core\\Block\\Adminhtml\\System\\Config;\n+\n+use Amazon\\Core\\Helper\\CategoryExclusion;\n+use Amazon\\Core\\Helper\\Data;\n+use Amazon\\Core\\Model\\Config\\SimplePath;\n+use Magento\\Customer\\Model\\Url;\n+use Magento\\Framework\\View\\Element\\Template;\n+use Magento\\Framework\\View\\Element\\Template\\Context;\n+\n+class SimplePathAdmin extends Template\n+{\n+ /**\n+ * @var \\Amazon\\Core\\Model\\Config\\simplePath\n+ */\n+ protected $_model;\n+\n+\n+ function __construct(\n+ Context $context,\n+ SimplePath $simplePath,\n+ \\Magento\\Framework\\UrlInterface $urlInterface\n+ )\n+ {\n+ parent::__construct($context);\n+ $this->simplePath = $simplePath;\n+ $this->urlInterface = $urlInterface;\n+ }\n+\n+ /**\n+ * Return SimplePath settings\n+ */\n+ function getAmazonSpJson()\n+ {\n+ return json_encode($this->simplePath->getJsonAmazonSpConfig());\n+ }\n+\n+ /**\n+ * Render only on Payment Methods page\n+ */\n+ protected function _toHtml()\n+ {\n+ return strpos($this->urlInterface->getCurrentUrl(), 'payment') === FALSE ? '' : parent::_toHtml();\n+ }\n+}\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Core/Controller/Adminhtml/Simplepath/Poll.php",
                    "diff": "+<?php\n+\n+namespace Amazon\\Core\\Controller\\Adminhtml\\Simplepath;\n+\n+use Magento\\Backend\\App\\Action\\Context;\n+use Magento\\Backend\\Controller\\Adminhtml\\System;\n+\n+class Poll extends System\n+{\n+\n+\n+ public function __construct(\n+ Context $context,\n+ \\Amazon\\Core\\Model\\Config\\SimplePath $simplePath,\n+ \\Magento\\Framework\\App\\Config\\ScopeConfigInterface $scopeConfig,\n+ \\Magento\\Framework\\Controller\\Result\\JsonFactory $jsonResultFactory\n+ )\n+ {\n+ parent::__construct($context);\n+ $this->simplePath = $simplePath;\n+ $this->scopeConfig = $scopeConfig;\n+ $this->jsonResultFactory = $jsonResultFactory;\n+\n+ }\n+\n+\n+ /**\n+ * Detect whether Amazon credentials are set (polled by Ajax)\n+ */\n+ public function execute()\n+ {\n+ // Keypair is destroyed when credentials are saved\n+ $shouldRefresh = !($this->scopeConfig->getValue(\\Amazon\\Core\\Model\\Config\\SimplePath::CONFIG_XML_PATH_PUBLIC_KEY, 'default', 0));\n+\n+ if ($shouldRefresh) {\n+ $this->simplePath->autoEnable();\n+ }\n+\n+ $result = $this->jsonResultFactory->create();\n+ $result->setData((int)$shouldRefresh);\n+ return $result;\n+ }\n+}\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Core/Controller/Simplepath/Listener.php",
                    "diff": "+<?php\n+\n+namespace Amazon\\Core\\Controller\\Simplepath;\n+\n+class Listener extends \\Magento\\Framework\\App\\Action\\Action\n+{\n+\n+ // @var \\Magento\\Framework\\Controller\\Result\\JsonFactory\n+ protected $jsonResultFactory;\n+\n+ // @var \\Amazon\\Core\\Model\\Config\\SimplePath\n+ protected $simplepath;\n+\n+\n+ public function __construct(\n+ \\Magento\\Framework\\App\\Action\\Context $context,\n+ \\Magento\\Framework\\Controller\\Result\\JsonFactory $jsonResultFactory,\n+ \\Amazon\\Core\\Model\\Config\\SimplePath $simplepath,\n+ \\Magento\\Framework\\App\\Config\\ScopeConfigInterface $scopeConfig\n+\n+ ) {\n+ $this->simplepath = $simplepath;\n+ $this->jsonResultFactory = $jsonResultFactory;\n+ $this->scopeConfig = $scopeConfig;\n+ parent::__construct($context);\n+ }\n+\n+\n+ /**\n+ * Parse POST request from Amazon and import keys\n+ */\n+ public function execute()\n+ {\n+\n+ $url = parse_url(\\Amazon\\Core\\Model\\Config\\SimplePath::API_ENDPOINT_DOWNLOAD_KEYS);\n+\n+ header('Access-Control-Allow-Origin: https://' . $url['host']);\n+ header('Access-Control-Allow-Methods: GET, POST');\n+ header('Access-Control-Allow-Headers: Content-Type');\n+\n+ $payload = $this->_request->getParam('payload');\n+\n+ $result = $this->jsonResultFactory->create();\n+\n+ $return = array('result' => 'error', 'message' => 'Empty response.');\n+\n+ try {\n+ if ($payload && strpos($payload, 'encryptedKey') !== FALSE) {\n+\n+ $json = $this->simplepath->decryptPayload($payload, false);\n+\n+ if ($json) {\n+ $return = array('result' => 'success');\n+ }\n+ } else {\n+ $result->setHttpResponseCode(\\Magento\\Framework\\Webapi\\Exception::HTTP_BAD_REQUEST);\n+ $return = array('result' => 'error', 'message' => 'payload parameter not found.');\n+ }\n+\n+ } catch (Exception $e) {\n+ $result->setHttpResponseCode(\\Magento\\Framework\\Webapi\\Exception::HTTP_BAD_REQUEST);\n+ $return = array('result' => 'error', 'message' => $e->getMessage());\n+ }\n+\n+ $result->setData($return);\n+\n+ return $result;\n+ }\n+\n+\n+ /**\n+ * Overridden to allow POST without form key\n+ *\n+ * @return bool\n+ */\n+ public function _processUrlKeys()\n+ {\n+ $_isValidFormKey = true;\n+ $_isValidSecretKey = true;\n+ $_keyErrorMsg = '';\n+ if ($this->_auth->isLoggedIn()) {\n+ if ($this->_backendUrl->useSecretKey()) {\n+ $_isValidSecretKey = $this->_validateSecretKey();\n+ $_keyErrorMsg = __('You entered an invalid Secret Key. Please refresh the page.');\n+ }\n+ }\n+ if (!$_isValidFormKey || !$_isValidSecretKey) {\n+ $this->_actionFlag->set('', self::FLAG_NO_DISPATCH, true);\n+ $this->_actionFlag->set('', self::FLAG_NO_POST_DISPATCH, true);\n+ if ($this->getRequest()->getQuery('isAjax', false) || $this->getRequest()->getQuery('ajax', false)) {\n+ $this->getResponse()->representJson(\n+ $this->_objectManager->get(\n+ 'Magento\\Framework\\Json\\Helper\\Data'\n+ )->jsonEncode(\n+ ['error' => true, 'message' => $_keyErrorMsg]\n+ )\n+ );\n+ } else {\n+ $this->_redirect($this->_backendUrl->getStartupPageUrl());\n+ }\n+ return false;\n+ }\n+ return true;\n+ }\n+\n+}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/Credentials/Json.php",
                    "new_path": "src/Core/Model/Config/Credentials/Json.php",
                    "diff": "@@ -17,6 +17,7 @@ namespace Amazon\\Core\\Model\\Config\\Credentials;\nuse Amazon\\Core\\Helper\\Data;\nuse Amazon\\Core\\Model\\Validation\\JsonConfigDataValidatorFactory;\n+use Amazon\\Core\\Model\\Config\\SimplePath;\nuse Magento\\Config\\Model\\ResourceModel\\Config as ConfigWriter;\nuse Magento\\Framework\\Encryption\\EncryptorInterface;\nuse Magento\\Framework\\Json\\DecoderInterface;\n@@ -57,6 +58,11 @@ class Json\n*/\nprotected $encryptor;\n+ /**\n+ * @var SimplePath\n+ */\n+ protected $simplePath;\n+\n/**\n* @param Data $amazonCoreHelper\n* @param JsonConfigDataValidatorFactory $jsonConfigDataValidator\n@@ -71,7 +77,8 @@ class Json\nConfigWriter $configWriter,\nMessageManager $messageManager,\nDecoderInterface $jsonDecoder,\n- EncryptorInterface $encryptor\n+ EncryptorInterface $encryptor,\n+ SimplePath $simplePath\n) {\n$this->amazonCoreHelper = $amazonCoreHelper;\n$this->jsonConfigDataValidatorFactory = $jsonConfigDataValidator;\n@@ -79,6 +86,7 @@ class Json\n$this->messageManager = $messageManager;\n$this->jsonDecoder = $jsonDecoder;\n$this->encryptor = $encryptor;\n+ $this->simplePath = $simplePath;\n}\n/**\n@@ -103,6 +111,11 @@ class Json\n$arrayCredentials = $this->jsonDecoder->decode($jsonCredentials);\n$this->wipeJsonCredentialsConfig($scopeData);\n+ // Decrypt SimplePath JSON\n+ if (isset($arrayCredentials['encryptedKey'])) {\n+ $arrayCredentials = $this->jsonDecoder->decode($this->simplePath->decryptPayload(json_encode($arrayCredentials), false, false));\n+ }\n+\nforeach ($this->amazonCoreHelper->getAmazonCredentialsFields() as $mandatoryField) {\n$valueToSave = $arrayCredentials[$mandatoryField];\n$encryptedFields = array_flip($this->amazonCoreHelper->getAmazonCredentialsEncryptedFields());\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "+<?php\n+\n+namespace Amazon\\Core\\Model\\Config;\n+\n+use Amazon\\Core\\Helper\\Data;\n+use Magento\\Framework\\App\\State;\n+use Magento\\Framework\\App\\Cache\\Type\\Config as CacheTypeConfig;\n+use Magento\\Store\\Model\\ScopeInterface;\n+use Magento\\Backend\\Model\\UrlInterface;\n+\n+class SimplePath\n+{\n+ const API_ENDPOINT_DOWNLOAD_KEYS = 'https://payments.amazon.com/register';\n+ const API_ENDPOINT_GET_PUBLICKEY = 'https://payments.amazon.com/register/getpublickey';\n+\n+ const PARAM_SP_ID = 'A2K7HE1S3M5XJ';\n+\n+ const CONFIG_XML_PATH_PRIVATE_KEY = 'payment/amazon_payments/simplepath/privatekey';\n+ const CONFIG_XML_PATH_PUBLIC_KEY = 'payment/amazon_payments/simplepath/publickey';\n+\n+ /**\n+ * @var \\Magento\\Backend\\Model\\UrlInterface\n+ */\n+ protected $backendUrl;\n+\n+ /**\n+ * SimplePath constructor.\n+ *\n+ * @param ScopeConfigInterface $config\n+ * @param Data $coreHelper\n+ * @param State $state\n+ */\n+ //public function __construct(ScopeConfigInterface $config, Data $coreHelper, State $state, UrlInterface $backendUrl)\n+\n+ public function __construct(\n+ \\Magento\\Framework\\App\\Config\\ConfigResource\\ConfigInterface $config,\n+ \\Magento\\Framework\\App\\Config\\ScopeConfigInterface $scopeConfig,\n+ \\Magento\\Framework\\Encryption\\EncryptorInterface $encryptor,\n+ \\Magento\\Store\\Model\\StoreManagerInterface $storeManager,\n+ \\Magento\\Backend\\Model\\UrlInterface $backendUrl,\n+ \\phpseclib\\Crypt\\RSA $rsa,\n+ \\phpseclib\\Crypt\\AES $aes,\n+ \\Magento\\Framework\\App\\Cache\\Manager $cacheManager,\n+ \\Magento\\Framework\\App\\Request\\Http $request,\n+ \\Magento\\Framework\\App\\ResourceConnection $connection,\n+ \\Magento\\Framework\\Module\\ModuleListInterface $moduleList,\n+ \\Magento\\Framework\\App\\ProductMetadataInterface $productMeta,\n+ \\Magento\\Framework\\Message\\ManagerInterface $messageManager,\n+ \\Psr\\Log\\LoggerInterface $logger\n+ )\n+ {\n+\n+ $this->config = $config;\n+ $this->scopeConfig = $scopeConfig;\n+ $this->encryptor = $encryptor;\n+ $this->storeManager = $storeManager;\n+ $this->backendUrl = $backendUrl;\n+ $this->rsa = $rsa;\n+ $this->aes = $aes;\n+ $this->cacheManager = $cacheManager;\n+ $this->request = $request;\n+ $this->connection = $connection;\n+ $this->moduleList = $moduleList;\n+ $this->productMeta = $productMeta;\n+ $this->logger = $logger;\n+\n+ $this->messageManager = $messageManager;\n+ }\n+\n+ /**\n+ * Generate and save RSA keys\n+ */\n+ public function generateKeys()\n+ {\n+ //$keys = $rsa->generateKeys(array('private_key_bits' => 2048, 'privateKeyBits' => 2048, 'hashAlgorithm' => 'sha1'));\n+\n+ $keys = $this->rsa->createKey(2048);\n+\n+ $this->config\n+ ->saveConfig(self::CONFIG_XML_PATH_PUBLIC_KEY, $keys['publickey'], 'default', 0)\n+ ->saveConfig(self::CONFIG_XML_PATH_PRIVATE_KEY, $this->encryptor->encrypt($keys['privatekey']), 'default', 0);\n+\n+ $this->cacheManager->clean([CacheTypeConfig::TYPE_IDENTIFIER]);\n+\n+ return $keys;\n+ }\n+\n+ /**\n+ * Delete key-pair from config\n+ */\n+ public function destroyKeys()\n+ {\n+ $this->config\n+ ->deleteConfig(self::CONFIG_XML_PATH_PUBLIC_KEY, 'default', 0)\n+ ->deleteConfig(self::CONFIG_XML_PATH_PRIVATE_KEY, 'default', 0);\n+\n+ $this->cacheManager->clean([CacheTypeConfig::TYPE_IDENTIFIER]);\n+ }\n+\n+ /**\n+ * Return RSA public key\n+ *\n+ * @param bool $pemformat Return key in PEM format\n+ */\n+ public function getPublicKey($pemformat = false, $reset = false)\n+ {\n+ $publickey = $this->scopeConfig->getValue(self::CONFIG_XML_PATH_PUBLIC_KEY, 'default', 0);\n+\n+ // Generate key pair\n+ if (!$publickey || $reset || strlen($publickey) < 300) {\n+ $keys = $this->generateKeys();\n+ $publickey = $keys['publickey'];\n+ }\n+\n+ if (!$pemformat) {\n+ $publickey = str_replace(array('-----BEGIN PUBLIC KEY-----', '-----END PUBLIC KEY-----', \"\\n\"), array('','',''), $publickey);\n+ // Remove binary characters\n+ $publickey = preg_replace('/[\\x00-\\x1F\\x80-\\xFF]/', '', $publickey);\n+ }\n+ return $publickey;\n+ }\n+\n+ /**\n+ * Return RSA private key\n+ */\n+ public function getPrivateKey()\n+ {\n+ return $this->encryptor->decrypt($this->scopeConfig->getValue(self::CONFIG_XML_PATH_PRIVATE_KEY, 'default', 0));\n+ }\n+\n+ /**\n+ * Convert key to PEM format for openssl functions\n+ */\n+ public function key2pem($key)\n+ {\n+ return \"-----BEGIN PUBLIC KEY-----\\n\" .\n+ chunk_split($key, 64, \"\\n\") .\n+ \"-----END PUBLIC KEY-----\\n\";\n+ }\n+\n+ /**\n+ * Verify and decrypt JSON payload\n+ *\n+ * @param string $payloadJson\n+ */\n+ public function decryptPayload($payloadJson, $autoEnable = true, $autoSave = true)\n+ {\n+ try {\n+ $payload = (object) json_decode($payloadJson);\n+ $payloadVerify = clone $payload;\n+\n+ // Unencrypted?\n+ if (!isset($payload->encryptedKey) && isset($payload->merchant_id, $payload->access_key, $payload->secret_key)) {\n+ return $this->saveToConfig($payloadJson, $autoEnable);\n+ }\n+\n+ // Validate JSON\n+ if (!isset($payload->encryptedKey, $payload->encryptedPayload, $payload->iv, $payload->sigKeyID, $payload->signature)) {\n+ throw new \\Magento\\Framework\\Validator\\Exception(__(\"Unable to import Amazon keys. Please verify your JSON format and values.\"));\n+ }\n+\n+ // URL decode values\n+ foreach ($payload as $key => $value) {\n+ $payload->$key = urldecode($value);\n+ }\n+\n+ // Retrieve Amazon public key to verify signature\n+ try {\n+ $client = new \\Zend_Http_Client(self::API_ENDPOINT_GET_PUBLICKEY, array(\n+ 'maxredirects' => 2,\n+ 'timeout' => 30));\n+\n+ $client->setParameterGet(array('sigkey_id' => $payload->sigKeyID));\n+\n+ $response = $client->request();\n+ $amazonPublickey = urldecode($response->getBody());\n+\n+ } catch (Exception $e) {\n+ throw new \\Magento\\Framework\\Validator\\Exception(__($e->getMessage()));\n+ }\n+\n+ // Use raw JSON (without signature or URL decode) as the data to verify signature\n+ unset($payloadVerify->signature);\n+ $payloadVerifyJson = json_encode($payloadVerify);\n+\n+ // Verify signature using Amazon publickey and JSON paylaod\n+ if ($amazonPublickey && openssl_verify($payloadVerifyJson, base64_decode($payload->signature), $this->key2pem($amazonPublickey), 'SHA256')) {\n+\n+ // Decrypt Amazon key using own private key\n+ $decryptedKey = null;\n+ openssl_private_decrypt(base64_decode($payload->encryptedKey), $decryptedKey, $this->getPrivateKey(), OPENSSL_PKCS1_OAEP_PADDING);\n+\n+ // Decrypt final payload (AES 128-bit CBC)\n+ if (function_exists('mcrypt_decrypt')) {\n+ $finalPayload = @mcrypt_decrypt(MCRYPT_RIJNDAEL_128, $decryptedKey, base64_decode($payload->encryptedPayload), MCRYPT_MODE_CBC, base64_decode($payload->iv));\n+ } else {\n+ // This uses openssl_decrypt, which may have issues\n+ $this->aes->setKey($decryptedKey);\n+ $this->aes->setIV(base64_decode($payload->iv, true));\n+ $this->aes->setKeyLength(128);\n+ $finalPayload = $this->aes->decrypt($payload->encryptedPayload);\n+ }\n+\n+ // Remove binary characters\n+ $finalPayload = preg_replace('/[\\x00-\\x1F\\x80-\\xFF]/', '', $finalPayload);\n+\n+ if (json_decode($finalPayload)) {\n+ if ($autoSave) {\n+ $this->saveToConfig($finalPayload, $autoEnable);\n+ $this->destroyKeys();\n+ }\n+\n+ return $finalPayload;\n+ }\n+\n+ } else {\n+ throw new \\Magento\\Framework\\Validator\\Exception(\"Unable to verify signature for JSON payload.\");\n+ }\n+\n+ } catch (Exception $e) {\n+ $this->logger->critical($e);\n+ $this->messageManager->addError(__($e->getMessage()));\n+\n+ $link = 'https://payments.amazon.com/help/202024240';\n+ $this->messageManager->addError(__(\"If you're experiencing consistent errors with transferring keys, click <a href=\\\"%s\\\" target=\\\"_blank\\\">Manual Transfer Instructions</a> to learn more.\", $link));\n+ }\n+\n+ return false;\n+ }\n+\n+ /**\n+ * Save values to Mage config\n+ *\n+ * @param string $json\n+ */\n+ public function saveToConfig($json, $autoEnable = true)\n+ {\n+ if ($values = (object) json_decode($json)) {\n+ foreach ($values as $key => $value) {\n+ $values->{strtolower($key)} = $value;\n+ }\n+\n+ $this->config->saveConfig('payment/amazon_payment/merchant_id', $values->merchant_id, 'default', 0);\n+ $this->config->saveConfig('payment/amazon_payment/client_id', $values->client_id, 'default', 0);\n+ $this->config->saveConfig('payment/amazon_payment/client_secret', $this->encryptor->encrypt($values->client_secret), 'default', 0);\n+ $this->config->saveConfig('payment/amazon_payment/access_key', $values->access_key, 'default', 0);\n+ $this->config->saveConfig('payment/amazon_payment/secret_key', $this->encryptor->encrypt($values->secret_key), 'default', 0);\n+\n+ if ($autoEnable) {\n+ $this->autoEnable();\n+ }\n+\n+ $this->cacheManager->clean([CacheTypeConfig::TYPE_IDENTIFIER]);\n+\n+ return true;\n+ }\n+ }\n+\n+ /**\n+ * Auto-enable payment method\n+ */\n+ public function autoEnable()\n+ {\n+ if (!$this->scopeConfig->getValue('payment/amazon_payment/pwa_enabled')) {\n+ $this->config->saveConfig('payment/amazon_payment/pwa_enabled', true, 'default', 0);\n+ $this->messageManager->addSuccess(__(\"Login and Pay with Amazon is now enabled.\"));\n+ }\n+ }\n+\n+ /**\n+ * Return listener URL\n+ */\n+ public function getReturnUrl()\n+ {\n+ /*\n+ //$url = $this->_backendUrl->getUrl('amazon_payments/simplepath', array('_store' => Mage::helper('amazon_payments')->getAdminStoreId(), '_forced_secure' => true));\n+ $url = $this->_backendUrl->getUrl('amazon_payments/simplepath');\n+ // $this->_storeManager->getStore()->getBaseUrl()\n+ // Add index.php\n+ $baseUrl = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB, true);\n+ return str_replace($baseUrl, $baseUrl . 'index.php/', $url);\n+ */\n+\n+ $baseUrl = $this->storeManager->getStore()->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\n+ $baseUrl = str_replace('http:', 'https:', $baseUrl);\n+ return $baseUrl . 'amazon_core/simplepath/listener';\n+\n+ //return $this->storeManager->getStore()->getUrl('amazon_core/simplepath/listener', array('_secure' => true, '_forced_secure' => true));\n+ }\n+\n+ /**\n+ * Return simplepath URL\n+ */\n+ public function getSimplepathUrl()\n+ {\n+ return self::API_ENDPOINT_DOWNLOAD_KEYS . '?returnUrl=' . urlencode($this->getReturnUrl()) .\n+ '&pub_key=' . urlencode($this->getPublicKey()) .\n+ '#event/fromSP';\n+ }\n+\n+ /**\n+ * Return array of form POST params for SimplePath sign up\n+ */\n+ public function getFormParams()\n+ {\n+ // Retrieve store URLs from config table\n+ $urls = array();\n+ $db = $this->connection->getConnection();\n+ $select = $db->select()\n+ ->from(\n+ ['c' => 'core_config_data']\n+ )\n+ ->where('c.path IN (?)', array('web/unsecure/base_url', 'web/secure/base_url'));\n+\n+ foreach ($db->fetchAll($select) as $row) {\n+ $url = parse_url($row['value']);\n+\n+ if (isset($url['host'])){\n+ $urls[] = 'https://' . $url['host'];\n+ }\n+ }\n+\n+ $urls = array_unique($urls);\n+\n+\n+ $version = $this->moduleList->getOne('Amazon_Core');\n+ $coreVersion = ($version && isset($version['setup_version'])) ? $version['setup_version'] : '--';\n+\n+ return array(\n+ 'locale' => $this->scopeConfig->getValue('general/country/default'),\n+ 'spId' => self::PARAM_SP_ID,\n+ 'allowedLoginDomains[]' => $urls,\n+ 'spSoftwareVersion' => $coreVersion,\n+ 'spAmazonPluginVersion' => $this->productMeta->getVersion(),\n+ );\n+ }\n+\n+ /**\n+ * Return array of config for JSON AmazonSp variable.\n+ */\n+ public function getJsonAmazonSpConfig()\n+ {\n+ return array(\n+ 'amazonUrl' => $this->getSimplepathUrl(),\n+ 'pollUrl' => $this->backendUrl->getUrl('amazonsp/simplepath/poll'),\n+ 'spUrl' => $this->backendUrl->getUrl('amazonsp/simplepath/spurl'),\n+ 'importUrl' => $this->backendUrl->getUrl('amazonsp/simplepath/import'),\n+ 'isSecure' => (int) ($this->request->isSecure()),\n+ 'region' => (int) $this->scopeConfig->getValue('general/country/default'),\n+ //'isUsa' => (int) (Mage::helper('amazon_payments')->getAdminConfig() == 'US' && Mage::helper('amazon_payments')->getAdminRegion() != 'eu'),\n+ 'hasOpenssl' => (int) (extension_loaded('openssl')),\n+ 'formParams' => $this->getFormParams(),\n+ );\n+ }\n+}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Validation/JsonConfigDataValidator.php",
                    "new_path": "src/Core/Model/Validation/JsonConfigDataValidator.php",
                    "diff": "@@ -66,6 +66,11 @@ class JsonConfigDataValidator extends AbstractValidator\nprotected function mandatoryFieldsExist($decodedCredentials)\n{\n+ // SimplePath\n+ if (isset($decodedCredentials['encryptedKey'])) {\n+ return true;\n+ }\n+\nforeach ($this->amazonCoreHelper->getAmazonCredentialsFields() as $mandatoryField) {\nif (!isset($decodedCredentials[$mandatoryField])) {\nreturn false;\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/adminhtml/routes.xml",
                    "new_path": "src/Core/etc/adminhtml/routes.xml",
                    "diff": "<route id=\"amazonlogs\" frontName=\"amazonlogs\">\n<module name=\"Amazon_Core\" />\n</route>\n+ <route id=\"amazonsp\" frontName=\"amazonsp\">\n+ <module name=\"Amazon_Core\" />\n+ </route>\n</router>\n</config>\n\\ No newline at end of file\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/adminhtml/system.xml",
                    "new_path": "src/Core/etc/adminhtml/system.xml",
                    "diff": "<section id=\"payment\">\n<group id=\"amazon_payment\" translate=\"label\" type=\"text\" sortOrder=\"8\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Amazon Pay</label>\n+ <comment><![CDATA[\n+\n+ <div id=\"amazon_simplepath\">\n+ <span style=\"display:inline-block;padding-bottom:1em;\">\n+ <button><span>Get started with account registration</span></button>\n+ &nbsp; &nbsp;\n+ <button><span>My account is ready, I need to connect it to Magento</span></button>\n+ </span>\n+ <span style=\"display:inline-block;\">\n+ &nbsp; or &nbsp;\n+ <a href=\"#\" id=\"simplepath-skip\">I've already setup Pay with Amazon, I want to edit my settings</a>\n+ </span>\n+\n+ <p style=\"color:red;display:none\" id=\"amazon_https_required\">In order to enable automatic account configuration using Amazon's secure key exchange, please turn on secure admin pages in System > Configuration > Web > Use secure URLs in Admin.</p>\n+ <p style=\"color:red;display:none\" id=\"amazon_openssl_required\">In order to set keys, the OpenSSL PHP library is required.</p>\n+ <p style=\"color:red;display:none\" id=\"amazon_reload\">Updating your config with new keys, please wait...</p>\n+\n+ </div>\n+\n+ <div id=\"amazon_simplepath_back\" style=\"display:none;margin-bottom:1em;margin-top:-0.5em;\">\n+ <a href=\"#\">&laquo; Back</a>\n+ </div>\n+\n+ ]]></comment>\n<field id=\"version\" type=\"text\" translate=\"label comment\" sortOrder=\"10\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<frontend_model>Amazon\\Core\\Block\\Adminhtml\\System\\Config\\Form\\Version</frontend_model>\n</field>\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Core/etc/frontend/routes.xml",
                    "diff": "+<?xml version=\"1.0\"?>\n+<config xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:App/etc/routes.xsd\">\n+ <router id=\"standard\">\n+ <route id=\"amazon_core\" frontName=\"amazon_core\">\n+ <module name=\"Amazon_Core\" />\n+ </route>\n+ </router>\n+</config>\n\\ No newline at end of file\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Core/view/adminhtml/layout/adminhtml_system_config_edit.xml",
                    "diff": "+<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" layout=\"admin-2columns-left\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n+ <body>\n+ <referenceContainer name=\"js\">\n+ <block class=\"Amazon\\Core\\Block\\Adminhtml\\System\\Config\\SimplePathAdmin\" template=\"Amazon_Core::system/config/simplepath_admin.phtml\" cacheable=\"false\" />\n+ </referenceContainer>\n+ </body>\n+</page>\n\\ No newline at end of file\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "+<script>\n+\n+var AmazonSp = <?php echo $this->getAmazonSpJson(); ?>;\n+\n+require([\"prototype\"], function(){\n+\n+ var amazonPollInterval = 1500; // poll every ms for keys\n+ var amazonPollTimer = null;\n+\n+\n+ var amazonSimplepath = $(\"amazon_simplepath\");\n+ var amazonFields = $$(\"#payment_us_amazon_payment .form-list\");\n+ var amazonSpBack = $(\"amazon_simplepath_back\");\n+\n+\n+ if ($(\"payment_us_amazon_payment_general_credentials_merchant_id\") != null) {\n+ if (!$(\"payment_us_amazon_payment_general_credentials_merchant_id\").value) {\n+ amazonFields.each(Element.hide);\n+ } else {\n+ amazonSpBack.show();\n+ amazonSimplepath.hide();\n+\n+ if (window.location.hash == \"#payment_amazon_payments-head\") {\n+ showAmazonConfig();\n+ }\n+ }\n+ }\n+\n+ // Generate form to post to Amazon\n+ var form = new Element('form', { method: 'post', action: AmazonSp.amazonUrl, id: 'simplepath_form', target: 'simplepath'});\n+ //$$('body')[0].insert(form);\n+ amazonSimplepath.wrap(form);\n+\n+ // Convert formParams JSON to hidden inputs\n+ var formInput;\n+ for (var key in AmazonSp.formParams) {\n+ if (typeof AmazonSp.formParams[key] == 'object' || typeof AmazonSp.formParams[key] == 'array') {\n+ for (var i in AmazonSp.formParams[key]) {\n+ if (typeof AmazonSp.formParams[key][i] != \"function\") {\n+ form.insert(new Element('input', { type: 'hidden', name: key, value: AmazonSp.formParams[key][i]}));\n+ }\n+ }\n+ } else {\n+ form.insert(new Element('input', { type: 'hidden', name: key, value: AmazonSp.formParams[key]}));\n+ }\n+ }\n+\n+ // Get Started clicked\n+ $(\"simplepath_form\").observe(\"submit\", function(e) {\n+ var heights = [660, 720, 810, 900];\n+ var popupHeight = heights[0];\n+ for (var i in heights) {\n+ popupHeight = (window.innerHeight >= heights[i]) ? heights[i] : popupHeight;\n+ }\n+\n+ window.launchPopup('', 768, popupHeight);\n+\n+ //amazonFields[1].show();\n+ amazonFields.each(Element.show);\n+\n+ if (!amazonPollTimer) {\n+ amazonPollTimer = setTimeout(pollForKeys, amazonPollInterval);\n+ }\n+ });\n+\n+ // User is skipping simplepath\n+ amazonSimplepath.select(\"a\")[0].observe(\"click\", function(e) {\n+ e.stop();\n+ amazonSpBack.show();\n+ showAmazonConfig();\n+ });\n+\n+ // User clicked 'Back'\n+ $(\"amazon_simplepath_back\").select(\"a\")[0].observe(\"click\", function(e) {\n+ e.stop();\n+ amazonSpBack.hide();\n+ amazonSimplepath.show();\n+ });\n+\n+\n+ function showAmazonConfig() {\n+ amazonFields.each(Element.show);\n+ amazonSimplepath.hide();\n+ amazonSpBack.show();\n+\n+ if (!$('payment_us_amazon_payment_general-head').hasClassName('open')) {\n+ $('payment_us_amazon_payment_general-head').click();\n+ $('payment_us_amazon_payment_general_credentials-head').click();\n+ $('payment_us_amazon_payment_general_options-head').click();\n+ }\n+ }\n+\n+\n+ function pollForKeys() {\n+ new Ajax.Request(AmazonSp.pollUrl, {\n+ method:'get',\n+ onSuccess: function(transport) {\n+ if (transport.responseText == '1') {\n+ $(\"amazon_reload\").show();\n+ document.location.replace(document.location + \"#payment_amazon_payments-head\");\n+ location.reload();\n+ } else {\n+ amazonPollTimer = setTimeout(pollForKeys, amazonPollInterval);\n+ }\n+\n+ },\n+ onFailure: function() { },\n+ // Disable \"Please Wait\" modal\n+ onCreate: function(request) {\n+ Ajax.Responders.unregister(varienLoaderHandler.handler);\n+ },\n+ });\n+ }\n+\n+\n+});\n+\n+// Add Mage validator to fix \"Save Config\" button from not submitting\n+require([\"jquery\", \"jquery/validate\"], function($) {\n+ $(\"#simplepath_form\").validate();\n+});\n+\n+\n+</script>\n+\n+\n+<script>\n+// Amazon Pop-up\n+(function () {\n+ 'use strict';\n+\n+ function launchPopup(url, requestedWidth, requestedHeight) {\n+ var leftOffset = getLeftOffset(requestedWidth),\n+ topOffset = getTopOffset(requestedHeight),\n+ newWindow = window.open(url, 'simplepath', 'scrollbars=yes, width=' + requestedWidth + ', height=' + requestedHeight + ', top=' + topOffset + ', left=' + leftOffset);\n+\n+ if (window.focus) {\n+ newWindow.focus();\n+ }\n+ }\n+\n+ function getLeftOffset(requestedWidth) {\n+ var dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : screen.left;\n+\n+ return ((windowWidth() / 2) - (requestedWidth / 2)) + dualScreenLeft;\n+ }\n+\n+ function getTopOffset(requestedHeight) {\n+ var dualScreenTop = window.screenTop !== undefined ? window.screenTop : screen.top;\n+\n+ return ((windowHeight() / 2) - (requestedHeight / 2)) + dualScreenTop;\n+ }\n+\n+ function windowWidth() {\n+ if (window.innerWidth) {\n+ return window.innerWidth;\n+ } else if (document.documentElement.clientWidth) {\n+ return document.documentElement.clientWidth;\n+ } else {\n+ return screen.width;\n+ }\n+ }\n+\n+ function windowHeight() {\n+ if (window.innerHeight) {\n+ return window.innerHeight;\n+ } else if (document.documentElement.clientHeight) {\n+ return document.documentElement.clientHeight;\n+ } else {\n+ return screen.height;\n+ }\n+ }\n+\n+ window.launchPopup = launchPopup;\n+})();\n+</script>\n\\ No newline at end of file\n"
                }
            ]
        }
    },
    "Row_57": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "add EU endpoint and fix config scope"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "add EU endpoint and fix config scope"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Controller/Simplepath/Listener.php",
                    "new_path": "src/Core/Controller/Simplepath/Listener.php",
                    "diff": "@@ -32,20 +32,22 @@ class Listener extends \\Magento\\Framework\\App\\Action\\Action\npublic function execute()\n{\n- $url = parse_url(\\Amazon\\Core\\Model\\Config\\SimplePath::API_ENDPOINT_DOWNLOAD_KEYS);\n+ $url = parse_url($this->simplepath->getEndpointRegister());\nheader('Access-Control-Allow-Origin: https://' . $url['host']);\n- header('Access-Control-Allow-Methods: GET, POST');\n- header('Access-Control-Allow-Headers: Content-Type');\n+ header('Access-Control-Allow-Methods: GET, POST, OPTIONS');\n+ header('Access-Control-Allow-Headers: Content-Type, X-CSRF-Token');\n$payload = $this->_request->getParam('payload');\n$result = $this->jsonResultFactory->create();\n- $return = array('result' => 'error', 'message' => 'Empty response.');\n+ $return = array('result' => 'error', 'message' => 'Empty payload');\ntry {\n- if ($payload && strpos($payload, 'encryptedKey') !== FALSE) {\n+ if (strpos($payload, 'encryptedKey') === FALSE) {\n+ $return = array('result' => 'error', 'message' => 'Invalid payload: ' . $payload);\n+ } else if ($payload) {\n$json = $this->simplepath->decryptPayload($payload, false);\n@@ -53,15 +55,17 @@ class Listener extends \\Magento\\Framework\\App\\Action\\Action\n$return = array('result' => 'success');\n}\n} else {\n- $result->setHttpResponseCode(\\Magento\\Framework\\Webapi\\Exception::HTTP_BAD_REQUEST);\n$return = array('result' => 'error', 'message' => 'payload parameter not found.');\n}\n} catch (Exception $e) {\n- $result->setHttpResponseCode(\\Magento\\Framework\\Webapi\\Exception::HTTP_BAD_REQUEST);\n$return = array('result' => 'error', 'message' => $e->getMessage());\n}\n+ if ($this->_request->isPost() && (empty($return['result']) || $return['result'] == 'error')) {\n+ $result->setHttpResponseCode(\\Magento\\Framework\\Webapi\\Exception::HTTP_BAD_REQUEST);\n+ }\n+\n$result->setData($return);\nreturn $result;\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -5,66 +5,136 @@ namespace Amazon\\Core\\Model\\Config;\nuse Amazon\\Core\\Helper\\Data;\nuse Magento\\Framework\\App\\State;\nuse Magento\\Framework\\App\\Cache\\Type\\Config as CacheTypeConfig;\n-use Magento\\Store\\Model\\ScopeInterface;\nuse Magento\\Backend\\Model\\UrlInterface;\n+use Magento\\Payment\\Helper\\Formatter;\nclass SimplePath\n{\n- const API_ENDPOINT_DOWNLOAD_KEYS = 'https://payments.amazon.com/register';\n- const API_ENDPOINT_GET_PUBLICKEY = 'https://payments.amazon.com/register/getpublickey';\n-\n- const PARAM_SP_ID = 'A2K7HE1S3M5XJ';\nconst CONFIG_XML_PATH_PRIVATE_KEY = 'payment/amazon_payments/simplepath/privatekey';\nconst CONFIG_XML_PATH_PUBLIC_KEY = 'payment/amazon_payments/simplepath/publickey';\n- /**\n- * @var \\Magento\\Backend\\Model\\UrlInterface\n- */\n- protected $backendUrl;\n+ protected $_spIds = [\n+ 'USD' => 'AUGT0HMCLQVX1',\n+ 'GBP' => 'A1BJXVS5F6XP',\n+ 'EUR' => 'A2ZAYEJU54T1BM',\n+ 'JPY' => 'A1MCJZEB1HY93J',\n+ ];\n+\n+ protected $_mapCurrencyRegion = [\n+ 'EUR' => 'de',\n+ 'USD' => 'us',\n+ 'GBP' => 'uk',\n+ 'JPY' => 'ja',\n+ ];\n+\n+ protected $_storeId;\n+ protected $_websiteId;\n+ protected $_scope;\n+ protected $_scopeId;\n/**\n* SimplePath constructor.\n- *\n- * @param ScopeConfigInterface $config\n- * @param Data $coreHelper\n- * @param State $state\n*/\n- //public function __construct(ScopeConfigInterface $config, Data $coreHelper, State $state, UrlInterface $backendUrl)\n-\npublic function __construct(\n\\Magento\\Framework\\App\\Config\\ConfigResource\\ConfigInterface $config,\n\\Magento\\Framework\\App\\Config\\ScopeConfigInterface $scopeConfig,\n+ \\Magento\\Framework\\App\\ProductMetadataInterface $productMeta,\n\\Magento\\Framework\\Encryption\\EncryptorInterface $encryptor,\n+ \\Magento\\Framework\\Message\\ManagerInterface $messageManager,\n+ \\Magento\\Framework\\Module\\ModuleListInterface $moduleList,\n+ \\Magento\\Framework\\App\\ResourceConnection $connection,\n+ \\Magento\\Framework\\App\\Cache\\Manager $cacheManager,\n+ \\Magento\\Framework\\App\\Request\\Http $request,\n+ \\Magento\\Framework\\App\\State $state,\n\\Magento\\Store\\Model\\StoreManagerInterface $storeManager,\n\\Magento\\Backend\\Model\\UrlInterface $backendUrl,\n+ \\Magento\\Paypal\\Model\\Config $paypal,\n+ \\Psr\\Log\\LoggerInterface $logger,\n\\phpseclib\\Crypt\\RSA $rsa,\n- \\phpseclib\\Crypt\\AES $aes,\n- \\Magento\\Framework\\App\\Cache\\Manager $cacheManager,\n- \\Magento\\Framework\\App\\Request\\Http $request,\n- \\Magento\\Framework\\App\\ResourceConnection $connection,\n- \\Magento\\Framework\\Module\\ModuleListInterface $moduleList,\n- \\Magento\\Framework\\App\\ProductMetadataInterface $productMeta,\n- \\Magento\\Framework\\Message\\ManagerInterface $messageManager,\n- \\Psr\\Log\\LoggerInterface $logger\n+ \\phpseclib\\Crypt\\AES $aes\n)\n{\n$this->config = $config;\n$this->scopeConfig = $scopeConfig;\n+ $this->productMeta = $productMeta;\n$this->encryptor = $encryptor;\n- $this->storeManager = $storeManager;\n$this->backendUrl = $backendUrl;\n- $this->rsa = $rsa;\n- $this->aes = $aes;\n$this->cacheManager = $cacheManager;\n- $this->request = $request;\n$this->connection = $connection;\n$this->moduleList = $moduleList;\n- $this->productMeta = $productMeta;\n+ $this->state = $state;\n+ $this->request = $request;\n+ $this->storeManager = $storeManager;\n+ $this->paypal = $paypal;\n$this->logger = $logger;\n+ $this->rsa = $rsa;\n+ $this->aes = $aes;\n$this->messageManager = $messageManager;\n+\n+ // Find store ID and scope\n+ $this->_websiteId = $request->getParam('website', 0);\n+ $this->_storeId = $request->getParam('store', 0);\n+ $this->_scope = $request->getParam('scope');\n+\n+ // Website scope\n+ if ($this->_websiteId) {\n+ $this->_scope = !$this->_scope ? 'websites' : $this->_scope;\n+ } else {\n+ $this->_websiteId = $storeManager->getWebsite()->getId();\n+ }\n+\n+ // Store scope\n+ if ($this->_storeId) {\n+ $this->_websiteId = $this->storeManager->getStore($this->_storeId)->getWebsite()->getId();\n+ $this->_scope = !$this->_scope ? 'stores' : $this->_scope;\n+ } else {\n+ $this->_storeId = $storeManager->getWebsite($this->_websiteId)->getDefaultStore()->getId();\n+ }\n+\n+ // Set scope ID\n+ switch ($this->_scope) {\n+ case 'websites':\n+ $this->_scopeId = $this->_websiteId;\n+ break;\n+ case 'stores':\n+ $this->_scopeId = $this->_storeId;\n+ break;\n+ default:\n+ $this->_scope = 'default';\n+ $this->_scopeId = 0;\n+ break;\n+ }\n+ }\n+\n+\n+\n+ /**\n+ * Return domain\n+ */\n+ private function getEndpointDomain()\n+ {\n+ return in_array($this->getRegion(), array('EU', 'UK'))\n+ ? 'https://payments-eu.amazon.com/'\n+ : 'https://payments.amazon.com/';\n+ }\n+\n+ /**\n+ * Return register popup endpoint URL\n+ */\n+ public function getEndpointRegister()\n+ {\n+ return $this->getEndpointDomain() . 'register';\n+ }\n+\n+ /**\n+ * Return pubkey endpoint URL\n+ */\n+ public function getEndpointPubkey()\n+ {\n+ return $this->getEndpointDomain() . 'register/getpublickey';\n}\n/**\n@@ -72,8 +142,6 @@ class SimplePath\n*/\npublic function generateKeys()\n{\n- //$keys = $rsa->generateKeys(array('private_key_bits' => 2048, 'privateKeyBits' => 2048, 'hashAlgorithm' => 'sha1'));\n-\n$keys = $this->rsa->createKey(2048);\n$this->config\n@@ -149,8 +217,8 @@ class SimplePath\n$payload = (object) json_decode($payloadJson);\n$payloadVerify = clone $payload;\n- // Unencrypted?\n- if (!isset($payload->encryptedKey) && isset($payload->merchant_id, $payload->access_key, $payload->secret_key)) {\n+ // Unencrypted via admin\n+ if ($this->state->getAreaCode() == 'adminhtml' && isset($payload->merchant_id, $payload->access_key, $payload->secret_key)) {\nreturn $this->saveToConfig($payloadJson, $autoEnable);\n}\n@@ -166,7 +234,7 @@ class SimplePath\n// Retrieve Amazon public key to verify signature\ntry {\n- $client = new \\Zend_Http_Client(self::API_ENDPOINT_GET_PUBLICKEY, array(\n+ $client = new \\Zend_Http_Client($this->getEndpointPubkey(), array(\n'maxredirects' => 2,\n'timeout' => 30));\n@@ -194,7 +262,7 @@ class SimplePath\nif (function_exists('mcrypt_decrypt')) {\n$finalPayload = @mcrypt_decrypt(MCRYPT_RIJNDAEL_128, $decryptedKey, base64_decode($payload->encryptedPayload), MCRYPT_MODE_CBC, base64_decode($payload->iv));\n} else {\n- // This uses openssl_decrypt, which may have issues\n+ // This library uses openssl_decrypt, which may have issues\n$this->aes->setKey($decryptedKey);\n$this->aes->setIV(base64_decode($payload->iv, true));\n$this->aes->setKeyLength(128);\n@@ -240,11 +308,17 @@ class SimplePath\n$values->{strtolower($key)} = $value;\n}\n- $this->config->saveConfig('payment/amazon_payment/merchant_id', $values->merchant_id, 'default', 0);\n- $this->config->saveConfig('payment/amazon_payment/client_id', $values->client_id, 'default', 0);\n- $this->config->saveConfig('payment/amazon_payment/client_secret', $this->encryptor->encrypt($values->client_secret), 'default', 0);\n- $this->config->saveConfig('payment/amazon_payment/access_key', $values->access_key, 'default', 0);\n- $this->config->saveConfig('payment/amazon_payment/secret_key', $this->encryptor->encrypt($values->secret_key), 'default', 0);\n+ $this->config->saveConfig('payment/amazon_payment/merchant_id', $values->merchant_id, $this->_scope, $this->_scopeId);\n+ $this->config->saveConfig('payment/amazon_payment/client_id', $values->client_id, $this->_scope, $this->_scopeId);\n+ $this->config->saveConfig('payment/amazon_payment/client_secret', $this->encryptor->encrypt($values->client_secret), $this->_scope, $this->_scopeId);\n+ $this->config->saveConfig('payment/amazon_payment/access_key', $values->access_key, $this->_scope, $this->_scopeId);\n+ $this->config->saveConfig('payment/amazon_payment/secret_key', $this->encryptor->encrypt($values->secret_key), $this->_scope, $this->_scopeId);\n+\n+ $currency = $this->getConfig('currency/options/default');\n+ if (isset($this->_mapCurrencyRegion[$currency])) {\n+ $this->config->saveConfig('payment/amazon_payment/payment_region', $this->_mapCurrencyRegion[$currency], $this->_scope, $this->_scopeId);\n+ }\n+\nif ($autoEnable) {\n$this->autoEnable();\n@@ -261,8 +335,8 @@ class SimplePath\n*/\npublic function autoEnable()\n{\n- if (!$this->scopeConfig->getValue('payment/amazon_payment/pwa_enabled')) {\n- $this->config->saveConfig('payment/amazon_payment/pwa_enabled', true, 'default', 0);\n+ if (!$this->getConfig('payment/amazon_payment/pwa_enabled')) {\n+ $this->config->saveConfig('payment/amazon_payment/pwa_enabled', true, $this->_scope, $this->_scopeId);\n$this->messageManager->addSuccess(__(\"Login and Pay with Amazon is now enabled.\"));\n}\n}\n@@ -272,20 +346,9 @@ class SimplePath\n*/\npublic function getReturnUrl()\n{\n- /*\n- //$url = $this->_backendUrl->getUrl('amazon_payments/simplepath', array('_store' => Mage::helper('amazon_payments')->getAdminStoreId(), '_forced_secure' => true));\n- $url = $this->_backendUrl->getUrl('amazon_payments/simplepath');\n- // $this->_storeManager->getStore()->getBaseUrl()\n- // Add index.php\n- $baseUrl = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB, true);\n- return str_replace($baseUrl, $baseUrl . 'index.php/', $url);\n- */\n-\n- $baseUrl = $this->storeManager->getStore()->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\n+ $baseUrl = $this->storeManager->getStore($this->_storeId)->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\n$baseUrl = str_replace('http:', 'https:', $baseUrl);\n- return $baseUrl . 'amazon_core/simplepath/listener';\n-\n- //return $this->storeManager->getStore()->getUrl('amazon_core/simplepath/listener', array('_secure' => true, '_forced_secure' => true));\n+ return $baseUrl . 'amazon_core/simplepath/listener?website='.$this->_websiteId.'&store='.$this->_storeId.'&scope='.$this->_scope;\n}\n/**\n@@ -293,7 +356,7 @@ class SimplePath\n*/\npublic function getSimplepathUrl()\n{\n- return self::API_ENDPOINT_DOWNLOAD_KEYS . '?returnUrl=' . urlencode($this->getReturnUrl()) .\n+ return $this->getEndpointRegister() . '?returnUrl=' . urlencode($this->getReturnUrl()) .\n'&pub_key=' . urlencode($this->getPublicKey()) .\n'#event/fromSP';\n}\n@@ -326,28 +389,53 @@ class SimplePath\n$version = $this->moduleList->getOne('Amazon_Core');\n$coreVersion = ($version && isset($version['setup_version'])) ? $version['setup_version'] : '--';\n+ $currency = $this->getConfig('currency/options/default');\n+\nreturn array(\n- 'locale' => $this->scopeConfig->getValue('general/country/default'),\n- 'spId' => self::PARAM_SP_ID,\n+ 'locale' => $this->getConfig('general/country/default'),\n+ 'spId' => isset($this->_spIds[$currency]) ? $this->_spIds[$currency] : '',\n'allowedLoginDomains[]' => $urls,\n'spSoftwareVersion' => $coreVersion,\n'spAmazonPluginVersion' => $this->productMeta->getVersion(),\n);\n}\n+ /**\n+ * Return config value based on scope and scope ID\n+ */\n+ public function getConfig($path)\n+ {\n+ return $this->scopeConfig->getValue($path, $this->_scope, $this->_scopeId);\n+ }\n+\n+ /**\n+ * Return payment region based on currency\n+ */\n+ public function getRegion()\n+ {\n+ $currency = $this->getConfig('currency/options/default');\n+\n+ $region = isset($this->_mapCurrencyRegion[$currency]) ? strtoupper($this->_mapCurrencyRegion[$currency]) : '';\n+ if ($region == 'DE') {\n+ $region = 'EU';\n+ }\n+\n+ return $region;\n+ }\n+\n+\n/**\n* Return array of config for JSON AmazonSp variable.\n*/\npublic function getJsonAmazonSpConfig()\n{\nreturn array(\n+ 'co' => $this->getConfig('paypal/general/merchant_country'),\n+ 'region' => $this->getRegion(),\n+ 'currency' => $this->getConfig('currency/options/default'),\n'amazonUrl' => $this->getSimplepathUrl(),\n- 'pollUrl' => $this->backendUrl->getUrl('amazonsp/simplepath/poll'),\n- 'spUrl' => $this->backendUrl->getUrl('amazonsp/simplepath/spurl'),\n- 'importUrl' => $this->backendUrl->getUrl('amazonsp/simplepath/import'),\n+ 'pollUrl' => $this->backendUrl->getUrl('amazonsp/simplepath/poll/'),\n'isSecure' => (int) ($this->request->isSecure()),\n- 'region' => (int) $this->scopeConfig->getValue('general/country/default'),\n- //'isUsa' => (int) (Mage::helper('amazon_payments')->getAdminConfig() == 'US' && Mage::helper('amazon_payments')->getAdminRegion() != 'eu'),\n'hasOpenssl' => (int) (extension_loaded('openssl')),\n'formParams' => $this->getFormParams(),\n);\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/adminhtml/system.xml",
                    "new_path": "src/Core/etc/adminhtml/system.xml",
                    "diff": "<comment><![CDATA[\n<div id=\"amazon_simplepath\">\n- <span style=\"display:inline-block;padding-bottom:1em;\">\n+\n+ <!-- @see simplepath_admin.phtml -->\n+\n+ <div id=\"simplepath_hint\">You will be registering for a [REGION] account based on the base currency of your shop ([CURRENCY]). For more information, click <a href=\"https://amzn.github.io/amazon-payments-magento-2-plugin/configuration.html#advanced\" target=\"_blank\">here</a>.</div>\n+\n+ <span style=\"display:inline-block;padding:1em 0em;\">\n<button><span>Get started with account registration</span></button>\n&nbsp; &nbsp;\n<button><span>My account is ready, I need to connect it to Magento</span></button>\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "var AmazonSp = <?php echo $this->getAmazonSpJson(); ?>;\n+console.log(AmazonSp);\n+\nrequire([\"prototype\"], function(){\n- var amazonPollInterval = 1500; // poll every ms for keys\n- var amazonPollTimer = null;\n+ // Check if SimplePath is supported\n+ if (!AmazonSp.region || AmazonSp.region == 'JA') {\n+ return;\n+ }\n+ // Country code for ID selectors\n+ var co = AmazonSp.co.toLowerCase();\n+\n+ // Poll every ms for keys\n+ var amazonPollInterval = 1500;\n+ var amazonPollTimer = null;\nvar amazonSimplepath = $(\"amazon_simplepath\");\n- var amazonFields = $$(\"#payment_us_amazon_payment .form-list\");\n+ var amazonFields = $$(\"#payment_\"+co+\"_amazon_payment .form-list\");\nvar amazonSpBack = $(\"amazon_simplepath_back\");\n+ // Set region/currency hint\n+ var hint = $(\"simplepath_hint\").innerHTML;\n+ hint = hint.replace(\"[REGION]\", AmazonSp.region);\n+ hint = hint.replace(\"[CURRENCY]\", AmazonSp.currency);\n+ $(\"simplepath_hint\").innerHTML = hint;\n- if ($(\"payment_us_amazon_payment_general_credentials_merchant_id\") != null) {\n- if (!$(\"payment_us_amazon_payment_general_credentials_merchant_id\").value) {\n+ // Show/hide fields\n+ if ($(\"payment_\"+co+\"_amazon_payment_general_credentials_merchant_id\") != null) {\n+ if (!$(\"payment_\"+co+\"_amazon_payment_general_credentials_merchant_id\").value) {\namazonFields.each(Element.hide);\n} else {\namazonSpBack.show();\n@@ -28,7 +44,6 @@ require([\"prototype\"], function(){\n// Generate form to post to Amazon\nvar form = new Element('form', { method: 'post', action: AmazonSp.amazonUrl, id: 'simplepath_form', target: 'simplepath'});\n- //$$('body')[0].insert(form);\namazonSimplepath.wrap(form);\n// Convert formParams JSON to hidden inputs\n@@ -55,7 +70,6 @@ require([\"prototype\"], function(){\nwindow.launchPopup('', 768, popupHeight);\n- //amazonFields[1].show();\namazonFields.each(Element.show);\nif (!amazonPollTimer) {\n@@ -64,7 +78,7 @@ require([\"prototype\"], function(){\n});\n// User is skipping simplepath\n- amazonSimplepath.select(\"a\")[0].observe(\"click\", function(e) {\n+ amazonSimplepath.select(\"#simplepath-skip\")[0].observe(\"click\", function(e) {\ne.stop();\namazonSpBack.show();\nshowAmazonConfig();\n@@ -83,14 +97,14 @@ require([\"prototype\"], function(){\namazonSimplepath.hide();\namazonSpBack.show();\n- if (!$('payment_us_amazon_payment_general-head').hasClassName('open')) {\n- $('payment_us_amazon_payment_general-head').click();\n- $('payment_us_amazon_payment_general_credentials-head').click();\n- $('payment_us_amazon_payment_general_options-head').click();\n+ if (!$(\"payment_\"+co+\"_amazon_payment_general-head\").hasClassName('open')) {\n+ $(\"payment_\"+co+\"_amazon_payment_general-head\").click();\n+ $(\"payment_\"+co+\"_amazon_payment_general_credentials-head\").click();\n}\n}\n+ // Perform Ajax request looking for new keys\nfunction pollForKeys() {\nnew Ajax.Request(AmazonSp.pollUrl, {\nmethod:'get',\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Controller/Simplepath/Listener.php",
                    "new_path": "src/Core/Controller/Simplepath/Listener.php",
                    "diff": "@@ -32,20 +32,22 @@ class Listener extends \\Magento\\Framework\\App\\Action\\Action\npublic function execute()\n{\n- $url = parse_url(\\Amazon\\Core\\Model\\Config\\SimplePath::API_ENDPOINT_DOWNLOAD_KEYS);\n+ $url = parse_url($this->simplepath->getEndpointRegister());\nheader('Access-Control-Allow-Origin: https://' . $url['host']);\n- header('Access-Control-Allow-Methods: GET, POST');\n- header('Access-Control-Allow-Headers: Content-Type');\n+ header('Access-Control-Allow-Methods: GET, POST, OPTIONS');\n+ header('Access-Control-Allow-Headers: Content-Type, X-CSRF-Token');\n$payload = $this->_request->getParam('payload');\n$result = $this->jsonResultFactory->create();\n- $return = array('result' => 'error', 'message' => 'Empty response.');\n+ $return = array('result' => 'error', 'message' => 'Empty payload');\ntry {\n- if ($payload && strpos($payload, 'encryptedKey') !== FALSE) {\n+ if (strpos($payload, 'encryptedKey') === FALSE) {\n+ $return = array('result' => 'error', 'message' => 'Invalid payload: ' . $payload);\n+ } else if ($payload) {\n$json = $this->simplepath->decryptPayload($payload, false);\n@@ -53,15 +55,17 @@ class Listener extends \\Magento\\Framework\\App\\Action\\Action\n$return = array('result' => 'success');\n}\n} else {\n- $result->setHttpResponseCode(\\Magento\\Framework\\Webapi\\Exception::HTTP_BAD_REQUEST);\n$return = array('result' => 'error', 'message' => 'payload parameter not found.');\n}\n} catch (Exception $e) {\n- $result->setHttpResponseCode(\\Magento\\Framework\\Webapi\\Exception::HTTP_BAD_REQUEST);\n$return = array('result' => 'error', 'message' => $e->getMessage());\n}\n+ if ($this->_request->isPost() && (empty($return['result']) || $return['result'] == 'error')) {\n+ $result->setHttpResponseCode(\\Magento\\Framework\\Webapi\\Exception::HTTP_BAD_REQUEST);\n+ }\n+\n$result->setData($return);\nreturn $result;\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -5,66 +5,136 @@ namespace Amazon\\Core\\Model\\Config;\nuse Amazon\\Core\\Helper\\Data;\nuse Magento\\Framework\\App\\State;\nuse Magento\\Framework\\App\\Cache\\Type\\Config as CacheTypeConfig;\n-use Magento\\Store\\Model\\ScopeInterface;\nuse Magento\\Backend\\Model\\UrlInterface;\n+use Magento\\Payment\\Helper\\Formatter;\nclass SimplePath\n{\n- const API_ENDPOINT_DOWNLOAD_KEYS = 'https://payments.amazon.com/register';\n- const API_ENDPOINT_GET_PUBLICKEY = 'https://payments.amazon.com/register/getpublickey';\n-\n- const PARAM_SP_ID = 'A2K7HE1S3M5XJ';\nconst CONFIG_XML_PATH_PRIVATE_KEY = 'payment/amazon_payments/simplepath/privatekey';\nconst CONFIG_XML_PATH_PUBLIC_KEY = 'payment/amazon_payments/simplepath/publickey';\n- /**\n- * @var \\Magento\\Backend\\Model\\UrlInterface\n- */\n- protected $backendUrl;\n+ protected $_spIds = [\n+ 'USD' => 'AUGT0HMCLQVX1',\n+ 'GBP' => 'A1BJXVS5F6XP',\n+ 'EUR' => 'A2ZAYEJU54T1BM',\n+ 'JPY' => 'A1MCJZEB1HY93J',\n+ ];\n+\n+ protected $_mapCurrencyRegion = [\n+ 'EUR' => 'de',\n+ 'USD' => 'us',\n+ 'GBP' => 'uk',\n+ 'JPY' => 'ja',\n+ ];\n+\n+ protected $_storeId;\n+ protected $_websiteId;\n+ protected $_scope;\n+ protected $_scopeId;\n/**\n* SimplePath constructor.\n- *\n- * @param ScopeConfigInterface $config\n- * @param Data $coreHelper\n- * @param State $state\n*/\n- //public function __construct(ScopeConfigInterface $config, Data $coreHelper, State $state, UrlInterface $backendUrl)\n-\npublic function __construct(\n\\Magento\\Framework\\App\\Config\\ConfigResource\\ConfigInterface $config,\n\\Magento\\Framework\\App\\Config\\ScopeConfigInterface $scopeConfig,\n+ \\Magento\\Framework\\App\\ProductMetadataInterface $productMeta,\n\\Magento\\Framework\\Encryption\\EncryptorInterface $encryptor,\n+ \\Magento\\Framework\\Message\\ManagerInterface $messageManager,\n+ \\Magento\\Framework\\Module\\ModuleListInterface $moduleList,\n+ \\Magento\\Framework\\App\\ResourceConnection $connection,\n+ \\Magento\\Framework\\App\\Cache\\Manager $cacheManager,\n+ \\Magento\\Framework\\App\\Request\\Http $request,\n+ \\Magento\\Framework\\App\\State $state,\n\\Magento\\Store\\Model\\StoreManagerInterface $storeManager,\n\\Magento\\Backend\\Model\\UrlInterface $backendUrl,\n+ \\Magento\\Paypal\\Model\\Config $paypal,\n+ \\Psr\\Log\\LoggerInterface $logger,\n\\phpseclib\\Crypt\\RSA $rsa,\n- \\phpseclib\\Crypt\\AES $aes,\n- \\Magento\\Framework\\App\\Cache\\Manager $cacheManager,\n- \\Magento\\Framework\\App\\Request\\Http $request,\n- \\Magento\\Framework\\App\\ResourceConnection $connection,\n- \\Magento\\Framework\\Module\\ModuleListInterface $moduleList,\n- \\Magento\\Framework\\App\\ProductMetadataInterface $productMeta,\n- \\Magento\\Framework\\Message\\ManagerInterface $messageManager,\n- \\Psr\\Log\\LoggerInterface $logger\n+ \\phpseclib\\Crypt\\AES $aes\n)\n{\n$this->config = $config;\n$this->scopeConfig = $scopeConfig;\n+ $this->productMeta = $productMeta;\n$this->encryptor = $encryptor;\n- $this->storeManager = $storeManager;\n$this->backendUrl = $backendUrl;\n- $this->rsa = $rsa;\n- $this->aes = $aes;\n$this->cacheManager = $cacheManager;\n- $this->request = $request;\n$this->connection = $connection;\n$this->moduleList = $moduleList;\n- $this->productMeta = $productMeta;\n+ $this->state = $state;\n+ $this->request = $request;\n+ $this->storeManager = $storeManager;\n+ $this->paypal = $paypal;\n$this->logger = $logger;\n+ $this->rsa = $rsa;\n+ $this->aes = $aes;\n$this->messageManager = $messageManager;\n+\n+ // Find store ID and scope\n+ $this->_websiteId = $request->getParam('website', 0);\n+ $this->_storeId = $request->getParam('store', 0);\n+ $this->_scope = $request->getParam('scope');\n+\n+ // Website scope\n+ if ($this->_websiteId) {\n+ $this->_scope = !$this->_scope ? 'websites' : $this->_scope;\n+ } else {\n+ $this->_websiteId = $storeManager->getWebsite()->getId();\n+ }\n+\n+ // Store scope\n+ if ($this->_storeId) {\n+ $this->_websiteId = $this->storeManager->getStore($this->_storeId)->getWebsite()->getId();\n+ $this->_scope = !$this->_scope ? 'stores' : $this->_scope;\n+ } else {\n+ $this->_storeId = $storeManager->getWebsite($this->_websiteId)->getDefaultStore()->getId();\n+ }\n+\n+ // Set scope ID\n+ switch ($this->_scope) {\n+ case 'websites':\n+ $this->_scopeId = $this->_websiteId;\n+ break;\n+ case 'stores':\n+ $this->_scopeId = $this->_storeId;\n+ break;\n+ default:\n+ $this->_scope = 'default';\n+ $this->_scopeId = 0;\n+ break;\n+ }\n+ }\n+\n+\n+\n+ /**\n+ * Return domain\n+ */\n+ private function getEndpointDomain()\n+ {\n+ return in_array($this->getRegion(), array('EU', 'UK'))\n+ ? 'https://payments-eu.amazon.com/'\n+ : 'https://payments.amazon.com/';\n+ }\n+\n+ /**\n+ * Return register popup endpoint URL\n+ */\n+ public function getEndpointRegister()\n+ {\n+ return $this->getEndpointDomain() . 'register';\n+ }\n+\n+ /**\n+ * Return pubkey endpoint URL\n+ */\n+ public function getEndpointPubkey()\n+ {\n+ return $this->getEndpointDomain() . 'register/getpublickey';\n}\n/**\n@@ -72,8 +142,6 @@ class SimplePath\n*/\npublic function generateKeys()\n{\n- //$keys = $rsa->generateKeys(array('private_key_bits' => 2048, 'privateKeyBits' => 2048, 'hashAlgorithm' => 'sha1'));\n-\n$keys = $this->rsa->createKey(2048);\n$this->config\n@@ -149,8 +217,8 @@ class SimplePath\n$payload = (object) json_decode($payloadJson);\n$payloadVerify = clone $payload;\n- // Unencrypted?\n- if (!isset($payload->encryptedKey) && isset($payload->merchant_id, $payload->access_key, $payload->secret_key)) {\n+ // Unencrypted via admin\n+ if ($this->state->getAreaCode() == 'adminhtml' && isset($payload->merchant_id, $payload->access_key, $payload->secret_key)) {\nreturn $this->saveToConfig($payloadJson, $autoEnable);\n}\n@@ -166,7 +234,7 @@ class SimplePath\n// Retrieve Amazon public key to verify signature\ntry {\n- $client = new \\Zend_Http_Client(self::API_ENDPOINT_GET_PUBLICKEY, array(\n+ $client = new \\Zend_Http_Client($this->getEndpointPubkey(), array(\n'maxredirects' => 2,\n'timeout' => 30));\n@@ -194,7 +262,7 @@ class SimplePath\nif (function_exists('mcrypt_decrypt')) {\n$finalPayload = @mcrypt_decrypt(MCRYPT_RIJNDAEL_128, $decryptedKey, base64_decode($payload->encryptedPayload), MCRYPT_MODE_CBC, base64_decode($payload->iv));\n} else {\n- // This uses openssl_decrypt, which may have issues\n+ // This library uses openssl_decrypt, which may have issues\n$this->aes->setKey($decryptedKey);\n$this->aes->setIV(base64_decode($payload->iv, true));\n$this->aes->setKeyLength(128);\n@@ -240,11 +308,17 @@ class SimplePath\n$values->{strtolower($key)} = $value;\n}\n- $this->config->saveConfig('payment/amazon_payment/merchant_id', $values->merchant_id, 'default', 0);\n- $this->config->saveConfig('payment/amazon_payment/client_id', $values->client_id, 'default', 0);\n- $this->config->saveConfig('payment/amazon_payment/client_secret', $this->encryptor->encrypt($values->client_secret), 'default', 0);\n- $this->config->saveConfig('payment/amazon_payment/access_key', $values->access_key, 'default', 0);\n- $this->config->saveConfig('payment/amazon_payment/secret_key', $this->encryptor->encrypt($values->secret_key), 'default', 0);\n+ $this->config->saveConfig('payment/amazon_payment/merchant_id', $values->merchant_id, $this->_scope, $this->_scopeId);\n+ $this->config->saveConfig('payment/amazon_payment/client_id', $values->client_id, $this->_scope, $this->_scopeId);\n+ $this->config->saveConfig('payment/amazon_payment/client_secret', $this->encryptor->encrypt($values->client_secret), $this->_scope, $this->_scopeId);\n+ $this->config->saveConfig('payment/amazon_payment/access_key', $values->access_key, $this->_scope, $this->_scopeId);\n+ $this->config->saveConfig('payment/amazon_payment/secret_key', $this->encryptor->encrypt($values->secret_key), $this->_scope, $this->_scopeId);\n+\n+ $currency = $this->getConfig('currency/options/default');\n+ if (isset($this->_mapCurrencyRegion[$currency])) {\n+ $this->config->saveConfig('payment/amazon_payment/payment_region', $this->_mapCurrencyRegion[$currency], $this->_scope, $this->_scopeId);\n+ }\n+\nif ($autoEnable) {\n$this->autoEnable();\n@@ -261,8 +335,8 @@ class SimplePath\n*/\npublic function autoEnable()\n{\n- if (!$this->scopeConfig->getValue('payment/amazon_payment/pwa_enabled')) {\n- $this->config->saveConfig('payment/amazon_payment/pwa_enabled', true, 'default', 0);\n+ if (!$this->getConfig('payment/amazon_payment/pwa_enabled')) {\n+ $this->config->saveConfig('payment/amazon_payment/pwa_enabled', true, $this->_scope, $this->_scopeId);\n$this->messageManager->addSuccess(__(\"Login and Pay with Amazon is now enabled.\"));\n}\n}\n@@ -272,20 +346,9 @@ class SimplePath\n*/\npublic function getReturnUrl()\n{\n- /*\n- //$url = $this->_backendUrl->getUrl('amazon_payments/simplepath', array('_store' => Mage::helper('amazon_payments')->getAdminStoreId(), '_forced_secure' => true));\n- $url = $this->_backendUrl->getUrl('amazon_payments/simplepath');\n- // $this->_storeManager->getStore()->getBaseUrl()\n- // Add index.php\n- $baseUrl = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB, true);\n- return str_replace($baseUrl, $baseUrl . 'index.php/', $url);\n- */\n-\n- $baseUrl = $this->storeManager->getStore()->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\n+ $baseUrl = $this->storeManager->getStore($this->_storeId)->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\n$baseUrl = str_replace('http:', 'https:', $baseUrl);\n- return $baseUrl . 'amazon_core/simplepath/listener';\n-\n- //return $this->storeManager->getStore()->getUrl('amazon_core/simplepath/listener', array('_secure' => true, '_forced_secure' => true));\n+ return $baseUrl . 'amazon_core/simplepath/listener?website='.$this->_websiteId.'&store='.$this->_storeId.'&scope='.$this->_scope;\n}\n/**\n@@ -293,7 +356,7 @@ class SimplePath\n*/\npublic function getSimplepathUrl()\n{\n- return self::API_ENDPOINT_DOWNLOAD_KEYS . '?returnUrl=' . urlencode($this->getReturnUrl()) .\n+ return $this->getEndpointRegister() . '?returnUrl=' . urlencode($this->getReturnUrl()) .\n'&pub_key=' . urlencode($this->getPublicKey()) .\n'#event/fromSP';\n}\n@@ -326,28 +389,53 @@ class SimplePath\n$version = $this->moduleList->getOne('Amazon_Core');\n$coreVersion = ($version && isset($version['setup_version'])) ? $version['setup_version'] : '--';\n+ $currency = $this->getConfig('currency/options/default');\n+\nreturn array(\n- 'locale' => $this->scopeConfig->getValue('general/country/default'),\n- 'spId' => self::PARAM_SP_ID,\n+ 'locale' => $this->getConfig('general/country/default'),\n+ 'spId' => isset($this->_spIds[$currency]) ? $this->_spIds[$currency] : '',\n'allowedLoginDomains[]' => $urls,\n'spSoftwareVersion' => $coreVersion,\n'spAmazonPluginVersion' => $this->productMeta->getVersion(),\n);\n}\n+ /**\n+ * Return config value based on scope and scope ID\n+ */\n+ public function getConfig($path)\n+ {\n+ return $this->scopeConfig->getValue($path, $this->_scope, $this->_scopeId);\n+ }\n+\n+ /**\n+ * Return payment region based on currency\n+ */\n+ public function getRegion()\n+ {\n+ $currency = $this->getConfig('currency/options/default');\n+\n+ $region = isset($this->_mapCurrencyRegion[$currency]) ? strtoupper($this->_mapCurrencyRegion[$currency]) : '';\n+ if ($region == 'DE') {\n+ $region = 'EU';\n+ }\n+\n+ return $region;\n+ }\n+\n+\n/**\n* Return array of config for JSON AmazonSp variable.\n*/\npublic function getJsonAmazonSpConfig()\n{\nreturn array(\n+ 'co' => $this->getConfig('paypal/general/merchant_country'),\n+ 'region' => $this->getRegion(),\n+ 'currency' => $this->getConfig('currency/options/default'),\n'amazonUrl' => $this->getSimplepathUrl(),\n- 'pollUrl' => $this->backendUrl->getUrl('amazonsp/simplepath/poll'),\n- 'spUrl' => $this->backendUrl->getUrl('amazonsp/simplepath/spurl'),\n- 'importUrl' => $this->backendUrl->getUrl('amazonsp/simplepath/import'),\n+ 'pollUrl' => $this->backendUrl->getUrl('amazonsp/simplepath/poll/'),\n'isSecure' => (int) ($this->request->isSecure()),\n- 'region' => (int) $this->scopeConfig->getValue('general/country/default'),\n- //'isUsa' => (int) (Mage::helper('amazon_payments')->getAdminConfig() == 'US' && Mage::helper('amazon_payments')->getAdminRegion() != 'eu'),\n'hasOpenssl' => (int) (extension_loaded('openssl')),\n'formParams' => $this->getFormParams(),\n);\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/adminhtml/system.xml",
                    "new_path": "src/Core/etc/adminhtml/system.xml",
                    "diff": "<comment><![CDATA[\n<div id=\"amazon_simplepath\">\n- <span style=\"display:inline-block;padding-bottom:1em;\">\n+\n+ <!-- @see simplepath_admin.phtml -->\n+\n+ <div id=\"simplepath_hint\">You will be registering for a [REGION] account based on the base currency of your shop ([CURRENCY]). For more information, click <a href=\"https://amzn.github.io/amazon-payments-magento-2-plugin/configuration.html#advanced\" target=\"_blank\">here</a>.</div>\n+\n+ <span style=\"display:inline-block;padding:1em 0em;\">\n<button><span>Get started with account registration</span></button>\n&nbsp; &nbsp;\n<button><span>My account is ready, I need to connect it to Magento</span></button>\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "var AmazonSp = <?php echo $this->getAmazonSpJson(); ?>;\n+console.log(AmazonSp);\n+\nrequire([\"prototype\"], function(){\n- var amazonPollInterval = 1500; // poll every ms for keys\n- var amazonPollTimer = null;\n+ // Check if SimplePath is supported\n+ if (!AmazonSp.region || AmazonSp.region == 'JA') {\n+ return;\n+ }\n+ // Country code for ID selectors\n+ var co = AmazonSp.co.toLowerCase();\n+\n+ // Poll every ms for keys\n+ var amazonPollInterval = 1500;\n+ var amazonPollTimer = null;\nvar amazonSimplepath = $(\"amazon_simplepath\");\n- var amazonFields = $$(\"#payment_us_amazon_payment .form-list\");\n+ var amazonFields = $$(\"#payment_\"+co+\"_amazon_payment .form-list\");\nvar amazonSpBack = $(\"amazon_simplepath_back\");\n+ // Set region/currency hint\n+ var hint = $(\"simplepath_hint\").innerHTML;\n+ hint = hint.replace(\"[REGION]\", AmazonSp.region);\n+ hint = hint.replace(\"[CURRENCY]\", AmazonSp.currency);\n+ $(\"simplepath_hint\").innerHTML = hint;\n- if ($(\"payment_us_amazon_payment_general_credentials_merchant_id\") != null) {\n- if (!$(\"payment_us_amazon_payment_general_credentials_merchant_id\").value) {\n+ // Show/hide fields\n+ if ($(\"payment_\"+co+\"_amazon_payment_general_credentials_merchant_id\") != null) {\n+ if (!$(\"payment_\"+co+\"_amazon_payment_general_credentials_merchant_id\").value) {\namazonFields.each(Element.hide);\n} else {\namazonSpBack.show();\n@@ -28,7 +44,6 @@ require([\"prototype\"], function(){\n// Generate form to post to Amazon\nvar form = new Element('form', { method: 'post', action: AmazonSp.amazonUrl, id: 'simplepath_form', target: 'simplepath'});\n- //$$('body')[0].insert(form);\namazonSimplepath.wrap(form);\n// Convert formParams JSON to hidden inputs\n@@ -55,7 +70,6 @@ require([\"prototype\"], function(){\nwindow.launchPopup('', 768, popupHeight);\n- //amazonFields[1].show();\namazonFields.each(Element.show);\nif (!amazonPollTimer) {\n@@ -64,7 +78,7 @@ require([\"prototype\"], function(){\n});\n// User is skipping simplepath\n- amazonSimplepath.select(\"a\")[0].observe(\"click\", function(e) {\n+ amazonSimplepath.select(\"#simplepath-skip\")[0].observe(\"click\", function(e) {\ne.stop();\namazonSpBack.show();\nshowAmazonConfig();\n@@ -83,14 +97,14 @@ require([\"prototype\"], function(){\namazonSimplepath.hide();\namazonSpBack.show();\n- if (!$('payment_us_amazon_payment_general-head').hasClassName('open')) {\n- $('payment_us_amazon_payment_general-head').click();\n- $('payment_us_amazon_payment_general_credentials-head').click();\n- $('payment_us_amazon_payment_general_options-head').click();\n+ if (!$(\"payment_\"+co+\"_amazon_payment_general-head\").hasClassName('open')) {\n+ $(\"payment_\"+co+\"_amazon_payment_general-head\").click();\n+ $(\"payment_\"+co+\"_amazon_payment_general_credentials-head\").click();\n}\n}\n+ // Perform Ajax request looking for new keys\nfunction pollForKeys() {\nnew Ajax.Request(AmazonSp.pollUrl, {\nmethod:'get',\n"
                }
            ]
        }
    },
    "Row_58": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "fix getCredentialsJson scope bug"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "fix getCredentialsJson scope bug"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Observer/PaymentConfigSaveAfter.php",
                    "new_path": "src/Core/Observer/PaymentConfigSaveAfter.php",
                    "diff": "@@ -79,7 +79,7 @@ class PaymentConfigSaveAfter implements ObserverInterface\npublic function execute(Observer $observer)\n{\n$scopeData = $this->getScopeData($observer);\n- $jsonCredentials = $this->amazonCoreHelper->getCredentialsJson();\n+ $jsonCredentials = $this->amazonCoreHelper->getCredentialsJson($scopeData['scope'], $scopeData['scope_id']);\nif (!empty($jsonCredentials)) {\n$this->appConfig->reinit();\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Observer/PaymentConfigSaveAfter.php",
                    "new_path": "src/Core/Observer/PaymentConfigSaveAfter.php",
                    "diff": "@@ -79,7 +79,7 @@ class PaymentConfigSaveAfter implements ObserverInterface\npublic function execute(Observer $observer)\n{\n$scopeData = $this->getScopeData($observer);\n- $jsonCredentials = $this->amazonCoreHelper->getCredentialsJson();\n+ $jsonCredentials = $this->amazonCoreHelper->getCredentialsJson($scopeData['scope'], $scopeData['scope_id']);\nif (!empty($jsonCredentials)) {\n$this->appConfig->reinit();\n"
                }
            ]
        }
    },
    "Row_59": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "add Import From Clipboard and fix popup width for EU"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "add Import From Clipboard and fix popup width for EU"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "@@ -18,25 +18,25 @@ require([\"prototype\"], function(){\nvar amazonPollInterval = 1500;\nvar amazonPollTimer = null;\n- var amazonSimplepath = $(\"amazon_simplepath\");\n- var amazonFields = $$(\"#payment_\"+co+\"_amazon_payment .form-list\");\n- var amazonSpBack = $(\"amazon_simplepath_back\");\n+ var amazonSimplepath = $('amazon_simplepath');\n+ var amazonFields = $$('#payment_'+co+'_amazon_payment .form-list');\n+ var amazonSpBack = $('amazon_simplepath_back');\n// Set region/currency hint\n- var hint = $(\"simplepath_hint\").innerHTML;\n- hint = hint.replace(\"[REGION]\", AmazonSp.region);\n- hint = hint.replace(\"[CURRENCY]\", AmazonSp.currency);\n- $(\"simplepath_hint\").innerHTML = hint;\n+ var hint = $('simplepath_hint').innerHTML;\n+ hint = hint.replace('[REGION]', AmazonSp.region);\n+ hint = hint.replace('[CURRENCY]', AmazonSp.currency);\n+ $('simplepath_hint').innerHTML = hint;\n// Show/hide fields\n- if ($(\"payment_\"+co+\"_amazon_payment_general_credentials_merchant_id\") != null) {\n- if (!$(\"payment_\"+co+\"_amazon_payment_general_credentials_merchant_id\").value) {\n+ if ($('payment_'+co+'_amazon_payment_general_credentials_merchant_id') != null) {\n+ if (!$('payment_'+co+'_amazon_payment_general_credentials_merchant_id').value) {\namazonFields.each(Element.hide);\n} else {\namazonSpBack.show();\namazonSimplepath.hide();\n- if (window.location.hash == \"#payment_amazon_payments-head\") {\n+ if (window.location.hash == '#payment_amazon_payments-head') {\nshowAmazonConfig();\n}\n}\n@@ -51,7 +51,7 @@ require([\"prototype\"], function(){\nfor (var key in AmazonSp.formParams) {\nif (typeof AmazonSp.formParams[key] == 'object' || typeof AmazonSp.formParams[key] == 'array') {\nfor (var i in AmazonSp.formParams[key]) {\n- if (typeof AmazonSp.formParams[key][i] != \"function\") {\n+ if (typeof AmazonSp.formParams[key][i] != 'function') {\nform.insert(new Element('input', { type: 'hidden', name: key, value: AmazonSp.formParams[key][i]}));\n}\n}\n@@ -61,31 +61,69 @@ require([\"prototype\"], function(){\n}\n// Get Started clicked\n- $(\"simplepath_form\").observe(\"submit\", function(e) {\n+ $('simplepath_form').observe('submit', function(e) {\nvar heights = [660, 720, 810, 900];\nvar popupHeight = heights[0];\nfor (var i in heights) {\npopupHeight = (window.innerHeight >= heights[i]) ? heights[i] : popupHeight;\n}\n- window.launchPopup('', 768, popupHeight);\n+ var popupWidth = this.action.indexOf('payments-eu') == -1 ? 768 : 1050;\n+ window.launchPopup('', popupWidth, popupHeight);\n+ // Show fields and import\namazonFields.each(Element.show);\nif (!amazonPollTimer) {\namazonPollTimer = setTimeout(pollForKeys, amazonPollInterval);\n}\n+\n+ // Add \"Import From Clipboard\"\n+ var elJson = $('payment_'+co+'_amazon_payment_general_credentials_credentials_json');\n+ if (elJson) {\n+ // Enable Crednetials JSON config field\n+ var elJsonCheckDefault = $$('#payment_'+co+'_amazon_payment_general_credentials_credentials_json_inherit:checked');\n+ if (elJsonCheckDefault && elJsonCheckDefault.length) {\n+ elJsonCheckDefault[0].click();\n+ }\n+\n+ // Add Import/Save button\n+ amazonSimplepath.insert({after: '<button id=\"saveJson\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">Import From Clipboard</button>'});\n+ $('saveJson').observe(\"click\", function(e) {\n+ e.stop();\n+ elJson.value = $('json-import').value;\n+ $('save').click();\n+ });\n+\n+ // Add import textarea\n+ amazonSimplepath.insert({after: '<br/><textarea id=\"json-import\" rows=\"2\" cols=\"15\"></textarea>'});\n+ }\n+\n+ // Autoset payment region (for EU/UK)\n+ var region = AmazonSp.region.toLowerCase();\n+ if (region == 'eu') {\n+ region = 'de';\n+ }\n+ var elCheckDefault = $$('#payment_'+co+'_amazon_payment_general_credentials_payment_region_inherit:checked');\n+ if (elCheckDefault && elCheckDefault.length) {\n+ elCheckDefault[0].click();\n+ }\n+ var elRegion = $('payment_'+co+'_amazon_payment_general_credentials_payment_region');\n+ if (elRegion) {\n+ elRegion.value = region;\n+ }\n+\n});\n// User is skipping simplepath\n- amazonSimplepath.select(\"#simplepath-skip\")[0].observe(\"click\", function(e) {\n+ amazonSimplepath.select('#simplepath-skip')[0].observe('click', function(e) {\ne.stop();\namazonSpBack.show();\nshowAmazonConfig();\n});\n// User clicked 'Back'\n- $(\"amazon_simplepath_back\").select(\"a\")[0].observe(\"click\", function(e) {\n+ $('amazon_simplepath_back').select('a')[0].observe('click', function(e) {\ne.stop();\namazonSpBack.hide();\namazonSimplepath.show();\n@@ -97,9 +135,9 @@ require([\"prototype\"], function(){\namazonSimplepath.hide();\namazonSpBack.show();\n- if (!$(\"payment_\"+co+\"_amazon_payment_general-head\").hasClassName('open')) {\n- $(\"payment_\"+co+\"_amazon_payment_general-head\").click();\n- $(\"payment_\"+co+\"_amazon_payment_general_credentials-head\").click();\n+ if (!$('payment_'+co+'_amazon_payment_general-head').hasClassName('open')) {\n+ $('payment_'+co+'_amazon_payment_general-head').click();\n+ $('payment_'+co+'_amazon_payment_general_credentials-head').click();\n}\n}\n@@ -110,8 +148,8 @@ require([\"prototype\"], function(){\nmethod:'get',\nonSuccess: function(transport) {\nif (transport.responseText == '1') {\n- $(\"amazon_reload\").show();\n- document.location.replace(document.location + \"#payment_amazon_payments-head\");\n+ $('amazon_reload').show();\n+ document.location.replace(document.location + '#payment_amazon_payments-head');\nlocation.reload();\n} else {\namazonPollTimer = setTimeout(pollForKeys, amazonPollInterval);\n@@ -131,7 +169,7 @@ require([\"prototype\"], function(){\n// Add Mage validator to fix \"Save Config\" button from not submitting\nrequire([\"jquery\", \"jquery/validate\"], function($) {\n- $(\"#simplepath_form\").validate();\n+ $('#simplepath_form').validate();\n});\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "@@ -18,25 +18,25 @@ require([\"prototype\"], function(){\nvar amazonPollInterval = 1500;\nvar amazonPollTimer = null;\n- var amazonSimplepath = $(\"amazon_simplepath\");\n- var amazonFields = $$(\"#payment_\"+co+\"_amazon_payment .form-list\");\n- var amazonSpBack = $(\"amazon_simplepath_back\");\n+ var amazonSimplepath = $('amazon_simplepath');\n+ var amazonFields = $$('#payment_'+co+'_amazon_payment .form-list');\n+ var amazonSpBack = $('amazon_simplepath_back');\n// Set region/currency hint\n- var hint = $(\"simplepath_hint\").innerHTML;\n- hint = hint.replace(\"[REGION]\", AmazonSp.region);\n- hint = hint.replace(\"[CURRENCY]\", AmazonSp.currency);\n- $(\"simplepath_hint\").innerHTML = hint;\n+ var hint = $('simplepath_hint').innerHTML;\n+ hint = hint.replace('[REGION]', AmazonSp.region);\n+ hint = hint.replace('[CURRENCY]', AmazonSp.currency);\n+ $('simplepath_hint').innerHTML = hint;\n// Show/hide fields\n- if ($(\"payment_\"+co+\"_amazon_payment_general_credentials_merchant_id\") != null) {\n- if (!$(\"payment_\"+co+\"_amazon_payment_general_credentials_merchant_id\").value) {\n+ if ($('payment_'+co+'_amazon_payment_general_credentials_merchant_id') != null) {\n+ if (!$('payment_'+co+'_amazon_payment_general_credentials_merchant_id').value) {\namazonFields.each(Element.hide);\n} else {\namazonSpBack.show();\namazonSimplepath.hide();\n- if (window.location.hash == \"#payment_amazon_payments-head\") {\n+ if (window.location.hash == '#payment_amazon_payments-head') {\nshowAmazonConfig();\n}\n}\n@@ -51,7 +51,7 @@ require([\"prototype\"], function(){\nfor (var key in AmazonSp.formParams) {\nif (typeof AmazonSp.formParams[key] == 'object' || typeof AmazonSp.formParams[key] == 'array') {\nfor (var i in AmazonSp.formParams[key]) {\n- if (typeof AmazonSp.formParams[key][i] != \"function\") {\n+ if (typeof AmazonSp.formParams[key][i] != 'function') {\nform.insert(new Element('input', { type: 'hidden', name: key, value: AmazonSp.formParams[key][i]}));\n}\n}\n@@ -61,31 +61,69 @@ require([\"prototype\"], function(){\n}\n// Get Started clicked\n- $(\"simplepath_form\").observe(\"submit\", function(e) {\n+ $('simplepath_form').observe('submit', function(e) {\nvar heights = [660, 720, 810, 900];\nvar popupHeight = heights[0];\nfor (var i in heights) {\npopupHeight = (window.innerHeight >= heights[i]) ? heights[i] : popupHeight;\n}\n- window.launchPopup('', 768, popupHeight);\n+ var popupWidth = this.action.indexOf('payments-eu') == -1 ? 768 : 1050;\n+ window.launchPopup('', popupWidth, popupHeight);\n+ // Show fields and import\namazonFields.each(Element.show);\nif (!amazonPollTimer) {\namazonPollTimer = setTimeout(pollForKeys, amazonPollInterval);\n}\n+\n+ // Add \"Import From Clipboard\"\n+ var elJson = $('payment_'+co+'_amazon_payment_general_credentials_credentials_json');\n+ if (elJson) {\n+ // Enable Crednetials JSON config field\n+ var elJsonCheckDefault = $$('#payment_'+co+'_amazon_payment_general_credentials_credentials_json_inherit:checked');\n+ if (elJsonCheckDefault && elJsonCheckDefault.length) {\n+ elJsonCheckDefault[0].click();\n+ }\n+\n+ // Add Import/Save button\n+ amazonSimplepath.insert({after: '<button id=\"saveJson\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">Import From Clipboard</button>'});\n+ $('saveJson').observe(\"click\", function(e) {\n+ e.stop();\n+ elJson.value = $('json-import').value;\n+ $('save').click();\n+ });\n+\n+ // Add import textarea\n+ amazonSimplepath.insert({after: '<br/><textarea id=\"json-import\" rows=\"2\" cols=\"15\"></textarea>'});\n+ }\n+\n+ // Autoset payment region (for EU/UK)\n+ var region = AmazonSp.region.toLowerCase();\n+ if (region == 'eu') {\n+ region = 'de';\n+ }\n+ var elCheckDefault = $$('#payment_'+co+'_amazon_payment_general_credentials_payment_region_inherit:checked');\n+ if (elCheckDefault && elCheckDefault.length) {\n+ elCheckDefault[0].click();\n+ }\n+ var elRegion = $('payment_'+co+'_amazon_payment_general_credentials_payment_region');\n+ if (elRegion) {\n+ elRegion.value = region;\n+ }\n+\n});\n// User is skipping simplepath\n- amazonSimplepath.select(\"#simplepath-skip\")[0].observe(\"click\", function(e) {\n+ amazonSimplepath.select('#simplepath-skip')[0].observe('click', function(e) {\ne.stop();\namazonSpBack.show();\nshowAmazonConfig();\n});\n// User clicked 'Back'\n- $(\"amazon_simplepath_back\").select(\"a\")[0].observe(\"click\", function(e) {\n+ $('amazon_simplepath_back').select('a')[0].observe('click', function(e) {\ne.stop();\namazonSpBack.hide();\namazonSimplepath.show();\n@@ -97,9 +135,9 @@ require([\"prototype\"], function(){\namazonSimplepath.hide();\namazonSpBack.show();\n- if (!$(\"payment_\"+co+\"_amazon_payment_general-head\").hasClassName('open')) {\n- $(\"payment_\"+co+\"_amazon_payment_general-head\").click();\n- $(\"payment_\"+co+\"_amazon_payment_general_credentials-head\").click();\n+ if (!$('payment_'+co+'_amazon_payment_general-head').hasClassName('open')) {\n+ $('payment_'+co+'_amazon_payment_general-head').click();\n+ $('payment_'+co+'_amazon_payment_general_credentials-head').click();\n}\n}\n@@ -110,8 +148,8 @@ require([\"prototype\"], function(){\nmethod:'get',\nonSuccess: function(transport) {\nif (transport.responseText == '1') {\n- $(\"amazon_reload\").show();\n- document.location.replace(document.location + \"#payment_amazon_payments-head\");\n+ $('amazon_reload').show();\n+ document.location.replace(document.location + '#payment_amazon_payments-head');\nlocation.reload();\n} else {\namazonPollTimer = setTimeout(pollForKeys, amazonPollInterval);\n@@ -131,7 +169,7 @@ require([\"prototype\"], function(){\n// Add Mage validator to fix \"Save Config\" button from not submitting\nrequire([\"jquery\", \"jquery/validate\"], function($) {\n- $(\"#simplepath_form\").validate();\n+ $('#simplepath_form').validate();\n});\n"
                }
            ]
        }
    },
    "Row_60": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "fix default merchant location when null"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "fix default merchant location when null"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -429,8 +429,10 @@ class SimplePath\n*/\npublic function getJsonAmazonSpConfig()\n{\n+ $co = $this->getConfig('paypal/general/merchant_country');\n+\nreturn array(\n- 'co' => $this->getConfig('paypal/general/merchant_country'),\n+ 'co' => $co ? $co : 'US',\n'region' => $this->getRegion(),\n'currency' => $this->getConfig('currency/options/default'),\n'amazonUrl' => $this->getSimplepathUrl(),\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -429,8 +429,10 @@ class SimplePath\n*/\npublic function getJsonAmazonSpConfig()\n{\n+ $co = $this->getConfig('paypal/general/merchant_country');\n+\nreturn array(\n- 'co' => $this->getConfig('paypal/general/merchant_country'),\n+ 'co' => $co ? $co : 'US',\n'region' => $this->getRegion(),\n'currency' => $this->getConfig('currency/options/default'),\n'amazonUrl' => $this->getSimplepathUrl(),\n"
                }
            ]
        }
    },
    "Row_61": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "fix multiple import textareas"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "fix multiple import textareas"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "@@ -80,7 +80,7 @@ require([\"prototype\"], function(){\n// Add \"Import From Clipboard\"\nvar elJson = $('payment_'+co+'_amazon_payment_general_credentials_credentials_json');\n- if (elJson) {\n+ if (elJson && $('save-json') == null) {\n// Enable Crednetials JSON config field\nvar elJsonCheckDefault = $$('#payment_'+co+'_amazon_payment_general_credentials_credentials_json_inherit:checked');\nif (elJsonCheckDefault && elJsonCheckDefault.length) {\n@@ -88,8 +88,8 @@ require([\"prototype\"], function(){\n}\n// Add Import/Save button\n- amazonSimplepath.insert({after: '<button id=\"saveJson\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">Import From Clipboard</button>'});\n- $('saveJson').observe(\"click\", function(e) {\n+ amazonSimplepath.insert({after: '<button id=\"save-json\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">Import From Clipboard</button>'});\n+ $('save-json').observe('click', function(e) {\ne.stop();\nelJson.value = $('json-import').value;\n$('save').click();\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "@@ -80,7 +80,7 @@ require([\"prototype\"], function(){\n// Add \"Import From Clipboard\"\nvar elJson = $('payment_'+co+'_amazon_payment_general_credentials_credentials_json');\n- if (elJson) {\n+ if (elJson && $('save-json') == null) {\n// Enable Crednetials JSON config field\nvar elJsonCheckDefault = $$('#payment_'+co+'_amazon_payment_general_credentials_credentials_json_inherit:checked');\nif (elJsonCheckDefault && elJsonCheckDefault.length) {\n@@ -88,8 +88,8 @@ require([\"prototype\"], function(){\n}\n// Add Import/Save button\n- amazonSimplepath.insert({after: '<button id=\"saveJson\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">Import From Clipboard</button>'});\n- $('saveJson').observe(\"click\", function(e) {\n+ amazonSimplepath.insert({after: '<button id=\"save-json\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">Import From Clipboard</button>'});\n+ $('save-json').observe('click', function(e) {\ne.stop();\nelJson.value = $('json-import').value;\n$('save').click();\n"
                }
            ]
        }
    },
    "Row_62": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "add JSON placeholder text"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "add JSON placeholder text"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "@@ -96,7 +96,7 @@ require([\"prototype\"], function(){\n});\n// Add import textarea\n- amazonSimplepath.insert({after: '<br/><textarea id=\"json-import\" rows=\"2\" cols=\"15\"></textarea>'});\n+ amazonSimplepath.insert({after: '<br/><textarea id=\"json-import\" rows=\"2\" cols=\"15\" placeholder=\"Paste JSON credentials here\"></textarea>'});\n}\n// Autoset payment region (for EU/UK)\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "@@ -96,7 +96,7 @@ require([\"prototype\"], function(){\n});\n// Add import textarea\n- amazonSimplepath.insert({after: '<br/><textarea id=\"json-import\" rows=\"2\" cols=\"15\"></textarea>'});\n+ amazonSimplepath.insert({after: '<br/><textarea id=\"json-import\" rows=\"2\" cols=\"15\" placeholder=\"Paste JSON credentials here\"></textarea>'});\n}\n// Autoset payment region (for EU/UK)\n"
                }
            ]
        }
    },
    "Row_63": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "fix form params merchantLoginRedirectURLs and locale"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "fix form params merchantLoginRedirectURLs and locale"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -367,7 +367,7 @@ class SimplePath\npublic function getFormParams()\n{\n// Retrieve store URLs from config table\n- $urls = array();\n+ $baseUrls = array();\n$db = $this->connection->getConnection();\n$select = $db->select()\n->from(\n@@ -379,11 +379,22 @@ class SimplePath\n$url = parse_url($row['value']);\nif (isset($url['host'])){\n- $urls[] = 'https://' . $url['host'];\n+ $baseUrls[] = 'https://' . $url['host'];\n}\n}\n+ $baseUrls = array_unique($baseUrls);\n- $urls = array_unique($urls);\n+ // Get redirect URLs\n+ $urlArray = array();\n+ $stores = $this->storeManager->getStores();\n+ foreach ($stores as $store) {\n+ $baseUrl = $store->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\n+ if ($baseUrl) {\n+ $value = $baseUrl . 'amazon/login/processAuthHash/';\n+ $urlArray[] = $value;\n+ }\n+ }\n+ $urlArray = array_unique($urlArray);\n$version = $this->moduleList->getOne('Amazon_Core');\n@@ -392,11 +403,14 @@ class SimplePath\n$currency = $this->getConfig('currency/options/default');\nreturn array(\n- 'locale' => $this->getConfig('general/country/default'),\n+ 'locale' => $this->getConfig('general/locale/code'),\n'spId' => isset($this->_spIds[$currency]) ? $this->_spIds[$currency] : '',\n- 'allowedLoginDomains[]' => $urls,\n'spSoftwareVersion' => $coreVersion,\n'spAmazonPluginVersion' => $this->productMeta->getVersion(),\n+ 'merchantStoreDescription' => $this->getConfig('general/store_information/name'),\n+ 'merchantLoginDomains[]' => $baseUrls,\n+ 'merchantLoginRedirectURLs[]' => $urlArray,\n+\n);\n}\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -367,7 +367,7 @@ class SimplePath\npublic function getFormParams()\n{\n// Retrieve store URLs from config table\n- $urls = array();\n+ $baseUrls = array();\n$db = $this->connection->getConnection();\n$select = $db->select()\n->from(\n@@ -379,11 +379,22 @@ class SimplePath\n$url = parse_url($row['value']);\nif (isset($url['host'])){\n- $urls[] = 'https://' . $url['host'];\n+ $baseUrls[] = 'https://' . $url['host'];\n}\n}\n+ $baseUrls = array_unique($baseUrls);\n- $urls = array_unique($urls);\n+ // Get redirect URLs\n+ $urlArray = array();\n+ $stores = $this->storeManager->getStores();\n+ foreach ($stores as $store) {\n+ $baseUrl = $store->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\n+ if ($baseUrl) {\n+ $value = $baseUrl . 'amazon/login/processAuthHash/';\n+ $urlArray[] = $value;\n+ }\n+ }\n+ $urlArray = array_unique($urlArray);\n$version = $this->moduleList->getOne('Amazon_Core');\n@@ -392,11 +403,14 @@ class SimplePath\n$currency = $this->getConfig('currency/options/default');\nreturn array(\n- 'locale' => $this->getConfig('general/country/default'),\n+ 'locale' => $this->getConfig('general/locale/code'),\n'spId' => isset($this->_spIds[$currency]) ? $this->_spIds[$currency] : '',\n- 'allowedLoginDomains[]' => $urls,\n'spSoftwareVersion' => $coreVersion,\n'spAmazonPluginVersion' => $this->productMeta->getVersion(),\n+ 'merchantStoreDescription' => $this->getConfig('general/store_information/name'),\n+ 'merchantLoginDomains[]' => $baseUrls,\n+ 'merchantLoginRedirectURLs[]' => $urlArray,\n+\n);\n}\n"
                }
            ]
        }
    },
    "Row_64": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "post SP params as post and update EU label to Euro Region"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "post SP params as post and update EU label to Euro Region"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -356,9 +356,7 @@ class SimplePath\n*/\npublic function getSimplepathUrl()\n{\n- return $this->getEndpointRegister() . '?returnUrl=' . urlencode($this->getReturnUrl()) .\n- '&pub_key=' . urlencode($this->getPublicKey()) .\n- '#event/fromSP';\n+ return $this->getEndpointRegister() . '#event/fromSP';\n}\n/**\n@@ -403,7 +401,10 @@ class SimplePath\n$currency = $this->getConfig('currency/options/default');\nreturn array(\n+ 'keyShareURL' => $this->getReturnUrl(),\n+ 'publicKey' => $this->getPublicKey(),\n'locale' => $this->getConfig('general/locale/code'),\n+ 'source' => 'SPPL',\n'spId' => isset($this->_spIds[$currency]) ? $this->_spIds[$currency] : '',\n'spSoftwareVersion' => $coreVersion,\n'spAmazonPluginVersion' => $this->productMeta->getVersion(),\n@@ -431,7 +432,7 @@ class SimplePath\n$region = isset($this->_mapCurrencyRegion[$currency]) ? strtoupper($this->_mapCurrencyRegion[$currency]) : '';\nif ($region == 'DE') {\n- $region = 'EU';\n+ $region = 'Euro Region';\n}\nreturn $region ? $region : 'US';\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "@@ -101,7 +101,7 @@ require([\"prototype\"], function(){\n// Autoset payment region (for EU/UK)\nvar region = AmazonSp.region.toLowerCase();\n- if (region == 'eu') {\n+ if (region.indexOf('eu') != -1) {\nregion = 'de';\n}\nvar elCheckDefault = $$('#payment_'+co+'_amazon_payment_general_credentials_payment_region_inherit:checked');\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -356,9 +356,7 @@ class SimplePath\n*/\npublic function getSimplepathUrl()\n{\n- return $this->getEndpointRegister() . '?returnUrl=' . urlencode($this->getReturnUrl()) .\n- '&pub_key=' . urlencode($this->getPublicKey()) .\n- '#event/fromSP';\n+ return $this->getEndpointRegister() . '#event/fromSP';\n}\n/**\n@@ -403,7 +401,10 @@ class SimplePath\n$currency = $this->getConfig('currency/options/default');\nreturn array(\n+ 'keyShareURL' => $this->getReturnUrl(),\n+ 'publicKey' => $this->getPublicKey(),\n'locale' => $this->getConfig('general/locale/code'),\n+ 'source' => 'SPPL',\n'spId' => isset($this->_spIds[$currency]) ? $this->_spIds[$currency] : '',\n'spSoftwareVersion' => $coreVersion,\n'spAmazonPluginVersion' => $this->productMeta->getVersion(),\n@@ -431,7 +432,7 @@ class SimplePath\n$region = isset($this->_mapCurrencyRegion[$currency]) ? strtoupper($this->_mapCurrencyRegion[$currency]) : '';\nif ($region == 'DE') {\n- $region = 'EU';\n+ $region = 'Euro Region';\n}\nreturn $region ? $region : 'US';\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "@@ -101,7 +101,7 @@ require([\"prototype\"], function(){\n// Autoset payment region (for EU/UK)\nvar region = AmazonSp.region.toLowerCase();\n- if (region == 'eu') {\n+ if (region.indexOf('eu') != -1) {\nregion = 'de';\n}\nvar elCheckDefault = $$('#payment_'+co+'_amazon_payment_general_credentials_payment_region_inherit:checked');\n"
                }
            ]
        }
    },
    "Row_65": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "fix SP version params"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "fix SP version params"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -406,8 +406,8 @@ class SimplePath\n'locale' => $this->getConfig('general/locale/code'),\n'source' => 'SPPL',\n'spId' => isset($this->_spIds[$currency]) ? $this->_spIds[$currency] : '',\n- 'spSoftwareVersion' => $coreVersion,\n- 'spAmazonPluginVersion' => $this->productMeta->getVersion(),\n+ 'spSoftwareVersion' => $this->productMeta->getVersion(),\n+ 'spAmazonPluginVersion' => $coreVersion,\n'merchantStoreDescription' => $this->getConfig('general/store_information/name'),\n'merchantLoginDomains[]' => $baseUrls,\n'merchantLoginRedirectURLs[]' => $urlArray,\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -406,8 +406,8 @@ class SimplePath\n'locale' => $this->getConfig('general/locale/code'),\n'source' => 'SPPL',\n'spId' => isset($this->_spIds[$currency]) ? $this->_spIds[$currency] : '',\n- 'spSoftwareVersion' => $coreVersion,\n- 'spAmazonPluginVersion' => $this->productMeta->getVersion(),\n+ 'spSoftwareVersion' => $this->productMeta->getVersion(),\n+ 'spAmazonPluginVersion' => $coreVersion,\n'merchantStoreDescription' => $this->getConfig('general/store_information/name'),\n'merchantLoginDomains[]' => $baseUrls,\n'merchantLoginRedirectURLs[]' => $urlArray,\n"
                }
            ]
        }
    },
    "Row_66": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "rename SP save credentials button"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "rename SP save credentials button"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "var AmazonSp = <?php echo $this->getAmazonSpJson(); ?>;\n-console.log(AmazonSp);\n-\nrequire([\"prototype\"], function(){\n// Check if SimplePath is supported\n@@ -78,7 +76,7 @@ require([\"prototype\"], function(){\namazonPollTimer = setTimeout(pollForKeys, amazonPollInterval);\n}\n- // Add \"Import From Clipboard\"\n+ // Add \"Save Credentials\"\nvar elJson = $('payment_'+co+'_amazon_payment_general_credentials_credentials_json');\nif (elJson && $('save-json') == null) {\n// Enable Crednetials JSON config field\n@@ -88,7 +86,7 @@ require([\"prototype\"], function(){\n}\n// Add Import/Save button\n- amazonSimplepath.insert({after: '<button id=\"save-json\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">Import From Clipboard</button>'});\n+ amazonSimplepath.insert({after: '<button id=\"save-json\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">Save Credentials</button>'});\n$('save-json').observe('click', function(e) {\ne.stop();\nelJson.value = $('json-import').value;\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "var AmazonSp = <?php echo $this->getAmazonSpJson(); ?>;\n-console.log(AmazonSp);\n-\nrequire([\"prototype\"], function(){\n// Check if SimplePath is supported\n@@ -78,7 +76,7 @@ require([\"prototype\"], function(){\namazonPollTimer = setTimeout(pollForKeys, amazonPollInterval);\n}\n- // Add \"Import From Clipboard\"\n+ // Add \"Save Credentials\"\nvar elJson = $('payment_'+co+'_amazon_payment_general_credentials_credentials_json');\nif (elJson && $('save-json') == null) {\n// Enable Crednetials JSON config field\n@@ -88,7 +86,7 @@ require([\"prototype\"], function(){\n}\n// Add Import/Save button\n- amazonSimplepath.insert({after: '<button id=\"save-json\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">Import From Clipboard</button>'});\n+ amazonSimplepath.insert({after: '<button id=\"save-json\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">Save Credentials</button>'});\n$('save-json').observe('click', function(e) {\ne.stop();\nelJson.value = $('json-import').value;\n"
                }
            ]
        }
    },
    "Row_67": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "fix 'skip' button when popup already opened"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "fix 'skip' button when popup already opened"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "@@ -85,16 +85,17 @@ require([\"prototype\"], function(){\nelJsonCheckDefault[0].click();\n}\n+ // Add import textarea\n+ amazonSimplepath.insert({bottom: '<br/><br/><textarea id=\"json-import\" rows=\"2\" cols=\"15\" placeholder=\"Paste JSON credentials here\"></textarea>'});\n+\n// Add Import/Save button\n- amazonSimplepath.insert({after: '<button id=\"save-json\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">Save Credentials</button>'});\n+ amazonSimplepath.insert({bottom: '<button id=\"save-json\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">Save Credentials</button>'});\n$('save-json').observe('click', function(e) {\ne.stop();\nelJson.value = $('json-import').value;\n$('save').click();\n});\n- // Add import textarea\n- amazonSimplepath.insert({after: '<br/><textarea id=\"json-import\" rows=\"2\" cols=\"15\" placeholder=\"Paste JSON credentials here\"></textarea>'});\n}\n// Autoset payment region (for EU/UK)\n@@ -137,6 +138,10 @@ require([\"prototype\"], function(){\n$('payment_'+co+'_amazon_payment_general-head').click();\n$('payment_'+co+'_amazon_payment_general_credentials-head').click();\n}\n+ if (!$('payment_'+co+'_amazon_payment_general_credentials-head').hasClassName('open')) {\n+ $('payment_'+co+'_amazon_payment_general_credentials-head').click();\n+ }\n+\n}\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "@@ -85,16 +85,17 @@ require([\"prototype\"], function(){\nelJsonCheckDefault[0].click();\n}\n+ // Add import textarea\n+ amazonSimplepath.insert({bottom: '<br/><br/><textarea id=\"json-import\" rows=\"2\" cols=\"15\" placeholder=\"Paste JSON credentials here\"></textarea>'});\n+\n// Add Import/Save button\n- amazonSimplepath.insert({after: '<button id=\"save-json\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">Save Credentials</button>'});\n+ amazonSimplepath.insert({bottom: '<button id=\"save-json\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">Save Credentials</button>'});\n$('save-json').observe('click', function(e) {\ne.stop();\nelJson.value = $('json-import').value;\n$('save').click();\n});\n- // Add import textarea\n- amazonSimplepath.insert({after: '<br/><textarea id=\"json-import\" rows=\"2\" cols=\"15\" placeholder=\"Paste JSON credentials here\"></textarea>'});\n}\n// Autoset payment region (for EU/UK)\n@@ -137,6 +138,10 @@ require([\"prototype\"], function(){\n$('payment_'+co+'_amazon_payment_general-head').click();\n$('payment_'+co+'_amazon_payment_general_credentials-head').click();\n}\n+ if (!$('payment_'+co+'_amazon_payment_general_credentials-head').hasClassName('open')) {\n+ $('payment_'+co+'_amazon_payment_general_credentials-head').click();\n+ }\n+\n}\n"
                }
            ]
        }
    },
    "Row_68": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Restructure admin options"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Restructure admin options"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/adminhtml/system.xml",
                    "new_path": "src/Core/etc/adminhtml/system.xml",
                    "diff": "<source_model>Amazon\\Core\\Model\\Config\\Source\\UpdateMechanism</source_model>\n<config_path>payment/amazon_payment/update_mechanism</config_path>\n</field>\n- <field id=\"pwa_pp_button_is_visible\" translate=\"label\" type=\"select\" sortOrder=\"60\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n- <label>Amazon Pay button on Product Page</label>\n- <source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n- <config_path>payment/amazon_payment/pwa_pp_button_is_visible</config_path>\n- </field>\n- <field id=\"minicart_button_is_visible\" translate=\"label comment\" type=\"select\" sortOrder=\"70\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n- <label>Amazon Pay button in minicart</label>\n- <source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n- <config_path>payment/amazon_payment/minicart_button_is_visible</config_path>\n- </field>\n</group>\n</group>\n<group id=\"advanced\" translate=\"label\" type=\"text\" sortOrder=\"20\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<source_model>Amazon\\Core\\Model\\Config\\Source\\Button\\Size</source_model>\n<config_path>payment/amazon_payment/button_size</config_path>\n</field>\n+ <field id=\"pwa_pp_button_is_visible\" translate=\"label\" type=\"select\" sortOrder=\"70\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n+ <label>Amazon Pay button on Product Page</label>\n+ <source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n+ <config_path>payment/amazon_payment/pwa_pp_button_is_visible</config_path>\n+ </field>\n+ <field id=\"minicart_button_is_visible\" translate=\"label comment\" type=\"select\" sortOrder=\"80\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n+ <label>Amazon Pay button in minicart</label>\n+ <source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n+ <config_path>payment/amazon_payment/minicart_button_is_visible</config_path>\n+ </field>\n</group>\n<group id=\"sales_options\" translate=\"label\" type=\"text\" sortOrder=\"20\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Sales Options</label>\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Login/etc/adminhtml/system.xml",
                    "new_path": "src/Login/etc/adminhtml/system.xml",
                    "diff": "<system>\n<section id=\"payment\">\n<group id=\"amazon_payment\">\n- <group id=\"general\">\n- <group id=\"options\">\n- <field id=\"amazon_login_in_popup\" translate=\"label comment\" type=\"select\" sortOrder=\"80\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n- <label>Amazon Login available in Authentication popup</label>\n+ <group id=\"advanced\">\n+ <group id=\"frontend\">\n+ <field id=\"amazon_login_in_popup\" translate=\"label comment\" type=\"select\" sortOrder=\"60\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n+ <label>Login with Amazon available in authentication popup</label>\n<source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n<config_path>payment/amazon_payment/amazon_login_in_popup</config_path>\n</field>\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/adminhtml/system.xml",
                    "new_path": "src/Core/etc/adminhtml/system.xml",
                    "diff": "<source_model>Amazon\\Core\\Model\\Config\\Source\\UpdateMechanism</source_model>\n<config_path>payment/amazon_payment/update_mechanism</config_path>\n</field>\n- <field id=\"pwa_pp_button_is_visible\" translate=\"label\" type=\"select\" sortOrder=\"60\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n- <label>Amazon Pay button on Product Page</label>\n- <source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n- <config_path>payment/amazon_payment/pwa_pp_button_is_visible</config_path>\n- </field>\n- <field id=\"minicart_button_is_visible\" translate=\"label comment\" type=\"select\" sortOrder=\"70\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n- <label>Amazon Pay button in minicart</label>\n- <source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n- <config_path>payment/amazon_payment/minicart_button_is_visible</config_path>\n- </field>\n</group>\n</group>\n<group id=\"advanced\" translate=\"label\" type=\"text\" sortOrder=\"20\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<source_model>Amazon\\Core\\Model\\Config\\Source\\Button\\Size</source_model>\n<config_path>payment/amazon_payment/button_size</config_path>\n</field>\n+ <field id=\"pwa_pp_button_is_visible\" translate=\"label\" type=\"select\" sortOrder=\"70\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n+ <label>Amazon Pay button on Product Page</label>\n+ <source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n+ <config_path>payment/amazon_payment/pwa_pp_button_is_visible</config_path>\n+ </field>\n+ <field id=\"minicart_button_is_visible\" translate=\"label comment\" type=\"select\" sortOrder=\"80\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n+ <label>Amazon Pay button in minicart</label>\n+ <source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n+ <config_path>payment/amazon_payment/minicart_button_is_visible</config_path>\n+ </field>\n</group>\n<group id=\"sales_options\" translate=\"label\" type=\"text\" sortOrder=\"20\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Sales Options</label>\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Login/etc/adminhtml/system.xml",
                    "new_path": "src/Login/etc/adminhtml/system.xml",
                    "diff": "<system>\n<section id=\"payment\">\n<group id=\"amazon_payment\">\n- <group id=\"general\">\n- <group id=\"options\">\n- <field id=\"amazon_login_in_popup\" translate=\"label comment\" type=\"select\" sortOrder=\"80\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n- <label>Amazon Login available in Authentication popup</label>\n+ <group id=\"advanced\">\n+ <group id=\"frontend\">\n+ <field id=\"amazon_login_in_popup\" translate=\"label comment\" type=\"select\" sortOrder=\"60\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n+ <label>Login with Amazon available in authentication popup</label>\n<source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n<config_path>payment/amazon_payment/amazon_login_in_popup</config_path>\n</field>\n"
                }
            ]
        }
    },
    "Row_69": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "move SimplePath instructions to template file and place under module version\ndon't auto-hide config"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "move SimplePath instructions to template file and place under module version\ndon't auto-hide config"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Core/Block/Adminhtml/System/Config/Form/SimplepathConfig.php",
                    "diff": "+<?php\n+\n+namespace Amazon\\Core\\Block\\Adminhtml\\System\\Config\\Form;\n+\n+use Magento\\Backend\\Block\\Template\\Context;\n+\n+class SimplepathConfig extends \\Magento\\Config\\Block\\System\\Config\\Form\\Field\n+{\n+\n+ protected $_layout;\n+\n+ /**\n+ * Version constructor.\n+ * @param ModuleListInterface $moduleList\n+ * @param Context $context\n+ * @param array $data\n+ */\n+ public function __construct(\n+ \\Magento\\Framework\\View\\LayoutInterface $layout,\n+ Context $context,\n+ array $data = []\n+ ) {\n+ $this->_layout = $layout;\n+ parent::__construct($context, $data);\n+ }\n+\n+ /**\n+ * @param \\Magento\\Framework\\Data\\Form\\Element\\AbstractElement $element\n+ * @return string\n+ */\n+ public function render(\\Magento\\Framework\\Data\\Form\\Element\\AbstractElement $element)\n+ {\n+ $html = $this->_layout\n+ ->createBlock('Amazon\\Core\\Block\\Adminhtml\\System\\Config\\SimplePathAdmin')\n+ ->setTemplate('Amazon_Core::system/config/simplepath_admin.phtml')\n+ ->toHtml();\n+\n+ return $html;\n+ }\n+\n+}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -351,14 +351,6 @@ class SimplePath\nreturn $baseUrl . 'amazon_core/simplepath/listener?website='.$this->_websiteId.'&store='.$this->_storeId.'&scope='.$this->_scope;\n}\n- /**\n- * Return simplepath URL\n- */\n- public function getSimplepathUrl()\n- {\n- return $this->getEndpointRegister() . '#event/fromSP';\n- }\n-\n/**\n* Return array of form POST params for SimplePath sign up\n*/\n@@ -450,7 +442,7 @@ class SimplePath\n'co' => $co ? $co : 'US',\n'region' => $this->getRegion(),\n'currency' => $this->getConfig('currency/options/default'),\n- 'amazonUrl' => $this->getSimplepathUrl(),\n+ 'amazonUrl' => $this->getEndpointRegister(),\n'pollUrl' => $this->backendUrl->getUrl('amazonsp/simplepath/poll/'),\n'isSecure' => (int) ($this->request->isSecure()),\n'hasOpenssl' => (int) (extension_loaded('openssl')),\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/adminhtml/system.xml",
                    "new_path": "src/Core/etc/adminhtml/system.xml",
                    "diff": "<section id=\"payment\">\n<group id=\"amazon_payment\" translate=\"label\" type=\"text\" sortOrder=\"8\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Amazon Pay</label>\n- <comment><![CDATA[\n-\n- <div id=\"amazon_simplepath\">\n-\n- <!-- @see simplepath_admin.phtml -->\n-\n- <div id=\"simplepath_hint\">You will be registering for a [REGION] account based on the base currency of your shop ([CURRENCY]). For more information, click <a href=\"https://amzn.github.io/amazon-payments-magento-2-plugin/configuration.html#advanced\" target=\"_blank\">here</a>.</div>\n-\n- <span style=\"display:inline-block;padding:1em 0em;\">\n- <button><span>Get started with account registration</span></button>\n- &nbsp; &nbsp;\n- <button><span>My account is ready, I need to connect it to Magento</span></button>\n- </span>\n- <span style=\"display:inline-block;\">\n- &nbsp; or &nbsp;\n- <a href=\"#\" id=\"simplepath-skip\">I've already setup Pay with Amazon, I want to edit my settings</a>\n- </span>\n-\n- <p style=\"color:red;display:none\" id=\"amazon_https_required\">In order to enable automatic account configuration using Amazon's secure key exchange, please turn on secure admin pages in System > Configuration > Web > Use secure URLs in Admin.</p>\n- <p style=\"color:red;display:none\" id=\"amazon_openssl_required\">In order to set keys, the OpenSSL PHP library is required.</p>\n- <p style=\"color:red;display:none\" id=\"amazon_reload\">Updating your config with new keys, please wait...</p>\n-\n- </div>\n-\n- <div id=\"amazon_simplepath_back\" style=\"display:none;margin-bottom:1em;margin-top:-0.5em;\">\n- <a href=\"#\">&laquo; Back</a>\n- </div>\n-\n- ]]></comment>\n- <field id=\"version\" type=\"text\" translate=\"label comment\" sortOrder=\"10\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n+ <field id=\"version\" type=\"text\" translate=\"label comment\" sortOrder=\"9\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<frontend_model>Amazon\\Core\\Block\\Adminhtml\\System\\Config\\Form\\Version</frontend_model>\n</field>\n+ <field id=\"simplepath\" type=\"text\" translate=\"label comment\" sortOrder=\"10\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n+ <frontend_model>Amazon\\Core\\Block\\Adminhtml\\System\\Config\\Form\\SimplepathConfig</frontend_model>\n+ </field>\n<group id=\"general\" translate=\"label\" type=\"text\" sortOrder=\"10\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>General</label>\n<group id=\"credentials\" translate=\"label\" type=\"text\" sortOrder=\"10\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n"
                },
                {
                    "change_type": "DELETE",
                    "old_path": "src/Core/view/adminhtml/layout/adminhtml_system_config_edit.xml",
                    "new_path": null,
                    "diff": "-<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" layout=\"admin-2columns-left\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n- <body>\n- <referenceContainer name=\"js\">\n- <block class=\"Amazon\\Core\\Block\\Adminhtml\\System\\Config\\SimplePathAdmin\" template=\"Amazon_Core::system/config/simplepath_admin.phtml\" cacheable=\"false\" />\n- </referenceContainer>\n- </body>\n-</page>\n\\ No newline at end of file\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "+<br />\n+<div id=\"amazon_simplepath\">\n+\n+ <div id=\"simplepath_hint\">You will be registering for a [REGION] account based on the base currency of your shop ([CURRENCY]). For more information, click <a href=\"https://amzn.github.io/amazon-payments-magento-2-plugin/configuration.html#advanced\" target=\"_blank\">here</a>.</div>\n+\n+ <span style=\"display:inline-block;padding:1em 0em;\">\n+ <button><span>Get started with account registration</span></button>\n+ &nbsp; &nbsp;\n+ <button><span>My account is ready, I need to connect it to Magento</span></button>\n+ </span>\n+ <span style=\"display:inline-block;\">\n+ &nbsp; or &nbsp;\n+ <a href=\"#\" id=\"simplepath-skip\">I've already setup Pay with Amazon, I want to edit my settings</a>\n+ </span>\n+\n+ <p style=\"color:red;display:none\" id=\"amazon_https_required\">In order to enable automatic account configuration using Amazon's secure key exchange, please turn on secure admin pages in System > Configuration > Web > Use secure URLs in Admin.</p>\n+ <p style=\"color:red;display:none\" id=\"amazon_openssl_required\">In order to set keys, the OpenSSL PHP library is required.</p>\n+ <p style=\"color:red;display:none\" id=\"amazon_reload\">Updating your config with new keys, please wait...</p>\n+\n+\n+ <div id=\"json-import\" style=\"display: none;\">\n+ <textarea rows=\"2\" cols=\"15\" placeholder=\"Paste JSON credentials here\"></textarea>\n+ <br />\n+ <button id=\"save-json\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">Save Credentials</button>\n+ </div>\n+\n+</div>\n+\n+<div id=\"amazon_simplepath_back\" style=\"display:none;margin-bottom:1em;margin-top:-0.5em;\">\n+ <a href=\"#\">&laquo; Back</a>\n+</div>\n+\n<script>\nvar AmazonSp = <?php echo $this->getAmazonSpJson(); ?>;\n@@ -20,6 +52,7 @@ require([\"prototype\"], function(){\nvar amazonFields = $$('#payment_'+co+'_amazon_payment .form-list');\nvar amazonSpBack = $('amazon_simplepath_back');\n+\n// Set region/currency hint\nvar hint = $('simplepath_hint').innerHTML;\nhint = hint.replace('[REGION]', AmazonSp.region);\n@@ -28,9 +61,7 @@ require([\"prototype\"], function(){\n// Show/hide fields\nif ($('payment_'+co+'_amazon_payment_general_credentials_merchant_id') != null) {\n- if (!$('payment_'+co+'_amazon_payment_general_credentials_merchant_id').value) {\n- amazonFields.each(Element.hide);\n- } else {\n+ if ($('payment_'+co+'_amazon_payment_general_credentials_merchant_id').value) {\namazonSpBack.show();\namazonSimplepath.hide();\n@@ -78,18 +109,21 @@ require([\"prototype\"], function(){\n// Add \"Save Credentials\"\nvar elJson = $('payment_'+co+'_amazon_payment_general_credentials_credentials_json');\n- if (elJson && $('save-json') == null) {\n+ if (elJson && $('sp-td-json-value') == null) {\n+ // Must create dynamic table to prevent conflict with config tables\n+ var tableJson = new Element('table').update('<tr><td class=\"label\" style=\"width:10%;\">Credentials JSON</td><td class=\"value\" id=\"sp-td-json-value\"></td></tr>');\n+ amazonSimplepath.insert({bottom: tableJson});\n+ $('sp-td-json-value').insert($('json-import').show());\n+\n+\n// Enable Crednetials JSON config field\nvar elJsonCheckDefault = $$('#payment_'+co+'_amazon_payment_general_credentials_credentials_json_inherit:checked');\nif (elJsonCheckDefault && elJsonCheckDefault.length) {\nelJsonCheckDefault[0].click();\n}\n- // Add import textarea\n- amazonSimplepath.insert({bottom: '<br/><br/><textarea id=\"json-import\" rows=\"2\" cols=\"15\" placeholder=\"Paste JSON credentials here\"></textarea>'});\n+ // Show JSON\n- // Add Import/Save button\n- amazonSimplepath.insert({bottom: '<button id=\"save-json\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">Save Credentials</button>'});\n$('save-json').observe('click', function(e) {\ne.stop();\nelJson.value = $('json-import').value;\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Core/Block/Adminhtml/System/Config/Form/SimplepathConfig.php",
                    "diff": "+<?php\n+\n+namespace Amazon\\Core\\Block\\Adminhtml\\System\\Config\\Form;\n+\n+use Magento\\Backend\\Block\\Template\\Context;\n+\n+class SimplepathConfig extends \\Magento\\Config\\Block\\System\\Config\\Form\\Field\n+{\n+\n+ protected $_layout;\n+\n+ /**\n+ * Version constructor.\n+ * @param ModuleListInterface $moduleList\n+ * @param Context $context\n+ * @param array $data\n+ */\n+ public function __construct(\n+ \\Magento\\Framework\\View\\LayoutInterface $layout,\n+ Context $context,\n+ array $data = []\n+ ) {\n+ $this->_layout = $layout;\n+ parent::__construct($context, $data);\n+ }\n+\n+ /**\n+ * @param \\Magento\\Framework\\Data\\Form\\Element\\AbstractElement $element\n+ * @return string\n+ */\n+ public function render(\\Magento\\Framework\\Data\\Form\\Element\\AbstractElement $element)\n+ {\n+ $html = $this->_layout\n+ ->createBlock('Amazon\\Core\\Block\\Adminhtml\\System\\Config\\SimplePathAdmin')\n+ ->setTemplate('Amazon_Core::system/config/simplepath_admin.phtml')\n+ ->toHtml();\n+\n+ return $html;\n+ }\n+\n+}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -351,14 +351,6 @@ class SimplePath\nreturn $baseUrl . 'amazon_core/simplepath/listener?website='.$this->_websiteId.'&store='.$this->_storeId.'&scope='.$this->_scope;\n}\n- /**\n- * Return simplepath URL\n- */\n- public function getSimplepathUrl()\n- {\n- return $this->getEndpointRegister() . '#event/fromSP';\n- }\n-\n/**\n* Return array of form POST params for SimplePath sign up\n*/\n@@ -450,7 +442,7 @@ class SimplePath\n'co' => $co ? $co : 'US',\n'region' => $this->getRegion(),\n'currency' => $this->getConfig('currency/options/default'),\n- 'amazonUrl' => $this->getSimplepathUrl(),\n+ 'amazonUrl' => $this->getEndpointRegister(),\n'pollUrl' => $this->backendUrl->getUrl('amazonsp/simplepath/poll/'),\n'isSecure' => (int) ($this->request->isSecure()),\n'hasOpenssl' => (int) (extension_loaded('openssl')),\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/adminhtml/system.xml",
                    "new_path": "src/Core/etc/adminhtml/system.xml",
                    "diff": "<section id=\"payment\">\n<group id=\"amazon_payment\" translate=\"label\" type=\"text\" sortOrder=\"8\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Amazon Pay</label>\n- <comment><![CDATA[\n-\n- <div id=\"amazon_simplepath\">\n-\n- <!-- @see simplepath_admin.phtml -->\n-\n- <div id=\"simplepath_hint\">You will be registering for a [REGION] account based on the base currency of your shop ([CURRENCY]). For more information, click <a href=\"https://amzn.github.io/amazon-payments-magento-2-plugin/configuration.html#advanced\" target=\"_blank\">here</a>.</div>\n-\n- <span style=\"display:inline-block;padding:1em 0em;\">\n- <button><span>Get started with account registration</span></button>\n- &nbsp; &nbsp;\n- <button><span>My account is ready, I need to connect it to Magento</span></button>\n- </span>\n- <span style=\"display:inline-block;\">\n- &nbsp; or &nbsp;\n- <a href=\"#\" id=\"simplepath-skip\">I've already setup Pay with Amazon, I want to edit my settings</a>\n- </span>\n-\n- <p style=\"color:red;display:none\" id=\"amazon_https_required\">In order to enable automatic account configuration using Amazon's secure key exchange, please turn on secure admin pages in System > Configuration > Web > Use secure URLs in Admin.</p>\n- <p style=\"color:red;display:none\" id=\"amazon_openssl_required\">In order to set keys, the OpenSSL PHP library is required.</p>\n- <p style=\"color:red;display:none\" id=\"amazon_reload\">Updating your config with new keys, please wait...</p>\n-\n- </div>\n-\n- <div id=\"amazon_simplepath_back\" style=\"display:none;margin-bottom:1em;margin-top:-0.5em;\">\n- <a href=\"#\">&laquo; Back</a>\n- </div>\n-\n- ]]></comment>\n- <field id=\"version\" type=\"text\" translate=\"label comment\" sortOrder=\"10\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n+ <field id=\"version\" type=\"text\" translate=\"label comment\" sortOrder=\"9\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<frontend_model>Amazon\\Core\\Block\\Adminhtml\\System\\Config\\Form\\Version</frontend_model>\n</field>\n+ <field id=\"simplepath\" type=\"text\" translate=\"label comment\" sortOrder=\"10\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n+ <frontend_model>Amazon\\Core\\Block\\Adminhtml\\System\\Config\\Form\\SimplepathConfig</frontend_model>\n+ </field>\n<group id=\"general\" translate=\"label\" type=\"text\" sortOrder=\"10\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>General</label>\n<group id=\"credentials\" translate=\"label\" type=\"text\" sortOrder=\"10\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n"
                },
                {
                    "change_type": "DELETE",
                    "old_path": "src/Core/view/adminhtml/layout/adminhtml_system_config_edit.xml",
                    "new_path": null,
                    "diff": "-<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" layout=\"admin-2columns-left\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n- <body>\n- <referenceContainer name=\"js\">\n- <block class=\"Amazon\\Core\\Block\\Adminhtml\\System\\Config\\SimplePathAdmin\" template=\"Amazon_Core::system/config/simplepath_admin.phtml\" cacheable=\"false\" />\n- </referenceContainer>\n- </body>\n-</page>\n\\ No newline at end of file\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "+<br />\n+<div id=\"amazon_simplepath\">\n+\n+ <div id=\"simplepath_hint\">You will be registering for a [REGION] account based on the base currency of your shop ([CURRENCY]). For more information, click <a href=\"https://amzn.github.io/amazon-payments-magento-2-plugin/configuration.html#advanced\" target=\"_blank\">here</a>.</div>\n+\n+ <span style=\"display:inline-block;padding:1em 0em;\">\n+ <button><span>Get started with account registration</span></button>\n+ &nbsp; &nbsp;\n+ <button><span>My account is ready, I need to connect it to Magento</span></button>\n+ </span>\n+ <span style=\"display:inline-block;\">\n+ &nbsp; or &nbsp;\n+ <a href=\"#\" id=\"simplepath-skip\">I've already setup Pay with Amazon, I want to edit my settings</a>\n+ </span>\n+\n+ <p style=\"color:red;display:none\" id=\"amazon_https_required\">In order to enable automatic account configuration using Amazon's secure key exchange, please turn on secure admin pages in System > Configuration > Web > Use secure URLs in Admin.</p>\n+ <p style=\"color:red;display:none\" id=\"amazon_openssl_required\">In order to set keys, the OpenSSL PHP library is required.</p>\n+ <p style=\"color:red;display:none\" id=\"amazon_reload\">Updating your config with new keys, please wait...</p>\n+\n+\n+ <div id=\"json-import\" style=\"display: none;\">\n+ <textarea rows=\"2\" cols=\"15\" placeholder=\"Paste JSON credentials here\"></textarea>\n+ <br />\n+ <button id=\"save-json\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">Save Credentials</button>\n+ </div>\n+\n+</div>\n+\n+<div id=\"amazon_simplepath_back\" style=\"display:none;margin-bottom:1em;margin-top:-0.5em;\">\n+ <a href=\"#\">&laquo; Back</a>\n+</div>\n+\n<script>\nvar AmazonSp = <?php echo $this->getAmazonSpJson(); ?>;\n@@ -20,6 +52,7 @@ require([\"prototype\"], function(){\nvar amazonFields = $$('#payment_'+co+'_amazon_payment .form-list');\nvar amazonSpBack = $('amazon_simplepath_back');\n+\n// Set region/currency hint\nvar hint = $('simplepath_hint').innerHTML;\nhint = hint.replace('[REGION]', AmazonSp.region);\n@@ -28,9 +61,7 @@ require([\"prototype\"], function(){\n// Show/hide fields\nif ($('payment_'+co+'_amazon_payment_general_credentials_merchant_id') != null) {\n- if (!$('payment_'+co+'_amazon_payment_general_credentials_merchant_id').value) {\n- amazonFields.each(Element.hide);\n- } else {\n+ if ($('payment_'+co+'_amazon_payment_general_credentials_merchant_id').value) {\namazonSpBack.show();\namazonSimplepath.hide();\n@@ -78,18 +109,21 @@ require([\"prototype\"], function(){\n// Add \"Save Credentials\"\nvar elJson = $('payment_'+co+'_amazon_payment_general_credentials_credentials_json');\n- if (elJson && $('save-json') == null) {\n+ if (elJson && $('sp-td-json-value') == null) {\n+ // Must create dynamic table to prevent conflict with config tables\n+ var tableJson = new Element('table').update('<tr><td class=\"label\" style=\"width:10%;\">Credentials JSON</td><td class=\"value\" id=\"sp-td-json-value\"></td></tr>');\n+ amazonSimplepath.insert({bottom: tableJson});\n+ $('sp-td-json-value').insert($('json-import').show());\n+\n+\n// Enable Crednetials JSON config field\nvar elJsonCheckDefault = $$('#payment_'+co+'_amazon_payment_general_credentials_credentials_json_inherit:checked');\nif (elJsonCheckDefault && elJsonCheckDefault.length) {\nelJsonCheckDefault[0].click();\n}\n- // Add import textarea\n- amazonSimplepath.insert({bottom: '<br/><br/><textarea id=\"json-import\" rows=\"2\" cols=\"15\" placeholder=\"Paste JSON credentials here\"></textarea>'});\n+ // Show JSON\n- // Add Import/Save button\n- amazonSimplepath.insert({bottom: '<button id=\"save-json\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">Save Credentials</button>'});\n$('save-json').observe('click', function(e) {\ne.stop();\nelJson.value = $('json-import').value;\n"
                }
            ]
        }
    },
    "Row_70": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Update configuration.rst\nMade some updates to clarify where the URL hints come from, and to better align the names of the fields in the admin with the names in the documentation."
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Update configuration.rst\nMade some updates to clarify where the URL hints come from, and to better align the names of the fields in the admin with the names in the documentation."
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "docs/configuration.rst",
                    "new_path": "docs/configuration.rst",
                    "diff": "@@ -31,11 +31,11 @@ Sandbox\n.......\nSandbox mode has been designed to test the **Amazon Pay** service. In sandbox mode the selected payment method is not charged. Refer to the **Amazon Pay** documentation to get more information about the sandbox environment. In general, sandbox mode should be enabled for development and staging environments for testing and always has to be disabled for production environments. Never show the sandbox buttons and widgets to buyers in your live environment.\n-Javascript Origin, Redirect URL, IPN URL\n-........................................\n-Used to display the URLs within Magento 2 that are required by Amazon Pay. Please add this information to your Seller Central account.\n+Allowed Javascript Origins, Allowed Return URLs, IPN URL\n+........................................................\n+These are URLs that are required by Amazon Pay and should be added to your Seller Central account. These URLs are built using the Base URL which can be found under :menuselection:`General --> Web`.\n-* `Javascript Origin, Redirect URL` - Please add this information to your Login with Amazon section of the Seller Central\n+* `Allowed Javascript Origins, Allowed Return URLs` - Please add this information to your Login with Amazon section of the Seller Central\n* `IPN URL` - Please add this information to the field **Merchant URL** at :menuselection:`Settings --> Integration Settings` of the Seller Central\n.. note:: The IPN URL settings for the Sandbox - and Production View differ. Please add the correct value to the environment you are currently transacting on.\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "docs/configuration.rst",
                    "new_path": "docs/configuration.rst",
                    "diff": "@@ -31,11 +31,11 @@ Sandbox\n.......\nSandbox mode has been designed to test the **Amazon Pay** service. In sandbox mode the selected payment method is not charged. Refer to the **Amazon Pay** documentation to get more information about the sandbox environment. In general, sandbox mode should be enabled for development and staging environments for testing and always has to be disabled for production environments. Never show the sandbox buttons and widgets to buyers in your live environment.\n-Javascript Origin, Redirect URL, IPN URL\n-........................................\n-Used to display the URLs within Magento 2 that are required by Amazon Pay. Please add this information to your Seller Central account.\n+Allowed Javascript Origins, Allowed Return URLs, IPN URL\n+........................................................\n+These are URLs that are required by Amazon Pay and should be added to your Seller Central account. These URLs are built using the Base URL which can be found under :menuselection:`General --> Web`.\n-* `Javascript Origin, Redirect URL` - Please add this information to your Login with Amazon section of the Seller Central\n+* `Allowed Javascript Origins, Allowed Return URLs` - Please add this information to your Login with Amazon section of the Seller Central\n* `IPN URL` - Please add this information to the field **Merchant URL** at :menuselection:`Settings --> Integration Settings` of the Seller Central\n.. note:: The IPN URL settings for the Sandbox - and Production View differ. Please add the correct value to the environment you are currently transacting on.\n"
                }
            ]
        }
    },
    "Row_71": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "add unsurported currency check; add JSON validation; add translation wrappers"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "add unsurported currency check; add JSON validation; add translation wrappers"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/System/Config/Form/SimplepathConfig.php",
                    "new_path": "src/Core/Block/Adminhtml/System/Config/Form/SimplepathConfig.php",
                    "diff": "@@ -33,6 +33,7 @@ class SimplepathConfig extends \\Magento\\Config\\Block\\System\\Config\\Form\\Field\n$html = $this->_layout\n->createBlock('Amazon\\Core\\Block\\Adminhtml\\System\\Config\\SimplePathAdmin')\n->setTemplate('Amazon_Core::system/config/simplepath_admin.phtml')\n+ ->setCacheable(false)\n->toHtml();\nreturn $html;\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/System/Config/SimplePathAdmin.php",
                    "new_path": "src/Core/Block/Adminhtml/System/Config/SimplePathAdmin.php",
                    "diff": "@@ -36,6 +36,22 @@ class SimplePathAdmin extends Template\nreturn json_encode($this->simplePath->getJsonAmazonSpConfig());\n}\n+ /**\n+ * Return region\n+ */\n+ function getRegion()\n+ {\n+ return $this->simplePath->getRegion();\n+ }\n+\n+ /**\n+ * Return currency\n+ */\n+ function getCurrency()\n+ {\n+ return $this->simplePath->getCurrency();\n+ }\n+\n/**\n* Render only on Payment Methods page\n*/\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -430,18 +430,36 @@ class SimplePath\nreturn $region ? $region : 'US';\n}\n+ /**\n+ * Return a valid store currency, otherwise return null\n+ */\n+ public function getCurrency()\n+ {\n+ $currency = $this->getConfig('currency/options/default');\n+ return (isset($this->_mapCurrencyRegion[$currency])) ? $currency : null;\n+ }\n+\n+ /**\n+ * Return merchant country\n+ */\n+ public function getCountry()\n+ {\n+ $co = $this->getConfig('paypal/general/merchant_country');\n+ return $co ? $co : 'US';\n+ }\n+\n/**\n* Return array of config for JSON AmazonSp variable.\n*/\npublic function getJsonAmazonSpConfig()\n{\n- $co = $this->getConfig('paypal/general/merchant_country');\n+\nreturn array(\n- 'co' => $co ? $co : 'US',\n+ 'co' => $this->getCountry(),\n'region' => $this->getRegion(),\n- 'currency' => $this->getConfig('currency/options/default'),\n+ 'currency' => $this->getCurrency(),\n'amazonUrl' => $this->getEndpointRegister(),\n'pollUrl' => $this->backendUrl->getUrl('amazonsp/simplepath/poll/'),\n'isSecure' => (int) ($this->request->isSecure()),\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "<br />\n<div id=\"amazon_simplepath\">\n- <div id=\"simplepath_hint\">You will be registering for a [REGION] account based on the base currency of your shop ([CURRENCY]). For more information, click <a href=\"https://amzn.github.io/amazon-payments-magento-2-plugin/configuration.html#advanced\" target=\"_blank\">here</a>.</div>\n+ <?php if (!$this->getCurrency()) : ?>\n+\n+ <div id=\"simplepath_unsported\"><?php echo sprintf(__('An unsupported currency is currently selected. Review our <a href=\"%s\" target=\"_blank\">configuration guide</a> for more information.'), 'https://amzn.github.io/amazon-payments-magento-2-plugin/configuration.html'); ?></div>\n+\n+ <?php else : ?>\n+\n+ <div id=\"simplepath_hint\">\n+ <?php echo sprintf(__('You will be registering for a %s account based on the base currency of your shop (%s). For more information, click <a href=\"%s\" target=\"_blank\">here</a>.'),\n+ $this->getRegion(),\n+ $this->getCurrency(),\n+ 'https://amzn.github.io/amazon-payments-magento-2-plugin/configuration.html#advanced');\n+ ?>\n+ </div>\n<span style=\"display:inline-block;padding:1em 0em;\">\n- <button><span>Get started with account registration</span></button>\n+ <button><span><?php echo __('Get started with account registration'); ?></span></button>\n&nbsp; &nbsp;\n- <button><span>My account is ready, I need to connect it to Magento</span></button>\n+ <button><span><?php echo __('My account is ready, I need to connect it to Magento'); ?></span></button>\n</span>\n<span style=\"display:inline-block;\">\n- &nbsp; or &nbsp;\n- <a href=\"#\" id=\"simplepath-skip\">I've already setup Pay with Amazon, I want to edit my settings</a>\n+ &nbsp; <?php echo __('or'); ?> &nbsp;\n+ <a href=\"#\" id=\"simplepath-skip\"><?php echo __(\"I've already setup Pay with Amazon, I want to edit my settings\"); ?></a>\n</span>\n- <p style=\"color:red;display:none\" id=\"amazon_https_required\">In order to enable automatic account configuration using Amazon's secure key exchange, please turn on secure admin pages in System > Configuration > Web > Use secure URLs in Admin.</p>\n- <p style=\"color:red;display:none\" id=\"amazon_openssl_required\">In order to set keys, the OpenSSL PHP library is required.</p>\n- <p style=\"color:red;display:none\" id=\"amazon_reload\">Updating your config with new keys, please wait...</p>\n+ <p style=\"color:red;display:none\" id=\"amazon_https_required\"><?php echo __(\"In order to enable automatic account configuration using Amazon's secure key exchange, please turn on secure admin pages in System > Configuration > Web > Use secure URLs in Admin.\"); ?></p>\n+ <p style=\"color:red;display:none\" id=\"amazon_reload\"><?php echo __('Updating your config with new keys, please wait...'); ?></p>\n- <div id=\"json-import\" style=\"display: none;\">\n- <textarea rows=\"2\" cols=\"15\" placeholder=\"Paste JSON credentials here\"></textarea>\n+ <div id=\"json-import-wrapper\" style=\"display: none;\">\n+ <textarea rows=\"2\" cols=\"15\" placeholder=\"<?php echo __('Paste JSON credentials here'); ?>\" id=\"json-import\"></textarea>\n<br />\n- <button id=\"save-json\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">Save Credentials</button>\n+ <button id=\"save-json\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"><?php echo __('Save Credentials'); ?></button>\n</div>\n+ <?php endif; ?>\n+\n</div>\n<div id=\"amazon_simplepath_back\" style=\"display:none;margin-bottom:1em;margin-top:-0.5em;\">\n- <a href=\"#\">&laquo; Back</a>\n+ <a href=\"#\">&laquo; <?php echo __('Back'); ?></a>\n</div>\n<script>\n@@ -36,11 +49,6 @@ var AmazonSp = <?php echo $this->getAmazonSpJson(); ?>;\nrequire([\"prototype\"], function(){\n- // Check if SimplePath is supported\n- if (!AmazonSp.region || AmazonSp.region == 'JA') {\n- return;\n- }\n-\n// Country code for ID selectors\nvar co = AmazonSp.co.toLowerCase();\n@@ -52,12 +60,10 @@ require([\"prototype\"], function(){\nvar amazonFields = $$('#payment_'+co+'_amazon_payment .form-list');\nvar amazonSpBack = $('amazon_simplepath_back');\n-\n- // Set region/currency hint\n- var hint = $('simplepath_hint').innerHTML;\n- hint = hint.replace('[REGION]', AmazonSp.region);\n- hint = hint.replace('[CURRENCY]', AmazonSp.currency);\n- $('simplepath_hint').innerHTML = hint;\n+ // Not enabled\n+ if ($('simplepath_hint') == null) {\n+ return;\n+ }\n// Show/hide fields\nif ($('payment_'+co+'_amazon_payment_general_credentials_merchant_id') != null) {\n@@ -111,9 +117,9 @@ require([\"prototype\"], function(){\nvar elJson = $('payment_'+co+'_amazon_payment_general_credentials_credentials_json');\nif (elJson && $('sp-td-json-value') == null) {\n// Must create dynamic table to prevent conflict with config tables\n- var tableJson = new Element('table').update('<tr><td class=\"label\" style=\"width:10%;\">Credentials JSON</td><td class=\"value\" id=\"sp-td-json-value\"></td></tr>');\n+ var tableJson = new Element('table').update('<tr><td class=\"label\" style=\"width:10%;\"><?php echo __('Credentials JSON'); ?></td><td class=\"value\" id=\"sp-td-json-value\"></td></tr>');\namazonSimplepath.insert({bottom: tableJson});\n- $('sp-td-json-value').insert($('json-import').show());\n+ $('sp-td-json-value').insert($('json-import-wrapper').show());\n// Enable Crednetials JSON config field\n@@ -122,11 +128,15 @@ require([\"prototype\"], function(){\nelJsonCheckDefault[0].click();\n}\n- // Show JSON\n-\n+ // Save JSON\n$('save-json').observe('click', function(e) {\ne.stop();\n- elJson.value = $('json-import').value;\n+ var json = $('json-import').value;\n+ if (!json || !json.isJSON()) {\n+ alert('<?php echo __('Valid JSON credentials are required.'); ?>');\n+ return;\n+ }\n+ elJson.value = json;\n$('save').click();\n});\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/System/Config/Form/SimplepathConfig.php",
                    "new_path": "src/Core/Block/Adminhtml/System/Config/Form/SimplepathConfig.php",
                    "diff": "@@ -33,6 +33,7 @@ class SimplepathConfig extends \\Magento\\Config\\Block\\System\\Config\\Form\\Field\n$html = $this->_layout\n->createBlock('Amazon\\Core\\Block\\Adminhtml\\System\\Config\\SimplePathAdmin')\n->setTemplate('Amazon_Core::system/config/simplepath_admin.phtml')\n+ ->setCacheable(false)\n->toHtml();\nreturn $html;\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/System/Config/SimplePathAdmin.php",
                    "new_path": "src/Core/Block/Adminhtml/System/Config/SimplePathAdmin.php",
                    "diff": "@@ -36,6 +36,22 @@ class SimplePathAdmin extends Template\nreturn json_encode($this->simplePath->getJsonAmazonSpConfig());\n}\n+ /**\n+ * Return region\n+ */\n+ function getRegion()\n+ {\n+ return $this->simplePath->getRegion();\n+ }\n+\n+ /**\n+ * Return currency\n+ */\n+ function getCurrency()\n+ {\n+ return $this->simplePath->getCurrency();\n+ }\n+\n/**\n* Render only on Payment Methods page\n*/\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -430,18 +430,36 @@ class SimplePath\nreturn $region ? $region : 'US';\n}\n+ /**\n+ * Return a valid store currency, otherwise return null\n+ */\n+ public function getCurrency()\n+ {\n+ $currency = $this->getConfig('currency/options/default');\n+ return (isset($this->_mapCurrencyRegion[$currency])) ? $currency : null;\n+ }\n+\n+ /**\n+ * Return merchant country\n+ */\n+ public function getCountry()\n+ {\n+ $co = $this->getConfig('paypal/general/merchant_country');\n+ return $co ? $co : 'US';\n+ }\n+\n/**\n* Return array of config for JSON AmazonSp variable.\n*/\npublic function getJsonAmazonSpConfig()\n{\n- $co = $this->getConfig('paypal/general/merchant_country');\n+\nreturn array(\n- 'co' => $co ? $co : 'US',\n+ 'co' => $this->getCountry(),\n'region' => $this->getRegion(),\n- 'currency' => $this->getConfig('currency/options/default'),\n+ 'currency' => $this->getCurrency(),\n'amazonUrl' => $this->getEndpointRegister(),\n'pollUrl' => $this->backendUrl->getUrl('amazonsp/simplepath/poll/'),\n'isSecure' => (int) ($this->request->isSecure()),\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "<br />\n<div id=\"amazon_simplepath\">\n- <div id=\"simplepath_hint\">You will be registering for a [REGION] account based on the base currency of your shop ([CURRENCY]). For more information, click <a href=\"https://amzn.github.io/amazon-payments-magento-2-plugin/configuration.html#advanced\" target=\"_blank\">here</a>.</div>\n+ <?php if (!$this->getCurrency()) : ?>\n+\n+ <div id=\"simplepath_unsported\"><?php echo sprintf(__('An unsupported currency is currently selected. Review our <a href=\"%s\" target=\"_blank\">configuration guide</a> for more information.'), 'https://amzn.github.io/amazon-payments-magento-2-plugin/configuration.html'); ?></div>\n+\n+ <?php else : ?>\n+\n+ <div id=\"simplepath_hint\">\n+ <?php echo sprintf(__('You will be registering for a %s account based on the base currency of your shop (%s). For more information, click <a href=\"%s\" target=\"_blank\">here</a>.'),\n+ $this->getRegion(),\n+ $this->getCurrency(),\n+ 'https://amzn.github.io/amazon-payments-magento-2-plugin/configuration.html#advanced');\n+ ?>\n+ </div>\n<span style=\"display:inline-block;padding:1em 0em;\">\n- <button><span>Get started with account registration</span></button>\n+ <button><span><?php echo __('Get started with account registration'); ?></span></button>\n&nbsp; &nbsp;\n- <button><span>My account is ready, I need to connect it to Magento</span></button>\n+ <button><span><?php echo __('My account is ready, I need to connect it to Magento'); ?></span></button>\n</span>\n<span style=\"display:inline-block;\">\n- &nbsp; or &nbsp;\n- <a href=\"#\" id=\"simplepath-skip\">I've already setup Pay with Amazon, I want to edit my settings</a>\n+ &nbsp; <?php echo __('or'); ?> &nbsp;\n+ <a href=\"#\" id=\"simplepath-skip\"><?php echo __(\"I've already setup Pay with Amazon, I want to edit my settings\"); ?></a>\n</span>\n- <p style=\"color:red;display:none\" id=\"amazon_https_required\">In order to enable automatic account configuration using Amazon's secure key exchange, please turn on secure admin pages in System > Configuration > Web > Use secure URLs in Admin.</p>\n- <p style=\"color:red;display:none\" id=\"amazon_openssl_required\">In order to set keys, the OpenSSL PHP library is required.</p>\n- <p style=\"color:red;display:none\" id=\"amazon_reload\">Updating your config with new keys, please wait...</p>\n+ <p style=\"color:red;display:none\" id=\"amazon_https_required\"><?php echo __(\"In order to enable automatic account configuration using Amazon's secure key exchange, please turn on secure admin pages in System > Configuration > Web > Use secure URLs in Admin.\"); ?></p>\n+ <p style=\"color:red;display:none\" id=\"amazon_reload\"><?php echo __('Updating your config with new keys, please wait...'); ?></p>\n- <div id=\"json-import\" style=\"display: none;\">\n- <textarea rows=\"2\" cols=\"15\" placeholder=\"Paste JSON credentials here\"></textarea>\n+ <div id=\"json-import-wrapper\" style=\"display: none;\">\n+ <textarea rows=\"2\" cols=\"15\" placeholder=\"<?php echo __('Paste JSON credentials here'); ?>\" id=\"json-import\"></textarea>\n<br />\n- <button id=\"save-json\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\">Save Credentials</button>\n+ <button id=\"save-json\" class=\"action-default scalable save primary ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only\"><?php echo __('Save Credentials'); ?></button>\n</div>\n+ <?php endif; ?>\n+\n</div>\n<div id=\"amazon_simplepath_back\" style=\"display:none;margin-bottom:1em;margin-top:-0.5em;\">\n- <a href=\"#\">&laquo; Back</a>\n+ <a href=\"#\">&laquo; <?php echo __('Back'); ?></a>\n</div>\n<script>\n@@ -36,11 +49,6 @@ var AmazonSp = <?php echo $this->getAmazonSpJson(); ?>;\nrequire([\"prototype\"], function(){\n- // Check if SimplePath is supported\n- if (!AmazonSp.region || AmazonSp.region == 'JA') {\n- return;\n- }\n-\n// Country code for ID selectors\nvar co = AmazonSp.co.toLowerCase();\n@@ -52,12 +60,10 @@ require([\"prototype\"], function(){\nvar amazonFields = $$('#payment_'+co+'_amazon_payment .form-list');\nvar amazonSpBack = $('amazon_simplepath_back');\n-\n- // Set region/currency hint\n- var hint = $('simplepath_hint').innerHTML;\n- hint = hint.replace('[REGION]', AmazonSp.region);\n- hint = hint.replace('[CURRENCY]', AmazonSp.currency);\n- $('simplepath_hint').innerHTML = hint;\n+ // Not enabled\n+ if ($('simplepath_hint') == null) {\n+ return;\n+ }\n// Show/hide fields\nif ($('payment_'+co+'_amazon_payment_general_credentials_merchant_id') != null) {\n@@ -111,9 +117,9 @@ require([\"prototype\"], function(){\nvar elJson = $('payment_'+co+'_amazon_payment_general_credentials_credentials_json');\nif (elJson && $('sp-td-json-value') == null) {\n// Must create dynamic table to prevent conflict with config tables\n- var tableJson = new Element('table').update('<tr><td class=\"label\" style=\"width:10%;\">Credentials JSON</td><td class=\"value\" id=\"sp-td-json-value\"></td></tr>');\n+ var tableJson = new Element('table').update('<tr><td class=\"label\" style=\"width:10%;\"><?php echo __('Credentials JSON'); ?></td><td class=\"value\" id=\"sp-td-json-value\"></td></tr>');\namazonSimplepath.insert({bottom: tableJson});\n- $('sp-td-json-value').insert($('json-import').show());\n+ $('sp-td-json-value').insert($('json-import-wrapper').show());\n// Enable Crednetials JSON config field\n@@ -122,11 +128,15 @@ require([\"prototype\"], function(){\nelJsonCheckDefault[0].click();\n}\n- // Show JSON\n-\n+ // Save JSON\n$('save-json').observe('click', function(e) {\ne.stop();\n- elJson.value = $('json-import').value;\n+ var json = $('json-import').value;\n+ if (!json || !json.isJSON()) {\n+ alert('<?php echo __('Valid JSON credentials are required.'); ?>');\n+ return;\n+ }\n+ elJson.value = json;\n$('save').click();\n});\n"
                }
            ]
        }
    },
    "Row_72": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Fixes situation where draft state has been expired but Magento is not aware of it"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Fixes situation where draft state has been expired but Magento is not aware of it"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Model/OrderInformationManagement.php",
                    "new_path": "src/Payment/Model/OrderInformationManagement.php",
                    "diff": "@@ -254,6 +254,8 @@ class OrderInformationManagement implements OrderInformationManagementInterface\n{\n$quote = $this->session->getQuote();\n+ $quote->getExtensionAttributes()->setAmazonOrderReferenceId(null);\n+\nif ($quote->getId()) {\n$quoteLink = $this->quoteLinkFactory->create()->load($quote->getId(), 'quote_id');\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Plugin/ShippingInformationManagement.php",
                    "new_path": "src/Payment/Plugin/ShippingInformationManagement.php",
                    "diff": "@@ -21,6 +21,7 @@ use Closure;\nuse Magento\\Checkout\\Api\\Data\\ShippingInformationInterface;\nuse Magento\\Checkout\\Api\\ShippingInformationManagementInterface;\nuse Magento\\Quote\\Api\\CartRepositoryInterface;\n+use Amazon\\Login\\Helper\\Session as LoginSessionHelper;\nclass ShippingInformationManagement\n{\n@@ -34,10 +35,23 @@ class ShippingInformationManagement\n*/\nprotected $orderInformationManagement;\n+ /**\n+ * @var LoginSessionHelper\n+ */\n+ protected $loginSessionHelper;\n+\n+ /**\n+ * ShippingInformationManagement constructor.\n+ * @param LoginSessionHelper $loginSessionHelper\n+ * @param OrderInformationManagementInterface $orderInformationManagement\n+ * @param CartRepositoryInterface $cartRepository\n+ */\npublic function __construct(\n+ LoginSessionHelper $loginSessionHelper,\nOrderInformationManagementInterface $orderInformationManagement,\nCartRepositoryInterface $cartRepository\n) {\n+ $this->loginSessionHelper = $loginSessionHelper;\n$this->cartRepository = $cartRepository;\n$this->orderInformationManagement = $orderInformationManagement;\n}\n@@ -57,6 +71,12 @@ class ShippingInformationManagement\nreturn $return;\n}\n+ // Add Amazon Order Reference ID only when logged in using Amazon Account\n+ $amazonCustomer = $this->loginSessionHelper->getAmazonCustomer();\n+ if (!$amazonCustomer) {\n+ return $return;\n+ }\n+\n$amazonOrderReferenceId = $quote->getExtensionAttributes()->getAmazonOrderReferenceId();\nif ($amazonOrderReferenceId) {\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Model/OrderInformationManagement.php",
                    "new_path": "src/Payment/Model/OrderInformationManagement.php",
                    "diff": "@@ -254,6 +254,8 @@ class OrderInformationManagement implements OrderInformationManagementInterface\n{\n$quote = $this->session->getQuote();\n+ $quote->getExtensionAttributes()->setAmazonOrderReferenceId(null);\n+\nif ($quote->getId()) {\n$quoteLink = $this->quoteLinkFactory->create()->load($quote->getId(), 'quote_id');\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Plugin/ShippingInformationManagement.php",
                    "new_path": "src/Payment/Plugin/ShippingInformationManagement.php",
                    "diff": "@@ -21,6 +21,7 @@ use Closure;\nuse Magento\\Checkout\\Api\\Data\\ShippingInformationInterface;\nuse Magento\\Checkout\\Api\\ShippingInformationManagementInterface;\nuse Magento\\Quote\\Api\\CartRepositoryInterface;\n+use Amazon\\Login\\Helper\\Session as LoginSessionHelper;\nclass ShippingInformationManagement\n{\n@@ -34,10 +35,23 @@ class ShippingInformationManagement\n*/\nprotected $orderInformationManagement;\n+ /**\n+ * @var LoginSessionHelper\n+ */\n+ protected $loginSessionHelper;\n+\n+ /**\n+ * ShippingInformationManagement constructor.\n+ * @param LoginSessionHelper $loginSessionHelper\n+ * @param OrderInformationManagementInterface $orderInformationManagement\n+ * @param CartRepositoryInterface $cartRepository\n+ */\npublic function __construct(\n+ LoginSessionHelper $loginSessionHelper,\nOrderInformationManagementInterface $orderInformationManagement,\nCartRepositoryInterface $cartRepository\n) {\n+ $this->loginSessionHelper = $loginSessionHelper;\n$this->cartRepository = $cartRepository;\n$this->orderInformationManagement = $orderInformationManagement;\n}\n@@ -57,6 +71,12 @@ class ShippingInformationManagement\nreturn $return;\n}\n+ // Add Amazon Order Reference ID only when logged in using Amazon Account\n+ $amazonCustomer = $this->loginSessionHelper->getAmazonCustomer();\n+ if (!$amazonCustomer) {\n+ return $return;\n+ }\n+\n$amazonOrderReferenceId = $quote->getExtensionAttributes()->getAmazonOrderReferenceId();\nif ($amazonOrderReferenceId) {\n"
                }
            ]
        }
    },
    "Row_73": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "update HTTPS SP help string"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "update HTTPS SP help string"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "<a href=\"#\" id=\"simplepath-skip\"><?php echo __(\"I've already setup Pay with Amazon, I want to edit my settings\"); ?></a>\n</span>\n- <p style=\"color:red;display:none\" id=\"amazon_https_required\"><?php echo __(\"In order to enable automatic account configuration using Amazon's secure key exchange, please turn on secure admin pages in System > Configuration > Web > Use secure URLs in Admin.\"); ?></p>\n+ <p style=\"color:red;display:none\" id=\"amazon_https_required\"><?php echo __(\"In order to enable automatic account configuration using Amazon's secure key exchange, please turn on secure admin pages in General > Web > Use secure URLs in Admin.\"); ?></p>\n<p style=\"color:red;display:none\" id=\"amazon_reload\"><?php echo __('Updating your config with new keys, please wait...'); ?></p>\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "new_path": "src/Core/view/adminhtml/templates/system/config/simplepath_admin.phtml",
                    "diff": "<a href=\"#\" id=\"simplepath-skip\"><?php echo __(\"I've already setup Pay with Amazon, I want to edit my settings\"); ?></a>\n</span>\n- <p style=\"color:red;display:none\" id=\"amazon_https_required\"><?php echo __(\"In order to enable automatic account configuration using Amazon's secure key exchange, please turn on secure admin pages in System > Configuration > Web > Use secure URLs in Admin.\"); ?></p>\n+ <p style=\"color:red;display:none\" id=\"amazon_https_required\"><?php echo __(\"In order to enable automatic account configuration using Amazon's secure key exchange, please turn on secure admin pages in General > Web > Use secure URLs in Admin.\"); ?></p>\n<p style=\"color:red;display:none\" id=\"amazon_reload\"><?php echo __('Updating your config with new keys, please wait...'); ?></p>\n"
                }
            ]
        }
    },
    "Row_74": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Update \"Options\" to Store Scope"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Update \"Options\" to Store Scope"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/adminhtml/system.xml",
                    "new_path": "src/Core/etc/adminhtml/system.xml",
                    "diff": "</group>\n<group id=\"options\" translate=\"label\" type=\"text\" sortOrder=\"20\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Options</label>\n- <field id=\"pwa_enabled\" translate=\"label\" type=\"select\" sortOrder=\"10\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n+ <field id=\"pwa_enabled\" translate=\"label\" type=\"select\" sortOrder=\"10\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Enable Amazon Pay</label>\n<source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n<config_path>payment/amazon_payment/pwa_enabled</config_path>\n</field>\n- <field id=\"lwa_enabled\" translate=\"label\" type=\"select\" sortOrder=\"20\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n+ <field id=\"lwa_enabled\" translate=\"label\" type=\"select\" sortOrder=\"20\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Enable Login with Amazon</label>\n<source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n<config_path>payment/amazon_payment/lwa_enabled</config_path>\n</field>\n- <field id=\"payment_action\" translate=\"label\" type=\"select\" sortOrder=\"30\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n+ <field id=\"payment_action\" translate=\"label\" type=\"select\" sortOrder=\"30\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Payment Action</label>\n<source_model>Amazon\\Core\\Model\\Config\\Source\\PaymentAction</source_model>\n<config_path>payment/amazon_payment/payment_action</config_path>\n</field>\n- <field id=\"authorization_mode\" translate=\"label\" type=\"select\" sortOrder=\"40\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n+ <field id=\"authorization_mode\" translate=\"label\" type=\"select\" sortOrder=\"40\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Authorization Mode</label>\n<source_model>Amazon\\Core\\Model\\Config\\Source\\AuthorizationMode</source_model>\n<config_path>payment/amazon_payment/authorization_mode</config_path>\n<source_model>Amazon\\Core\\Model\\Config\\Source\\UpdateMechanism</source_model>\n<config_path>payment/amazon_payment/update_mechanism</config_path>\n</field>\n- <field id=\"pwa_pp_button_is_visible\" translate=\"label\" type=\"select\" sortOrder=\"60\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n+ <field id=\"pwa_pp_button_is_visible\" translate=\"label\" type=\"select\" sortOrder=\"60\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Amazon Pay button is visible on Product Page</label>\n<source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n<config_path>payment/amazon_payment/pwa_pp_button_is_visible</config_path>\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/adminhtml/system.xml",
                    "new_path": "src/Core/etc/adminhtml/system.xml",
                    "diff": "</group>\n<group id=\"options\" translate=\"label\" type=\"text\" sortOrder=\"20\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Options</label>\n- <field id=\"pwa_enabled\" translate=\"label\" type=\"select\" sortOrder=\"10\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n+ <field id=\"pwa_enabled\" translate=\"label\" type=\"select\" sortOrder=\"10\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Enable Amazon Pay</label>\n<source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n<config_path>payment/amazon_payment/pwa_enabled</config_path>\n</field>\n- <field id=\"lwa_enabled\" translate=\"label\" type=\"select\" sortOrder=\"20\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n+ <field id=\"lwa_enabled\" translate=\"label\" type=\"select\" sortOrder=\"20\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Enable Login with Amazon</label>\n<source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n<config_path>payment/amazon_payment/lwa_enabled</config_path>\n</field>\n- <field id=\"payment_action\" translate=\"label\" type=\"select\" sortOrder=\"30\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n+ <field id=\"payment_action\" translate=\"label\" type=\"select\" sortOrder=\"30\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Payment Action</label>\n<source_model>Amazon\\Core\\Model\\Config\\Source\\PaymentAction</source_model>\n<config_path>payment/amazon_payment/payment_action</config_path>\n</field>\n- <field id=\"authorization_mode\" translate=\"label\" type=\"select\" sortOrder=\"40\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n+ <field id=\"authorization_mode\" translate=\"label\" type=\"select\" sortOrder=\"40\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Authorization Mode</label>\n<source_model>Amazon\\Core\\Model\\Config\\Source\\AuthorizationMode</source_model>\n<config_path>payment/amazon_payment/authorization_mode</config_path>\n<source_model>Amazon\\Core\\Model\\Config\\Source\\UpdateMechanism</source_model>\n<config_path>payment/amazon_payment/update_mechanism</config_path>\n</field>\n- <field id=\"pwa_pp_button_is_visible\" translate=\"label\" type=\"select\" sortOrder=\"60\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n+ <field id=\"pwa_pp_button_is_visible\" translate=\"label\" type=\"select\" sortOrder=\"60\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Amazon Pay button is visible on Product Page</label>\n<source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n<config_path>payment/amazon_payment/pwa_pp_button_is_visible</config_path>\n"
                }
            ]
        }
    },
    "Row_75": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "revert test name change"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "revert test name change"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "composer.json",
                    "new_path": "composer.json",
                    "diff": "{\n- \"name\": \"beargroup/amazon-pay-and-login-magento-2-module\",\n+ \"name\": \"amzn/amazon-pay-and-login-magento-2-module\",\n\"description\": \"Official Magento2 Plugin to integrate with Amazon Pay and Login with Amazon\",\n\"type\": \"magento2-module\",\n\"version\": \"1.1.1\",\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "composer.json",
                    "new_path": "composer.json",
                    "diff": "{\n- \"name\": \"beargroup/amazon-pay-and-login-magento-2-module\",\n+ \"name\": \"amzn/amazon-pay-and-login-magento-2-module\",\n\"description\": \"Official Magento2 Plugin to integrate with Amazon Pay and Login with Amazon\",\n\"type\": \"magento2-module\",\n\"version\": \"1.1.1\",\n"
                }
            ]
        }
    },
    "Row_76": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Update scope to store level"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Update scope to store level"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Login/etc/adminhtml/system.xml",
                    "new_path": "src/Login/etc/adminhtml/system.xml",
                    "diff": "<group id=\"amazon_payment\">\n<group id=\"advanced\">\n<group id=\"frontend\">\n- <field id=\"amazon_login_in_popup\" translate=\"label comment\" type=\"select\" sortOrder=\"60\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n+ <field id=\"amazon_login_in_popup\" translate=\"label comment\" type=\"select\" sortOrder=\"60\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Login with Amazon available in authentication popup</label>\n<source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n<config_path>payment/amazon_payment/amazon_login_in_popup</config_path>\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Login/etc/adminhtml/system.xml",
                    "new_path": "src/Login/etc/adminhtml/system.xml",
                    "diff": "<group id=\"amazon_payment\">\n<group id=\"advanced\">\n<group id=\"frontend\">\n- <field id=\"amazon_login_in_popup\" translate=\"label comment\" type=\"select\" sortOrder=\"60\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"0\">\n+ <field id=\"amazon_login_in_popup\" translate=\"label comment\" type=\"select\" sortOrder=\"60\" showInDefault=\"1\" showInWebsite=\"1\" showInStore=\"1\">\n<label>Login with Amazon available in authentication popup</label>\n<source_model>Magento\\Config\\Model\\Config\\Source\\Yesno</source_model>\n<config_path>payment/amazon_payment/amazon_login_in_popup</config_path>\n"
                }
            ]
        }
    },
    "Row_77": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "temporary fix to display the correct version"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "temporary fix to display the correct version"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/System/Config/Form/Version.php",
                    "new_path": "src/Core/Block/Adminhtml/System/Config/Form/Version.php",
                    "diff": "@@ -49,11 +49,14 @@ class Version extends \\Magento\\Config\\Block\\System\\Config\\Form\\Field\n*/\nprotected function getVersion($module)\n{\n+ /*\n$version = $this->_moduleList->getOne($module);\nif ($version && isset($version['setup_version'])) {\nreturn $version['setup_version'];\n} else {\nreturn __('--');\n}\n+ */\n+ return \"1.1.2\";\n}\n}\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/System/Config/Form/Version.php",
                    "new_path": "src/Core/Block/Adminhtml/System/Config/Form/Version.php",
                    "diff": "@@ -49,11 +49,14 @@ class Version extends \\Magento\\Config\\Block\\System\\Config\\Form\\Field\n*/\nprotected function getVersion($module)\n{\n+ /*\n$version = $this->_moduleList->getOne($module);\nif ($version && isset($version['setup_version'])) {\nreturn $version['setup_version'];\n} else {\nreturn __('--');\n}\n+ */\n+ return \"1.1.2\";\n}\n}\n"
                }
            ]
        }
    },
    "Row_78": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "change order of redirectURL evaluation"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "change order of redirectURL evaluation"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Login/Model/Customer/Account/Redirect.php",
                    "new_path": "src/Login/Model/Customer/Account/Redirect.php",
                    "diff": "@@ -72,10 +72,10 @@ class Redirect extends BaseRedirect\n$afterAmazonAuthUrl = $this->customerUrl->getAccountUrl();\n- if ($this->customerSession->getAfterAmazonAuthUrl()) {\n- $afterAmazonAuthUrl = $this->customerSession->getAfterAmazonAuthUrl();\n- } elseif ($this->checkoutSession->getQuote() && (int)$this->checkoutSession->getQuote()->getItemsCount() > 0) {\n+ if ($this->checkoutSession->getQuote() && (int)$this->checkoutSession->getQuote()->getItemsCount() > 0) {\n$afterAmazonAuthUrl = $this->url->getUrl('checkout');\n+ } elseif ($this->customerSession->getAfterAmazonAuthUrl()) {\n+ $afterAmazonAuthUrl = $this->customerSession->getAfterAmazonAuthUrl();\n}\n$result->setUrl($afterAmazonAuthUrl);\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Login/Model/Customer/Account/Redirect.php",
                    "new_path": "src/Login/Model/Customer/Account/Redirect.php",
                    "diff": "@@ -72,10 +72,10 @@ class Redirect extends BaseRedirect\n$afterAmazonAuthUrl = $this->customerUrl->getAccountUrl();\n- if ($this->customerSession->getAfterAmazonAuthUrl()) {\n- $afterAmazonAuthUrl = $this->customerSession->getAfterAmazonAuthUrl();\n- } elseif ($this->checkoutSession->getQuote() && (int)$this->checkoutSession->getQuote()->getItemsCount() > 0) {\n+ if ($this->checkoutSession->getQuote() && (int)$this->checkoutSession->getQuote()->getItemsCount() > 0) {\n$afterAmazonAuthUrl = $this->url->getUrl('checkout');\n+ } elseif ($this->customerSession->getAfterAmazonAuthUrl()) {\n+ $afterAmazonAuthUrl = $this->customerSession->getAfterAmazonAuthUrl();\n}\n$result->setUrl($afterAmazonAuthUrl);\n"
                }
            ]
        }
    },
    "Row_79": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "fix for button hidden on cart page"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "fix for button hidden on cart page"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Block/Minicart/Button.php",
                    "new_path": "src/Payment/Block/Minicart/Button.php",
                    "diff": "@@ -24,6 +24,8 @@ use Magento\\Framework\\View\\Element\\Template;\nuse Magento\\Catalog\\Block\\ShortcutInterface;\nuse Magento\\Framework\\Locale\\ResolverInterface;\nuse Magento\\Framework\\View\\Element\\Template\\Context;\n+use Magento\\Framework\\App\\Request\\Http;\n+use Psr\\Log\\LoggerInterface;\n/**\n* Class Button\n@@ -34,6 +36,8 @@ class Button extends Template implements ShortcutInterface\nconst CART_BUTTON_ELEMENT_INDEX = 'add_to_cart_selector';\n+ const CART_PAGE_IDENTIFIER = 'checkout_cart_index';\n+\n/**\n* @var bool\n*/\n@@ -63,6 +67,12 @@ class Button extends Template implements ShortcutInterface\n* @var AmazonCoreHelper\n*/\nprivate $coreHelper;\n+ private $request;\n+\n+ /**\n+ * @var LoggerInterface\n+ */\n+ protected $logger;\n/**\n* Button constructor.\n@@ -81,6 +91,8 @@ class Button extends Template implements ShortcutInterface\nSession $session,\nMethodInterface $payment,\nAmazonCoreHelper $coreHelper,\n+ Http $request,\n+ LoggerInterface $logger,\narray $data = []\n) {\nparent::__construct($context, $data);\n@@ -90,6 +102,8 @@ class Button extends Template implements ShortcutInterface\n$this->payment = $payment;\n$this->session = $session;\n$this->coreHelper = $coreHelper;\n+ $this->request = $request;\n+ $this->logger = $logger;\n}\n/**\n@@ -97,9 +111,13 @@ class Button extends Template implements ShortcutInterface\n*/\nprotected function shouldRender()\n{\n- return $this->coreHelper->isPayButtonAvailableInMinicart()\n+ $this->logger->info($this->request->getFullActionName().\", on cart: \".$this->_isOnCartPage());\n+ return $this->_isOnCartPage()\n+ || (\n+ $this->coreHelper->isPayButtonAvailableInMinicart()\n&& $this->payment->isAvailable($this->session->getQuote())\n- && $this->isMiniCart;\n+ && $this->isMiniCart\n+ );\n}\n/**\n@@ -114,6 +132,10 @@ class Button extends Template implements ShortcutInterface\nreturn parent::_toHtml();\n}\n+ protected function _isOnCartPage(){\n+ return $this->request->getFullActionName() == 'checkout_cart_index';\n+ }\n+\n/**\n* @return string\n*/\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Block/Minicart/Button.php",
                    "new_path": "src/Payment/Block/Minicart/Button.php",
                    "diff": "@@ -24,6 +24,8 @@ use Magento\\Framework\\View\\Element\\Template;\nuse Magento\\Catalog\\Block\\ShortcutInterface;\nuse Magento\\Framework\\Locale\\ResolverInterface;\nuse Magento\\Framework\\View\\Element\\Template\\Context;\n+use Magento\\Framework\\App\\Request\\Http;\n+use Psr\\Log\\LoggerInterface;\n/**\n* Class Button\n@@ -34,6 +36,8 @@ class Button extends Template implements ShortcutInterface\nconst CART_BUTTON_ELEMENT_INDEX = 'add_to_cart_selector';\n+ const CART_PAGE_IDENTIFIER = 'checkout_cart_index';\n+\n/**\n* @var bool\n*/\n@@ -63,6 +67,12 @@ class Button extends Template implements ShortcutInterface\n* @var AmazonCoreHelper\n*/\nprivate $coreHelper;\n+ private $request;\n+\n+ /**\n+ * @var LoggerInterface\n+ */\n+ protected $logger;\n/**\n* Button constructor.\n@@ -81,6 +91,8 @@ class Button extends Template implements ShortcutInterface\nSession $session,\nMethodInterface $payment,\nAmazonCoreHelper $coreHelper,\n+ Http $request,\n+ LoggerInterface $logger,\narray $data = []\n) {\nparent::__construct($context, $data);\n@@ -90,6 +102,8 @@ class Button extends Template implements ShortcutInterface\n$this->payment = $payment;\n$this->session = $session;\n$this->coreHelper = $coreHelper;\n+ $this->request = $request;\n+ $this->logger = $logger;\n}\n/**\n@@ -97,9 +111,13 @@ class Button extends Template implements ShortcutInterface\n*/\nprotected function shouldRender()\n{\n- return $this->coreHelper->isPayButtonAvailableInMinicart()\n+ $this->logger->info($this->request->getFullActionName().\", on cart: \".$this->_isOnCartPage());\n+ return $this->_isOnCartPage()\n+ || (\n+ $this->coreHelper->isPayButtonAvailableInMinicart()\n&& $this->payment->isAvailable($this->session->getQuote())\n- && $this->isMiniCart;\n+ && $this->isMiniCart\n+ );\n}\n/**\n@@ -114,6 +132,10 @@ class Button extends Template implements ShortcutInterface\nreturn parent::_toHtml();\n}\n+ protected function _isOnCartPage(){\n+ return $this->request->getFullActionName() == 'checkout_cart_index';\n+ }\n+\n/**\n* @return string\n*/\n"
                }
            ]
        }
    },
    "Row_80": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "only display button on cart, if quote is available"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "only display button on cart, if quote is available"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Block/Minicart/Button.php",
                    "new_path": "src/Payment/Block/Minicart/Button.php",
                    "diff": "@@ -107,8 +107,9 @@ class Button extends Template implements ShortcutInterface\n*/\nprotected function shouldRender()\n{\n- return $this->_isOnCartPage()\n- || (\n+ return ( $this->_isOnCartPage()\n+ && $this->payment->isAvailable($this->session->getQuote())\n+ ) || (\n$this->coreHelper->isPayButtonAvailableInMinicart()\n&& $this->payment->isAvailable($this->session->getQuote())\n&& $this->isMiniCart\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Block/Minicart/Button.php",
                    "new_path": "src/Payment/Block/Minicart/Button.php",
                    "diff": "@@ -107,8 +107,9 @@ class Button extends Template implements ShortcutInterface\n*/\nprotected function shouldRender()\n{\n- return $this->_isOnCartPage()\n- || (\n+ return ( $this->_isOnCartPage()\n+ && $this->payment->isAvailable($this->session->getQuote())\n+ ) || (\n$this->coreHelper->isPayButtonAvailableInMinicart()\n&& $this->payment->isAvailable($this->session->getQuote())\n&& $this->isMiniCart\n"
                }
            ]
        }
    },
    "Row_81": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "added comment for future releases"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "added comment for future releases"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Helper/Data.php",
                    "new_path": "src/Payment/Helper/Data.php",
                    "diff": "@@ -45,6 +45,7 @@ class Data extends AbstractHelper\n*/\npublic function getModuleVersion()\n{\n+ // there is a similar function here: src/Core/Block/Adminhtml/System/Config/Form/Version.php, please update in parallel\nreturn \"1.1.2\";\n}\n}\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Helper/Data.php",
                    "new_path": "src/Payment/Helper/Data.php",
                    "diff": "@@ -45,6 +45,7 @@ class Data extends AbstractHelper\n*/\npublic function getModuleVersion()\n{\n+ // there is a similar function here: src/Core/Block/Adminhtml/System/Config/Form/Version.php, please update in parallel\nreturn \"1.1.2\";\n}\n}\n"
                }
            ]
        }
    },
    "Row_82": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Fix compiliation dependency injections"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Fix compiliation dependency injections"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/System/Config/Form/SimplepathConfig.php",
                    "new_path": "src/Core/Block/Adminhtml/System/Config/Form/SimplepathConfig.php",
                    "diff": "@@ -7,23 +7,6 @@ use Magento\\Backend\\Block\\Template\\Context;\nclass SimplepathConfig extends \\Magento\\Config\\Block\\System\\Config\\Form\\Field\n{\n- protected $_layout;\n-\n- /**\n- * Version constructor.\n- * @param ModuleListInterface $moduleList\n- * @param Context $context\n- * @param array $data\n- */\n- public function __construct(\n- \\Magento\\Framework\\View\\LayoutInterface $layout,\n- Context $context,\n- array $data = []\n- ) {\n- $this->_layout = $layout;\n- parent::__construct($context, $data);\n- }\n-\n/**\n* @param \\Magento\\Framework\\Data\\Form\\Element\\AbstractElement $element\n* @return string\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/System/Config/SimplePathAdmin.php",
                    "new_path": "src/Core/Block/Adminhtml/System/Config/SimplePathAdmin.php",
                    "diff": "@@ -19,13 +19,11 @@ class SimplePathAdmin extends Template\nfunction __construct(\nContext $context,\n- SimplePath $simplePath,\n- \\Magento\\Framework\\UrlInterface $urlInterface\n+ SimplePath $simplePath\n)\n{\nparent::__construct($context);\n$this->simplePath = $simplePath;\n- $this->urlInterface = $urlInterface;\n}\n/**\n@@ -51,12 +49,4 @@ class SimplePathAdmin extends Template\n{\nreturn $this->simplePath->getCurrency();\n}\n-\n- /**\n- * Render only on Payment Methods page\n- */\n- protected function _toHtml()\n- {\n- return strpos($this->urlInterface->getCurrentUrl(), 'payment') === FALSE ? '' : parent::_toHtml();\n- }\n}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -7,6 +7,8 @@ use Magento\\Framework\\App\\State;\nuse Magento\\Framework\\App\\Cache\\Type\\Config as CacheTypeConfig;\nuse Magento\\Backend\\Model\\UrlInterface;\nuse Magento\\Payment\\Helper\\Formatter;\n+use \\phpseclib\\Crypt\\RSA;\n+use \\phpseclib\\Crypt\\AES;\nclass SimplePath\n{\n@@ -50,9 +52,7 @@ class SimplePath\n\\Magento\\Store\\Model\\StoreManagerInterface $storeManager,\n\\Magento\\Backend\\Model\\UrlInterface $backendUrl,\n\\Magento\\Paypal\\Model\\Config $paypal,\n- \\Psr\\Log\\LoggerInterface $logger,\n- \\phpseclib\\Crypt\\RSA $rsa,\n- \\phpseclib\\Crypt\\AES $aes\n+ \\Psr\\Log\\LoggerInterface $logger\n)\n{\n@@ -69,8 +69,6 @@ class SimplePath\n$this->storeManager = $storeManager;\n$this->paypal = $paypal;\n$this->logger = $logger;\n- $this->rsa = $rsa;\n- $this->aes = $aes;\n$this->messageManager = $messageManager;\n@@ -140,7 +138,8 @@ class SimplePath\n*/\npublic function generateKeys()\n{\n- $keys = $this->rsa->createKey(2048);\n+ $rsa = new RSA();\n+ $keys = $rsa->createKey(2048);\n$this->config\n->saveConfig(self::CONFIG_XML_PATH_PUBLIC_KEY, $keys['publickey'], 'default', 0)\n@@ -261,10 +260,11 @@ class SimplePath\n$finalPayload = @mcrypt_decrypt(MCRYPT_RIJNDAEL_128, $decryptedKey, base64_decode($payload->encryptedPayload), MCRYPT_MODE_CBC, base64_decode($payload->iv));\n} else {\n// This library uses openssl_decrypt, which may have issues\n- $this->aes->setKey($decryptedKey);\n- $this->aes->setIV(base64_decode($payload->iv, true));\n- $this->aes->setKeyLength(128);\n- $finalPayload = $this->aes->decrypt($payload->encryptedPayload);\n+ $aes = new AES();\n+ $aes->setKey($decryptedKey);\n+ $aes->setIV(base64_decode($payload->iv, true));\n+ $aes->setKeyLength(128);\n+ $finalPayload = $aes->decrypt($payload->encryptedPayload);\n}\n// Remove binary characters\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/System/Config/Form/SimplepathConfig.php",
                    "new_path": "src/Core/Block/Adminhtml/System/Config/Form/SimplepathConfig.php",
                    "diff": "@@ -7,23 +7,6 @@ use Magento\\Backend\\Block\\Template\\Context;\nclass SimplepathConfig extends \\Magento\\Config\\Block\\System\\Config\\Form\\Field\n{\n- protected $_layout;\n-\n- /**\n- * Version constructor.\n- * @param ModuleListInterface $moduleList\n- * @param Context $context\n- * @param array $data\n- */\n- public function __construct(\n- \\Magento\\Framework\\View\\LayoutInterface $layout,\n- Context $context,\n- array $data = []\n- ) {\n- $this->_layout = $layout;\n- parent::__construct($context, $data);\n- }\n-\n/**\n* @param \\Magento\\Framework\\Data\\Form\\Element\\AbstractElement $element\n* @return string\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/System/Config/SimplePathAdmin.php",
                    "new_path": "src/Core/Block/Adminhtml/System/Config/SimplePathAdmin.php",
                    "diff": "@@ -19,13 +19,11 @@ class SimplePathAdmin extends Template\nfunction __construct(\nContext $context,\n- SimplePath $simplePath,\n- \\Magento\\Framework\\UrlInterface $urlInterface\n+ SimplePath $simplePath\n)\n{\nparent::__construct($context);\n$this->simplePath = $simplePath;\n- $this->urlInterface = $urlInterface;\n}\n/**\n@@ -51,12 +49,4 @@ class SimplePathAdmin extends Template\n{\nreturn $this->simplePath->getCurrency();\n}\n-\n- /**\n- * Render only on Payment Methods page\n- */\n- protected function _toHtml()\n- {\n- return strpos($this->urlInterface->getCurrentUrl(), 'payment') === FALSE ? '' : parent::_toHtml();\n- }\n}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -7,6 +7,8 @@ use Magento\\Framework\\App\\State;\nuse Magento\\Framework\\App\\Cache\\Type\\Config as CacheTypeConfig;\nuse Magento\\Backend\\Model\\UrlInterface;\nuse Magento\\Payment\\Helper\\Formatter;\n+use \\phpseclib\\Crypt\\RSA;\n+use \\phpseclib\\Crypt\\AES;\nclass SimplePath\n{\n@@ -50,9 +52,7 @@ class SimplePath\n\\Magento\\Store\\Model\\StoreManagerInterface $storeManager,\n\\Magento\\Backend\\Model\\UrlInterface $backendUrl,\n\\Magento\\Paypal\\Model\\Config $paypal,\n- \\Psr\\Log\\LoggerInterface $logger,\n- \\phpseclib\\Crypt\\RSA $rsa,\n- \\phpseclib\\Crypt\\AES $aes\n+ \\Psr\\Log\\LoggerInterface $logger\n)\n{\n@@ -69,8 +69,6 @@ class SimplePath\n$this->storeManager = $storeManager;\n$this->paypal = $paypal;\n$this->logger = $logger;\n- $this->rsa = $rsa;\n- $this->aes = $aes;\n$this->messageManager = $messageManager;\n@@ -140,7 +138,8 @@ class SimplePath\n*/\npublic function generateKeys()\n{\n- $keys = $this->rsa->createKey(2048);\n+ $rsa = new RSA();\n+ $keys = $rsa->createKey(2048);\n$this->config\n->saveConfig(self::CONFIG_XML_PATH_PUBLIC_KEY, $keys['publickey'], 'default', 0)\n@@ -261,10 +260,11 @@ class SimplePath\n$finalPayload = @mcrypt_decrypt(MCRYPT_RIJNDAEL_128, $decryptedKey, base64_decode($payload->encryptedPayload), MCRYPT_MODE_CBC, base64_decode($payload->iv));\n} else {\n// This library uses openssl_decrypt, which may have issues\n- $this->aes->setKey($decryptedKey);\n- $this->aes->setIV(base64_decode($payload->iv, true));\n- $this->aes->setKeyLength(128);\n- $finalPayload = $this->aes->decrypt($payload->encryptedPayload);\n+ $aes = new AES();\n+ $aes->setKey($decryptedKey);\n+ $aes->setIV(base64_decode($payload->iv, true));\n+ $aes->setKeyLength(128);\n+ $finalPayload = $aes->decrypt($payload->encryptedPayload);\n}\n// Remove binary characters\n"
                }
            ]
        }
    },
    "Row_83": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "updated documentaton for installation and un-install"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "updated documentaton for installation and un-install"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "docs/installation.rst",
                    "new_path": "docs/installation.rst",
                    "diff": "@@ -20,11 +20,13 @@ In case you are not able or willing to use the web installation, you can install\n* Sign in to your server via SSH\n* `cd` into you Magento installation directory\n-* Install the extension via composer: `composer require amzn/amazon-payments-magento-2-plugin:^1.1.1`\n+* Install the extension via composer: `composer require amzn/amazon-payments-magento-2-plugin:^1.1.3`\n* Enable the extension: `php bin/magento module:enable Amazon_Core Amazon_Login Amazon_Payment`\n* Upgrade the Magento installation: `php bin/magento setup:upgrade`\n* Follow any advice the upgrade routine provides\n+.. note:: `composer require amzn/amazon-payments-magento-2-plugin:^1.1.3` will always instal the most current, non-breaking, Amazon Pay extension for you, when you run an update. To fix it to a specifix version, please remove the `^`\n+\nIn production mode, you will also have to compile the code and the dependency injection (DI) configuration and deploy static content\n* Compile code and DI: `php bin/magento setup:di:compile`\n@@ -34,4 +36,10 @@ In production mode, you will also have to compile the code and the dependency in\n.. note::\nPlease also have a look at the official Magento documentation for command line configuration: http://devdocs.magento.com/guides/v2.1/config-guide/cli/config-cli-subcommands.html\n+Un-install Method\n+--------------------------\n+If there is a need ti disable the module, you can either disable Amazon Pay and Login with Amazon in the extension settings. This will temove all customer facing parts.\n+\n+To completely disable the module, please run `php bin/magento module:disable Amazon_Core Amazon_Login Amazon_Payment`\n+To completely uninstall the module using composer, please run `composer remove amzn/amazon-payments-magento-2-plugin`\n\\ No newline at end of file\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "docs/installation.rst",
                    "new_path": "docs/installation.rst",
                    "diff": "@@ -20,11 +20,13 @@ In case you are not able or willing to use the web installation, you can install\n* Sign in to your server via SSH\n* `cd` into you Magento installation directory\n-* Install the extension via composer: `composer require amzn/amazon-payments-magento-2-plugin:^1.1.1`\n+* Install the extension via composer: `composer require amzn/amazon-payments-magento-2-plugin:^1.1.3`\n* Enable the extension: `php bin/magento module:enable Amazon_Core Amazon_Login Amazon_Payment`\n* Upgrade the Magento installation: `php bin/magento setup:upgrade`\n* Follow any advice the upgrade routine provides\n+.. note:: `composer require amzn/amazon-payments-magento-2-plugin:^1.1.3` will always instal the most current, non-breaking, Amazon Pay extension for you, when you run an update. To fix it to a specifix version, please remove the `^`\n+\nIn production mode, you will also have to compile the code and the dependency injection (DI) configuration and deploy static content\n* Compile code and DI: `php bin/magento setup:di:compile`\n@@ -34,4 +36,10 @@ In production mode, you will also have to compile the code and the dependency in\n.. note::\nPlease also have a look at the official Magento documentation for command line configuration: http://devdocs.magento.com/guides/v2.1/config-guide/cli/config-cli-subcommands.html\n+Un-install Method\n+--------------------------\n+If there is a need ti disable the module, you can either disable Amazon Pay and Login with Amazon in the extension settings. This will temove all customer facing parts.\n+\n+To completely disable the module, please run `php bin/magento module:disable Amazon_Core Amazon_Login Amazon_Payment`\n+To completely uninstall the module using composer, please run `composer remove amzn/amazon-payments-magento-2-plugin`\n\\ No newline at end of file\n"
                }
            ]
        }
    },
    "Row_84": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Update SimplePathAdmin.php\n$this->simplePath is not defined"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Update SimplePathAdmin.php\n$this->simplePath is not defined"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/System/Config/SimplePathAdmin.php",
                    "new_path": "src/Core/Block/Adminhtml/System/Config/SimplePathAdmin.php",
                    "diff": "namespace Amazon\\Core\\Block\\Adminhtml\\System\\Config;\n-use Amazon\\Core\\Helper\\CategoryExclusion;\n-use Amazon\\Core\\Helper\\Data;\n-use Amazon\\Core\\Model\\Config\\SimplePath;\n-use Magento\\Customer\\Model\\Url;\n-use Magento\\Framework\\View\\Element\\Template;\n-use Magento\\Framework\\View\\Element\\Template\\Context;\n-\n-class SimplePathAdmin extends Template\n+class SimplePathAdmin extends \\Magento\\Framework\\View\\Element\\Template\n{\n/**\n- * @var \\Amazon\\Core\\Model\\Config\\simplePath\n+ * @var SimplePath\n*/\n- protected $_model;\n-\n+ protected $simplePath;\n+ /**\n+ * SimplePathAdmin constructor.\n+ * @param \\Magento\\Framework\\View\\Element\\Template\\Context $context\n+ * @param \\Amazon\\Core\\Model\\Config\\SimplePath $simplePath\n+ * @param array $data\n+ */\nfunction __construct(\n- Context $context,\n- SimplePath $simplePath\n+ \\Magento\\Framework\\View\\Element\\Template\\Context $context,\n+ \\Amazon\\Core\\Model\\Config\\SimplePath $simplePath,\n+ array $data = []\n)\n{\n- parent::__construct($context);\n+ parent::__construct($context, $data);\n$this->simplePath = $simplePath;\n}\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Block/Adminhtml/System/Config/SimplePathAdmin.php",
                    "new_path": "src/Core/Block/Adminhtml/System/Config/SimplePathAdmin.php",
                    "diff": "namespace Amazon\\Core\\Block\\Adminhtml\\System\\Config;\n-use Amazon\\Core\\Helper\\CategoryExclusion;\n-use Amazon\\Core\\Helper\\Data;\n-use Amazon\\Core\\Model\\Config\\SimplePath;\n-use Magento\\Customer\\Model\\Url;\n-use Magento\\Framework\\View\\Element\\Template;\n-use Magento\\Framework\\View\\Element\\Template\\Context;\n-\n-class SimplePathAdmin extends Template\n+class SimplePathAdmin extends \\Magento\\Framework\\View\\Element\\Template\n{\n/**\n- * @var \\Amazon\\Core\\Model\\Config\\simplePath\n+ * @var SimplePath\n*/\n- protected $_model;\n-\n+ protected $simplePath;\n+ /**\n+ * SimplePathAdmin constructor.\n+ * @param \\Magento\\Framework\\View\\Element\\Template\\Context $context\n+ * @param \\Amazon\\Core\\Model\\Config\\SimplePath $simplePath\n+ * @param array $data\n+ */\nfunction __construct(\n- Context $context,\n- SimplePath $simplePath\n+ \\Magento\\Framework\\View\\Element\\Template\\Context $context,\n+ \\Amazon\\Core\\Model\\Config\\SimplePath $simplePath,\n+ array $data = []\n)\n{\n- parent::__construct($context);\n+ parent::__construct($context, $data);\n$this->simplePath = $simplePath;\n}\n"
                }
            ]
        }
    },
    "Row_85": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Disabling mini-cart shortcut now leaves shopping cart shortcut untouched"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Disabling mini-cart shortcut now leaves shopping cart shortcut untouched"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Block/Minicart/Button.php",
                    "new_path": "src/Payment/Block/Minicart/Button.php",
                    "diff": "@@ -97,6 +97,10 @@ class Button extends Template implements ShortcutInterface\n*/\nprotected function shouldRender()\n{\n+ if ($this->getIsCart() && $this->payment->isAvailable($this->session->getQuote())) {\n+ return true;\n+ }\n+\nreturn $this->coreHelper->isPayButtonAvailableInMinicart()\n&& $this->payment->isAvailable($this->session->getQuote())\n&& $this->isMiniCart;\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Observer/AddAmazonButton.php",
                    "new_path": "src/Payment/Observer/AddAmazonButton.php",
                    "diff": "@@ -68,6 +68,9 @@ class AddAmazonButton implements ObserverInterface\n)->setShowOrPosition(\n$observer->getEvent()->getOrPosition()\n);\n+\n+ $shortcut->setIsCart(get_class($shortcutButtons) == 'Magento\\Checkout\\Block\\QuoteShortcutButtons');\n+\n$shortcutButtons->addShortcut($shortcut);\n}\n}\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Block/Minicart/Button.php",
                    "new_path": "src/Payment/Block/Minicart/Button.php",
                    "diff": "@@ -97,6 +97,10 @@ class Button extends Template implements ShortcutInterface\n*/\nprotected function shouldRender()\n{\n+ if ($this->getIsCart() && $this->payment->isAvailable($this->session->getQuote())) {\n+ return true;\n+ }\n+\nreturn $this->coreHelper->isPayButtonAvailableInMinicart()\n&& $this->payment->isAvailable($this->session->getQuote())\n&& $this->isMiniCart;\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Observer/AddAmazonButton.php",
                    "new_path": "src/Payment/Observer/AddAmazonButton.php",
                    "diff": "@@ -68,6 +68,9 @@ class AddAmazonButton implements ObserverInterface\n)->setShowOrPosition(\n$observer->getEvent()->getOrPosition()\n);\n+\n+ $shortcut->setIsCart(get_class($shortcutButtons) == 'Magento\\Checkout\\Block\\QuoteShortcutButtons');\n+\n$shortcutButtons->addShortcut($shortcut);\n}\n}\n"
                }
            ]
        }
    },
    "Row_86": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "removed Amazon Pay mark from landing pages"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "removed Amazon Pay mark from landing pages"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/frontend/layout/default.xml",
                    "new_path": "src/Core/view/frontend/layout/default.xml",
                    "diff": "-->\n<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n<body>\n- <referenceContainer name=\"before.body.end\">\n- <container name=\"amazon_payments_footer\" as=\"amazon-payments-footer\" label=\"Amazon Pay Footer\" htmlTag=\"div\" htmlClass=\"footer amazon-payments-footer\" before=\"-\">\n- <block class=\"Amazon\\Core\\Block\\Config\" name=\"amazon_payments_mark\" template=\"Amazon_Core::amazon_payments_mark.phtml\"/>\n- </container>\n- </referenceContainer>\n<referenceContainer name=\"content\">\n<block class=\"Amazon\\Core\\Block\\Config\" name=\"amazon_config\" template=\"Amazon_Core::config.phtml\"/>\n</referenceContainer>\n"
                },
                {
                    "change_type": "DELETE",
                    "old_path": "src/Core/view/frontend/web/css/source/_module.less",
                    "new_path": null,
                    "diff": "-/**\n- * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\").\n- * You may not use this file except in compliance with the License.\n- * A copy of the License is located at\n- *\n- * http://aws.amazon.com/apache2.0\n- *\n- * or in the \"license\" file accompanying this file. This file is distributed\n- * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n- * express or implied. See the License for the specific language governing\n- * permissions and limitations under the License.\n- */\n-\n-\n-//\n-// Variables\n-// _____________________________________________\n-\n-// Image variables\n-@amazon-payments-mark-image-path: 'https://images-na.ssl-images-amazon.com/images/G/01/Iris3_US/en_US/inca/images/';\n-@amazon-payments-mark-small-dimensions: '37x23';\n-@amazon-payments-mark-large-dimensions: '60x38';\n-\n-// Links styling\n-@footer-links-separator-border-color: @color-gray-light4;\n-\n-// mark image mixin\n-.amazon-payments-mark-images(@resolution: x1) {\n- // black 60x38 image is default\n- // add class of _grad to choose gradient version\n- // add class of _white to choose white version\n- // add class of _small to choose 37x23\n- // add multiple of the above classes to combine\n-\n- width: 60px;\n- height: 38px;\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-large-dimensions}-black-@{resolution}.png');\n-\n- &._grad {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-large-dimensions}-blackgrad-@{resolution}.png');\n- }\n-\n- &._white {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-large-dimensions}-white-@{resolution}.png');\n-\n- &._grad {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-large-dimensions}-whitegrad-@{resolution}.png');\n- }\n- }\n-\n- &._small {\n- width: 37px;\n- height: 23px;\n- & when (@resolution = x1) {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-small-dimensions}-black-@{resolution}-TEMP.png');\n- &._grad {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-small-dimensions}-blackgrad-@{resolution}-TEMP.png');\n- }\n- &._white {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-small-dimensions}-white-@{resolution}-TEMP.png');\n- &._grad {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-small-dimensions}-whitegrad-@{resolution}-TEMP.png');\n- }\n- }\n- } // end when x1\n- & when (@resolution = x2) {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-small-dimensions}-black-@{resolution}.png');\n- &._grad {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-small-dimensions}-blackgrad-@{resolution}.png');\n- }\n- &._white {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-small-dimensions}-white-@{resolution}.png');\n- &._grad {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-small-dimensions}-whitegrad-@{resolution}.png');\n- }\n- }\n- } // end when x2\n- }\n-}\n-\n-& when (@media-common = true) {\n-\n- .amazon-payments-footer .amazon-payments-mark-container {\n- text-align: center;\n- .lib-css(background, @footer__background-color);\n- border-top: 1px solid @footer-links-separator-border-color;\n- padding: 8px @layout__width-xs-indent 6px @layout__width-xs-indent;\n- line-height: 1;\n-\n- @media all and (min-width: @screen__m) {\n- margin: 0;\n- padding: 10px 0;\n- border-top: none;\n- }\n- }\n-\n- .amazon-payments-mark {\n- background-color: transparent;\n- background-repeat: no-repeat;\n- background-position: center center;\n- display: inline-block;\n-\n- .text {\n- &:extend(.abs-visually-hidden all);\n- }\n-\n- .amazon-payments-mark-images();\n-\n- @media only screen and (-webkit-min-device-pixel-ratio: 1.5),\n- only screen and (min--moz-device-pixel-ratio: 1.5),\n- only screen and (-o-min-device-pixel-ratio: 3/2),\n- only screen and (min-device-pixel-ratio: 1.5),\n- only screen and (min-resolution: 192dpi) {\n-\n- background-size: 100%;\n- .amazon-payments-mark-images(x2);\n- }\n- }\n-}\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/view/frontend/layout/default.xml",
                    "new_path": "src/Core/view/frontend/layout/default.xml",
                    "diff": "-->\n<page xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"urn:magento:framework:View/Layout/etc/page_configuration.xsd\">\n<body>\n- <referenceContainer name=\"before.body.end\">\n- <container name=\"amazon_payments_footer\" as=\"amazon-payments-footer\" label=\"Amazon Pay Footer\" htmlTag=\"div\" htmlClass=\"footer amazon-payments-footer\" before=\"-\">\n- <block class=\"Amazon\\Core\\Block\\Config\" name=\"amazon_payments_mark\" template=\"Amazon_Core::amazon_payments_mark.phtml\"/>\n- </container>\n- </referenceContainer>\n<referenceContainer name=\"content\">\n<block class=\"Amazon\\Core\\Block\\Config\" name=\"amazon_config\" template=\"Amazon_Core::config.phtml\"/>\n</referenceContainer>\n"
                },
                {
                    "change_type": "DELETE",
                    "old_path": "src/Core/view/frontend/web/css/source/_module.less",
                    "new_path": null,
                    "diff": "-/**\n- * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\").\n- * You may not use this file except in compliance with the License.\n- * A copy of the License is located at\n- *\n- * http://aws.amazon.com/apache2.0\n- *\n- * or in the \"license\" file accompanying this file. This file is distributed\n- * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n- * express or implied. See the License for the specific language governing\n- * permissions and limitations under the License.\n- */\n-\n-\n-//\n-// Variables\n-// _____________________________________________\n-\n-// Image variables\n-@amazon-payments-mark-image-path: 'https://images-na.ssl-images-amazon.com/images/G/01/Iris3_US/en_US/inca/images/';\n-@amazon-payments-mark-small-dimensions: '37x23';\n-@amazon-payments-mark-large-dimensions: '60x38';\n-\n-// Links styling\n-@footer-links-separator-border-color: @color-gray-light4;\n-\n-// mark image mixin\n-.amazon-payments-mark-images(@resolution: x1) {\n- // black 60x38 image is default\n- // add class of _grad to choose gradient version\n- // add class of _white to choose white version\n- // add class of _small to choose 37x23\n- // add multiple of the above classes to combine\n-\n- width: 60px;\n- height: 38px;\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-large-dimensions}-black-@{resolution}.png');\n-\n- &._grad {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-large-dimensions}-blackgrad-@{resolution}.png');\n- }\n-\n- &._white {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-large-dimensions}-white-@{resolution}.png');\n-\n- &._grad {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-large-dimensions}-whitegrad-@{resolution}.png');\n- }\n- }\n-\n- &._small {\n- width: 37px;\n- height: 23px;\n- & when (@resolution = x1) {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-small-dimensions}-black-@{resolution}-TEMP.png');\n- &._grad {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-small-dimensions}-blackgrad-@{resolution}-TEMP.png');\n- }\n- &._white {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-small-dimensions}-white-@{resolution}-TEMP.png');\n- &._grad {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-small-dimensions}-whitegrad-@{resolution}-TEMP.png');\n- }\n- }\n- } // end when x1\n- & when (@resolution = x2) {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-small-dimensions}-black-@{resolution}.png');\n- &._grad {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-small-dimensions}-blackgrad-@{resolution}.png');\n- }\n- &._white {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-small-dimensions}-white-@{resolution}.png');\n- &._grad {\n- background-image: url('@{amazon-payments-mark-image-path}@{amazon-payments-mark-small-dimensions}-whitegrad-@{resolution}.png');\n- }\n- }\n- } // end when x2\n- }\n-}\n-\n-& when (@media-common = true) {\n-\n- .amazon-payments-footer .amazon-payments-mark-container {\n- text-align: center;\n- .lib-css(background, @footer__background-color);\n- border-top: 1px solid @footer-links-separator-border-color;\n- padding: 8px @layout__width-xs-indent 6px @layout__width-xs-indent;\n- line-height: 1;\n-\n- @media all and (min-width: @screen__m) {\n- margin: 0;\n- padding: 10px 0;\n- border-top: none;\n- }\n- }\n-\n- .amazon-payments-mark {\n- background-color: transparent;\n- background-repeat: no-repeat;\n- background-position: center center;\n- display: inline-block;\n-\n- .text {\n- &:extend(.abs-visually-hidden all);\n- }\n-\n- .amazon-payments-mark-images();\n-\n- @media only screen and (-webkit-min-device-pixel-ratio: 1.5),\n- only screen and (min--moz-device-pixel-ratio: 1.5),\n- only screen and (-o-min-device-pixel-ratio: 3/2),\n- only screen and (min-device-pixel-ratio: 1.5),\n- only screen and (min-resolution: 192dpi) {\n-\n- background-size: 100%;\n- .amazon-payments-mark-images(x2);\n- }\n- }\n-}\n"
                }
            ]
        }
    },
    "Row_87": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "loading animation on redirect"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "loading animation on redirect"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Login/view/frontend/web/js/amazon-redirect.js",
                    "new_path": "src/Login/view/frontend/web/js/amazon-redirect.js",
                    "diff": "@@ -18,9 +18,10 @@ define([\n'amazonCore',\n'amazonPaymentConfig',\n'amazonCsrf',\n+ 'mage/loader',\n'jquery/ui',\n'mage/cookies'\n-], function ($, amazonCore, amazonPaymentConfig, amazonCsrf) {\n+], function ($, amazonCore, amazonPaymentConfig, amazonCsrf, loader) {\n\"use strict\";\nvar self;\n@@ -33,6 +34,9 @@ define([\n_create: function () {\nself = this;\n+ // start the loading animation. WIll en on redirect, no explicit stop here\n+ $('body').trigger('processStart');\n+\n//verify nonce first\nthis.redirectOnInvalidState();\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Login/view/frontend/web/js/amazon-redirect.js",
                    "new_path": "src/Login/view/frontend/web/js/amazon-redirect.js",
                    "diff": "@@ -18,9 +18,10 @@ define([\n'amazonCore',\n'amazonPaymentConfig',\n'amazonCsrf',\n+ 'mage/loader',\n'jquery/ui',\n'mage/cookies'\n-], function ($, amazonCore, amazonPaymentConfig, amazonCsrf) {\n+], function ($, amazonCore, amazonPaymentConfig, amazonCsrf, loader) {\n\"use strict\";\nvar self;\n@@ -33,6 +34,9 @@ define([\n_create: function () {\nself = this;\n+ // start the loading animation. WIll en on redirect, no explicit stop here\n+ $('body').trigger('processStart');\n+\n//verify nonce first\nthis.redirectOnInvalidState();\n"
                }
            ]
        }
    },
    "Row_88": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "change payment setup scripts to work with cloud edition (preliminary)"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "change payment setup scripts to work with cloud edition (preliminary)"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "DELETE",
                    "old_path": "src/Payment/Setup/Table/AmazonPendingRefund.php",
                    "new_path": null,
                    "diff": "-<?php\n-/**\n- * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\").\n- * You may not use this file except in compliance with the License.\n- * A copy of the License is located at\n- *\n- * http://aws.amazon.com/apache2.0\n- *\n- * or in the \"license\" file accompanying this file. This file is distributed\n- * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n- * express or implied. See the License for the specific language governing\n- * permissions and limitations under the License.\n- */\n-namespace Amazon\\Payment\\Setup\\Table;\n-\n-use Amazon\\Payment\\Api\\Data\\PendingRefundInterface;\n-use Magento\\Framework\\App\\ResourceConnection;\n-use Magento\\Framework\\DB\\Adapter\\AdapterInterface;\n-use Magento\\Framework\\DB\\Ddl\\Table;\n-\n-class AmazonPendingRefund\n-{\n- const TABLE_NAME = 'amazon_pending_refund';\n-\n- /**\n- * @var AdapterInterface\n- */\n- protected $connection;\n-\n- /**\n- * @var ResourceConnection\n- */\n- protected $resource;\n-\n- /**\n- * @param AdapterInterface $connection\n- * @param ResourceConnection $resource\n- */\n- public function __construct(AdapterInterface $connection, ResourceConnection $resource)\n- {\n- $this->connection = $connection;\n- $this->resource = $resource;\n- }\n-\n- /**\n- * @return void\n- */\n- public function createTable()\n- {\n- $this->connection->dropTable(static::TABLE_NAME);\n- $this->doCreateTable();\n- }\n-\n- /**\n- * @throws \\Zend_Db_Exception\n- * @return void\n- */\n- protected function doCreateTable()\n- {\n- $table = $this->connection->newTable($this->resource->getTableName(static::TABLE_NAME));\n-\n- $table\n- ->addColumn(\n- PendingRefundInterface::ID,\n- Table::TYPE_INTEGER,\n- null,\n- [\n- 'identity' => true,\n- 'unsigned' => true,\n- 'primary' => true,\n- 'nullable' => false\n- ]\n- )\n- ->addColumn(\n- PendingRefundInterface::REFUND_ID,\n- Table::TYPE_TEXT,\n- 255,\n- [\n- 'nullable' => false\n- ]\n- )\n- ->addColumn(\n- PendingRefundInterface::CREATED_AT,\n- Table::TYPE_DATETIME,\n- null,\n- [\n- 'nullable' => false\n- ]\n- )\n- ->addColumn(\n- PendingRefundInterface::ORDER_ID,\n- Table::TYPE_INTEGER,\n- null,\n- [\n- 'unsigned' => true,\n- 'nullable' => false,\n- 'comment' => 'order id'\n- ]\n- )\n- ->addColumn(\n- PendingRefundInterface::PAYMENT_ID,\n- Table::TYPE_INTEGER,\n- null,\n- [\n- 'unsigned' => true,\n- 'nullable' => false,\n- 'comment' => 'payment id'\n- ]\n- );\n-\n- $this->connection->createTable($table);\n- $this->addTableIndexes();\n- }\n-\n- /**\n- * @return void\n- */\n- protected function addTableIndexes()\n- {\n- $pendingColumns = [\n- PendingRefundInterface::ORDER_ID,\n- PendingRefundInterface::PAYMENT_ID,\n- PendingRefundInterface::REFUND_ID,\n- ];\n-\n- $indexName = $this->connection->getIndexName(\n- $this->resource->getTableName(static::TABLE_NAME),\n- $pendingColumns,\n- AdapterInterface::INDEX_TYPE_UNIQUE\n- );\n-\n- $this->connection->addIndex(\n- $this->resource->getTableName(static::TABLE_NAME),\n- $indexName,\n- $pendingColumns,\n- AdapterInterface::INDEX_TYPE_UNIQUE\n- );\n- }\n-}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Setup/UpgradeData.php",
                    "new_path": "src/Payment/Setup/UpgradeData.php",
                    "diff": "*/\nnamespace Amazon\\Payment\\Setup;\n-use Magento\\Eav\\Setup\\EavSetup;\n+use Magento\\Eav\\Setup\\EavSetupFactory;\nuse Magento\\Framework\\Exception\\LocalizedException;\nuse Magento\\Framework\\Setup\\ModuleContextInterface;\nuse Magento\\Framework\\Setup\\ModuleDataSetupInterface;\n@@ -24,22 +24,22 @@ use Magento\\Framework\\Setup\\UpgradeDataInterface;\nclass UpgradeData implements UpgradeDataInterface\n{\n/**\n- * @var EavSetup\n+ * @var EavSetupFactory\n*/\n- private $eavSetup;\n+ private $eavSetupFactory;\n/**\n- * @param EavSetup $eavSetup\n+ * @param EavSetupFactory $eavSetupFactory\n*/\n- public function __construct(EavSetup $eavSetup)\n+ public function __construct(EavSetupFactory $eavSetupFactory)\n{\n- $this->eavSetup = $eavSetup;\n+ $this->eavSetupFactory = $eavSetupFactory;\n}\npublic function upgrade(ModuleDataSetupInterface $setup, ModuleContextInterface $context)\n{\nif (version_compare($context->getVersion(), '1.5.0', '<')) {\n- $this->upgradeAddressStreetMultiline();\n+ $this->upgradeAddressStreetMultiline($setup);\n}\n}\n@@ -47,16 +47,17 @@ class UpgradeData implements UpgradeDataInterface\n* @throws LocalizedException\n* @return void\n*/\n- private function upgradeAddressStreetMultiline()\n+ private function upgradeAddressStreetMultiline(ModuleDataSetupInterface $setup)\n{\n- $row = $this->eavSetup->getAttribute('customer_address', 'street', 'multiline_count');\n+ $eavSetup = $this->eavSetupFactory->create(['setup' => $setup]);\n+ $row = $eavSetup->getAttribute('customer_address', 'street', 'multiline_count');\nif ($row === false || ! is_numeric($row)) {\nthrow new LocalizedException(__('Could not find the \"multiline_count\" config of the \"street\" Customer address attribute.'));\n}\nif ($row < 3) {\n- $this->eavSetup->updateAttribute('customer_address', 'street', 'multiline_count', 3);\n+ $eavSetup->updateAttribute('customer_address', 'street', 'multiline_count', 3);\n}\n}\n}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Setup/UpgradeSchema.php",
                    "new_path": "src/Payment/Setup/UpgradeSchema.php",
                    "diff": "@@ -21,7 +21,6 @@ use Amazon\\Payment\\Model\\ResourceModel\\OrderLink;\nuse Amazon\\Payment\\Model\\ResourceModel\\PendingAuthorization;\nuse Amazon\\Payment\\Model\\ResourceModel\\PendingCapture;\nuse Amazon\\Payment\\Model\\ResourceModel\\QuoteLink;\n-use Amazon\\Payment\\Setup\\Table\\AmazonPendingRefundFactory;\nuse Magento\\Eav\\Setup\\EavSetup;\nuse Magento\\Framework\\App\\ObjectManager;\nuse Magento\\Framework\\DB\\Adapter\\AdapterInterface;\n@@ -34,18 +33,8 @@ use Magento\\Sales\\Api\\Data\\TransactionInterface;\nclass UpgradeSchema implements UpgradeSchemaInterface\n{\n- /**\n- * @var AmazonPendingRefundFactory\n- */\n- private $amazonPendingRefundTableFactory;\n- /**\n- * @param AmazonPendingRefundFactory $amazonPendingRefundFactory\n- */\n- public function __construct(EavSetup $eavSetup, AmazonPendingRefundFactory $amazonPendingRefundFactory)\n- {\n- $this->amazonPendingRefundTableFactory = $amazonPendingRefundFactory;\n- }\n+ const PENDING_REFUND_TABLE_NAME = 'amazon_pending_refund';\npublic function upgrade(SchemaSetupInterface $setup, ModuleContextInterface $context)\n{\n@@ -201,9 +190,7 @@ class UpgradeSchema implements UpgradeSchemaInterface\n}\nif (version_compare($context->getVersion(), '1.9.0', '<')) {\n- $this->amazonPendingRefundTableFactory\n- ->create(['connection' => $setup->getConnection()])\n- ->createTable();\n+ $this->createPendingRefundTable($setup);\n}\nif (version_compare($context->getVersion(), '1.10.0', '<')) {\n@@ -385,4 +372,80 @@ class UpgradeSchema implements UpgradeSchemaInterface\nAdapterInterface::INDEX_TYPE_UNIQUE\n);\n}\n+\n+ private function createPendingRefundTable(SchemaSetupInterface $setup) {\n+ $setup->getConnection()->dropTable(static::PENDING_REFUND_TABLE_NAME);\n+\n+ $table = $setup->getConnection()->newTable($setup->getTable(static::PENDING_REFUND_TABLE_NAME));\n+\n+ $table\n+ ->addColumn(\n+ PendingRefundInterface::ID,\n+ Table::TYPE_INTEGER,\n+ null,\n+ [\n+ 'identity' => true,\n+ 'unsigned' => true,\n+ 'primary' => true,\n+ 'nullable' => false\n+ ]\n+ )\n+ ->addColumn(\n+ PendingRefundInterface::REFUND_ID,\n+ Table::TYPE_TEXT,\n+ 255,\n+ [\n+ 'nullable' => false\n+ ]\n+ )\n+ ->addColumn(\n+ PendingRefundInterface::CREATED_AT,\n+ Table::TYPE_DATETIME,\n+ null,\n+ [\n+ 'nullable' => false\n+ ]\n+ )\n+ ->addColumn(\n+ PendingRefundInterface::ORDER_ID,\n+ Table::TYPE_INTEGER,\n+ null,\n+ [\n+ 'unsigned' => true,\n+ 'nullable' => false,\n+ 'comment' => 'order id'\n+ ]\n+ )\n+ ->addColumn(\n+ PendingRefundInterface::PAYMENT_ID,\n+ Table::TYPE_INTEGER,\n+ null,\n+ [\n+ 'unsigned' => true,\n+ 'nullable' => false,\n+ 'comment' => 'payment id'\n+ ]\n+ );\n+\n+ $setup->getConnection()->createTable($table);\n+\n+ $pendingColumns = [\n+ PendingRefundInterface::ORDER_ID,\n+ PendingRefundInterface::PAYMENT_ID,\n+ PendingRefundInterface::REFUND_ID,\n+ ];\n+\n+ $indexName = $setup->getConnection()->getIndexName(\n+ $setup->getTable(static::PENDING_REFUND_TABLE_NAME),\n+ $pendingColumns,\n+ AdapterInterface::INDEX_TYPE_UNIQUE\n+ );\n+\n+ $setup->getConnection()->addIndex(\n+ $setup->getTable(static::PENDING_REFUND_TABLE_NAME),\n+ $indexName,\n+ $pendingColumns,\n+ AdapterInterface::INDEX_TYPE_UNIQUE\n+ );\n+ }\n}\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "DELETE",
                    "old_path": "src/Payment/Setup/Table/AmazonPendingRefund.php",
                    "new_path": null,
                    "diff": "-<?php\n-/**\n- * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n- *\n- * Licensed under the Apache License, Version 2.0 (the \"License\").\n- * You may not use this file except in compliance with the License.\n- * A copy of the License is located at\n- *\n- * http://aws.amazon.com/apache2.0\n- *\n- * or in the \"license\" file accompanying this file. This file is distributed\n- * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n- * express or implied. See the License for the specific language governing\n- * permissions and limitations under the License.\n- */\n-namespace Amazon\\Payment\\Setup\\Table;\n-\n-use Amazon\\Payment\\Api\\Data\\PendingRefundInterface;\n-use Magento\\Framework\\App\\ResourceConnection;\n-use Magento\\Framework\\DB\\Adapter\\AdapterInterface;\n-use Magento\\Framework\\DB\\Ddl\\Table;\n-\n-class AmazonPendingRefund\n-{\n- const TABLE_NAME = 'amazon_pending_refund';\n-\n- /**\n- * @var AdapterInterface\n- */\n- protected $connection;\n-\n- /**\n- * @var ResourceConnection\n- */\n- protected $resource;\n-\n- /**\n- * @param AdapterInterface $connection\n- * @param ResourceConnection $resource\n- */\n- public function __construct(AdapterInterface $connection, ResourceConnection $resource)\n- {\n- $this->connection = $connection;\n- $this->resource = $resource;\n- }\n-\n- /**\n- * @return void\n- */\n- public function createTable()\n- {\n- $this->connection->dropTable(static::TABLE_NAME);\n- $this->doCreateTable();\n- }\n-\n- /**\n- * @throws \\Zend_Db_Exception\n- * @return void\n- */\n- protected function doCreateTable()\n- {\n- $table = $this->connection->newTable($this->resource->getTableName(static::TABLE_NAME));\n-\n- $table\n- ->addColumn(\n- PendingRefundInterface::ID,\n- Table::TYPE_INTEGER,\n- null,\n- [\n- 'identity' => true,\n- 'unsigned' => true,\n- 'primary' => true,\n- 'nullable' => false\n- ]\n- )\n- ->addColumn(\n- PendingRefundInterface::REFUND_ID,\n- Table::TYPE_TEXT,\n- 255,\n- [\n- 'nullable' => false\n- ]\n- )\n- ->addColumn(\n- PendingRefundInterface::CREATED_AT,\n- Table::TYPE_DATETIME,\n- null,\n- [\n- 'nullable' => false\n- ]\n- )\n- ->addColumn(\n- PendingRefundInterface::ORDER_ID,\n- Table::TYPE_INTEGER,\n- null,\n- [\n- 'unsigned' => true,\n- 'nullable' => false,\n- 'comment' => 'order id'\n- ]\n- )\n- ->addColumn(\n- PendingRefundInterface::PAYMENT_ID,\n- Table::TYPE_INTEGER,\n- null,\n- [\n- 'unsigned' => true,\n- 'nullable' => false,\n- 'comment' => 'payment id'\n- ]\n- );\n-\n- $this->connection->createTable($table);\n- $this->addTableIndexes();\n- }\n-\n- /**\n- * @return void\n- */\n- protected function addTableIndexes()\n- {\n- $pendingColumns = [\n- PendingRefundInterface::ORDER_ID,\n- PendingRefundInterface::PAYMENT_ID,\n- PendingRefundInterface::REFUND_ID,\n- ];\n-\n- $indexName = $this->connection->getIndexName(\n- $this->resource->getTableName(static::TABLE_NAME),\n- $pendingColumns,\n- AdapterInterface::INDEX_TYPE_UNIQUE\n- );\n-\n- $this->connection->addIndex(\n- $this->resource->getTableName(static::TABLE_NAME),\n- $indexName,\n- $pendingColumns,\n- AdapterInterface::INDEX_TYPE_UNIQUE\n- );\n- }\n-}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Setup/UpgradeData.php",
                    "new_path": "src/Payment/Setup/UpgradeData.php",
                    "diff": "*/\nnamespace Amazon\\Payment\\Setup;\n-use Magento\\Eav\\Setup\\EavSetup;\n+use Magento\\Eav\\Setup\\EavSetupFactory;\nuse Magento\\Framework\\Exception\\LocalizedException;\nuse Magento\\Framework\\Setup\\ModuleContextInterface;\nuse Magento\\Framework\\Setup\\ModuleDataSetupInterface;\n@@ -24,22 +24,22 @@ use Magento\\Framework\\Setup\\UpgradeDataInterface;\nclass UpgradeData implements UpgradeDataInterface\n{\n/**\n- * @var EavSetup\n+ * @var EavSetupFactory\n*/\n- private $eavSetup;\n+ private $eavSetupFactory;\n/**\n- * @param EavSetup $eavSetup\n+ * @param EavSetupFactory $eavSetupFactory\n*/\n- public function __construct(EavSetup $eavSetup)\n+ public function __construct(EavSetupFactory $eavSetupFactory)\n{\n- $this->eavSetup = $eavSetup;\n+ $this->eavSetupFactory = $eavSetupFactory;\n}\npublic function upgrade(ModuleDataSetupInterface $setup, ModuleContextInterface $context)\n{\nif (version_compare($context->getVersion(), '1.5.0', '<')) {\n- $this->upgradeAddressStreetMultiline();\n+ $this->upgradeAddressStreetMultiline($setup);\n}\n}\n@@ -47,16 +47,17 @@ class UpgradeData implements UpgradeDataInterface\n* @throws LocalizedException\n* @return void\n*/\n- private function upgradeAddressStreetMultiline()\n+ private function upgradeAddressStreetMultiline(ModuleDataSetupInterface $setup)\n{\n- $row = $this->eavSetup->getAttribute('customer_address', 'street', 'multiline_count');\n+ $eavSetup = $this->eavSetupFactory->create(['setup' => $setup]);\n+ $row = $eavSetup->getAttribute('customer_address', 'street', 'multiline_count');\nif ($row === false || ! is_numeric($row)) {\nthrow new LocalizedException(__('Could not find the \"multiline_count\" config of the \"street\" Customer address attribute.'));\n}\nif ($row < 3) {\n- $this->eavSetup->updateAttribute('customer_address', 'street', 'multiline_count', 3);\n+ $eavSetup->updateAttribute('customer_address', 'street', 'multiline_count', 3);\n}\n}\n}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Setup/UpgradeSchema.php",
                    "new_path": "src/Payment/Setup/UpgradeSchema.php",
                    "diff": "@@ -21,7 +21,6 @@ use Amazon\\Payment\\Model\\ResourceModel\\OrderLink;\nuse Amazon\\Payment\\Model\\ResourceModel\\PendingAuthorization;\nuse Amazon\\Payment\\Model\\ResourceModel\\PendingCapture;\nuse Amazon\\Payment\\Model\\ResourceModel\\QuoteLink;\n-use Amazon\\Payment\\Setup\\Table\\AmazonPendingRefundFactory;\nuse Magento\\Eav\\Setup\\EavSetup;\nuse Magento\\Framework\\App\\ObjectManager;\nuse Magento\\Framework\\DB\\Adapter\\AdapterInterface;\n@@ -34,18 +33,8 @@ use Magento\\Sales\\Api\\Data\\TransactionInterface;\nclass UpgradeSchema implements UpgradeSchemaInterface\n{\n- /**\n- * @var AmazonPendingRefundFactory\n- */\n- private $amazonPendingRefundTableFactory;\n- /**\n- * @param AmazonPendingRefundFactory $amazonPendingRefundFactory\n- */\n- public function __construct(EavSetup $eavSetup, AmazonPendingRefundFactory $amazonPendingRefundFactory)\n- {\n- $this->amazonPendingRefundTableFactory = $amazonPendingRefundFactory;\n- }\n+ const PENDING_REFUND_TABLE_NAME = 'amazon_pending_refund';\npublic function upgrade(SchemaSetupInterface $setup, ModuleContextInterface $context)\n{\n@@ -201,9 +190,7 @@ class UpgradeSchema implements UpgradeSchemaInterface\n}\nif (version_compare($context->getVersion(), '1.9.0', '<')) {\n- $this->amazonPendingRefundTableFactory\n- ->create(['connection' => $setup->getConnection()])\n- ->createTable();\n+ $this->createPendingRefundTable($setup);\n}\nif (version_compare($context->getVersion(), '1.10.0', '<')) {\n@@ -385,4 +372,80 @@ class UpgradeSchema implements UpgradeSchemaInterface\nAdapterInterface::INDEX_TYPE_UNIQUE\n);\n}\n+\n+ private function createPendingRefundTable(SchemaSetupInterface $setup) {\n+ $setup->getConnection()->dropTable(static::PENDING_REFUND_TABLE_NAME);\n+\n+ $table = $setup->getConnection()->newTable($setup->getTable(static::PENDING_REFUND_TABLE_NAME));\n+\n+ $table\n+ ->addColumn(\n+ PendingRefundInterface::ID,\n+ Table::TYPE_INTEGER,\n+ null,\n+ [\n+ 'identity' => true,\n+ 'unsigned' => true,\n+ 'primary' => true,\n+ 'nullable' => false\n+ ]\n+ )\n+ ->addColumn(\n+ PendingRefundInterface::REFUND_ID,\n+ Table::TYPE_TEXT,\n+ 255,\n+ [\n+ 'nullable' => false\n+ ]\n+ )\n+ ->addColumn(\n+ PendingRefundInterface::CREATED_AT,\n+ Table::TYPE_DATETIME,\n+ null,\n+ [\n+ 'nullable' => false\n+ ]\n+ )\n+ ->addColumn(\n+ PendingRefundInterface::ORDER_ID,\n+ Table::TYPE_INTEGER,\n+ null,\n+ [\n+ 'unsigned' => true,\n+ 'nullable' => false,\n+ 'comment' => 'order id'\n+ ]\n+ )\n+ ->addColumn(\n+ PendingRefundInterface::PAYMENT_ID,\n+ Table::TYPE_INTEGER,\n+ null,\n+ [\n+ 'unsigned' => true,\n+ 'nullable' => false,\n+ 'comment' => 'payment id'\n+ ]\n+ );\n+\n+ $setup->getConnection()->createTable($table);\n+\n+ $pendingColumns = [\n+ PendingRefundInterface::ORDER_ID,\n+ PendingRefundInterface::PAYMENT_ID,\n+ PendingRefundInterface::REFUND_ID,\n+ ];\n+\n+ $indexName = $setup->getConnection()->getIndexName(\n+ $setup->getTable(static::PENDING_REFUND_TABLE_NAME),\n+ $pendingColumns,\n+ AdapterInterface::INDEX_TYPE_UNIQUE\n+ );\n+\n+ $setup->getConnection()->addIndex(\n+ $setup->getTable(static::PENDING_REFUND_TABLE_NAME),\n+ $indexName,\n+ $pendingColumns,\n+ AdapterInterface::INDEX_TYPE_UNIQUE\n+ );\n+ }\n}\n"
                }
            ]
        }
    },
    "Row_89": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Refactoring out shipping.html override - pass 1"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Refactoring out shipping.html override - pass 1"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/layout/checkout_index_index.xml",
                    "new_path": "src/Payment/view/frontend/layout/checkout_index_index.xml",
                    "diff": "<item name=\"children\" xsi:type=\"array\">\n<item name=\"customer-email\" xsi:type=\"array\">\n<item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/form/element/email</item>\n- </item>\n+ <item name=\"children\" xsi:type=\"array\">\n+ <item name=\"before-login-form\" xsi:type=\"array\">\n+ <item name=\"children\" xsi:type=\"array\">\n<item name=\"amazon-button\" xsi:type=\"array\">\n<item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/checkout-button</item>\n<item name=\"sortOrder\" xsi:type=\"string\">0</item>\n</item>\n</item>\n</item>\n+ </item>\n+ </item>\n+ </item>\n+ </item>\n<item name=\"before-form\" xsi:type=\"array\">\n<item name=\"children\" xsi:type=\"array\">\n<item name=\"amazon-widget-address\" xsi:type=\"array\">\n</item>\n</item>\n</item>\n+ <item name=\"address-list\" xsi:type=\"array\">\n+ <item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/shipping-address/list</item>\n+ </item>\n</item>\n</item>\n</item>\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/model/storage.js",
                    "new_path": "src/Payment/view/frontend/web/js/model/storage.js",
                    "diff": "@@ -37,7 +37,7 @@ define(\namazonDeclineCode = ko.observable(false),\nsandboxSimulationReference = ko.observable('default'),\nisPlaceOrderDisabled = ko.observable(false),\n- isShippingMethodsLoading = ko.observable(true),\n+ isShippingMethodsLoading = ko.observable(false),\nisAmazonShippingAddressSelected = ko.observable(false),\nisQuoteDirty = ko.observable(amazonPaymentConfig.getValue('isQuoteDirty')),\nisPwaVisible = ko.computed(function () {\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/view/form/element/email.js",
                    "new_path": "src/Payment/view/frontend/web/js/view/form/element/email.js",
                    "diff": "@@ -20,7 +20,8 @@ define([\nreturn Component.extend({\ndefaults: {\n- email: checkoutData.getInputFieldEmailValue() || getAmazonCustomerEmail()\n+ email: checkoutData.getInputFieldEmailValue() || getAmazonCustomerEmail(),\n+ template: 'Amazon_Payment/form/element/email'\n},\ninitialize: function () {\nthis._super();\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/view/frontend/web/js/view/shipping-address/list.js",
                    "diff": "+define([\n+ 'Magento_Checkout/js/view/shipping-address/list',\n+ 'Magento_Customer/js/model/address-list',\n+ 'Amazon_Payment/js/model/storage',\n+ 'ko'\n+], function (Component, addressList, amazonStorage, ko) {\n+ 'use strict';\n+ return Component.extend({\n+ initObservable: function () {\n+ this._super();\n+ this.visible = ko.computed(function () {\n+ return addressList().length > 0 && !amazonStorage.isAmazonAccountLoggedIn()\n+ });\n+ return this;\n+ }\n+ });\n+});\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/view/shipping.js",
                    "new_path": "src/Payment/view/frontend/web/js/view/shipping.js",
                    "diff": "@@ -32,33 +32,34 @@ define(\ntemplate: 'Amazon_Payment/shipping'\n},\nisAmazonLoggedIn: amazonStorage.isAmazonAccountLoggedIn,\n- isLoading: ko.pureComputed(function () {\n- return amazonStorage.isAmazonAccountLoggedIn() ? amazonStorage.isShippingMethodsLoading() : shippingService.isLoading();\n- }, this),\n+ // isLoading: ko.pureComputed(function () {\n+ // return amazonStorage.isAmazonAccountLoggedIn() ? amazonStorage.isShippingMethodsLoading() : shippingService.isLoading();\n+ // }, this),\ninitialize: function () {\nvar self = this;\nthis._super();\n-\n- //switch form inline based on amazon and customer loggedIn status\n- amazonStorage.isAmazonAccountLoggedIn.subscribe(function (loggedIn) {\n- this.isFormInline = (loggedIn) ? false : (customer.isLoggedIn()) ? (addressList().length === 0) : true;\n- }, this);\n-\n+ },\n+ initObservable: function () {\n+ this._super();\n+ this.isFormInline = ko.computed(function () {\n+ return amazonStorage.isAmazonAccountLoggedIn() ? false : (customer.isLoggedIn()) ? (addressList().length === 0) : true;\n+ });\n+ return this;\n},\n/**\n* OnRender for shipping Methods\n*/\n- shippingMethodsOnRender: function() {\n- if (this.isAmazonLoggedIn()) {\n- shippingService.getShippingRates().subscribe(function() {\n- if(amazonStorage.isShippingMethodsLoading() === true) {\n- amazonStorage.isShippingMethodsLoading(false);\n- }\n- }, this);\n- amazonStorage.isShippingMethodsLoading(false); //remove loader when shippingMethod is set\n- }\n- },\n+ // shippingMethodsOnRender: function() {\n+ // if (this.isAmazonLoggedIn()) {\n+ // shippingService.getShippingRates().subscribe(function() {\n+ // if(amazonStorage.isShippingMethodsLoading() === true) {\n+ // amazonStorage.isShippingMethodsLoading(false);\n+ // }\n+ // }, this);\n+ // amazonStorage.isShippingMethodsLoading(false); //remove loader when shippingMethod is set\n+ // }\n+ // },\nvalidateGuestEmail: function () {\nvar loginFormSelector = 'form[data-role=email-with-possible-login]';\n$(loginFormSelector).validation();\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/view/frontend/web/template/form/element/email.html",
                    "diff": "+<!--\n+/**\n+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+-->\n+<!-- ko foreach: getRegion('before-login-form') -->\n+<!-- ko template: getTemplate() --><!-- /ko -->\n+<!-- /ko -->\n+\n+<!-- ko ifnot: isCustomerLoggedIn() -->\n+\n+<form class=\"form form-login\" data-role=\"email-with-possible-login\"\n+ data-bind=\"submit:login\"\n+ method=\"post\">\n+ <fieldset id=\"customer-email-fieldset\" class=\"fieldset\" data-bind=\"blockLoader: isLoading\">\n+ <div class=\"field required\">\n+ <label class=\"label\" for=\"customer-email\">\n+ <span data-bind=\"i18n: 'Email Address'\"></span>\n+ </label>\n+ <div class=\"control _with-tooltip\">\n+ <input class=\"input-text\"\n+ type=\"email\"\n+ data-bind=\"\n+ textInput: email,\n+ hasFocus: emailFocused\"\n+ name=\"username\"\n+ data-validate=\"{required:true, 'validate-email':true}\"\n+ id=\"customer-email\" />\n+ <!-- ko template: 'ui/form/element/helper/tooltip' --><!-- /ko -->\n+ <span class=\"note\" data-bind=\"fadeVisible: isPasswordVisible() == false\"><!-- ko i18n: 'You can create an account after checkout.'--><!-- /ko --></span>\n+ </div>\n+ </div>\n+\n+ <!--Hidden fields -->\n+ <fieldset class=\"fieldset hidden-fields\" data-bind=\"fadeVisible: isPasswordVisible\">\n+ <div class=\"field\">\n+ <label class=\"label\" for=\"customer-password\">\n+ <span data-bind=\"i18n: 'Password'\"></span>\n+ </label>\n+ <div class=\"control\">\n+ <input class=\"input-text\"\n+ placeholder=\"optional\"\n+ type=\"password\"\n+ name=\"password\"\n+ id=\"customer-password\"\n+ data-validate=\"{required:true}\" autocomplete=\"off\"/>\n+ <span class=\"note\" data-bind=\"i18n: 'You already have an account with us. Sign in or continue as guest.'\"></span>\n+ </div>\n+\n+ </div>\n+ <!-- ko foreach: getRegion('additional-login-form-fields') -->\n+ <!-- ko template: getTemplate() --><!-- /ko -->\n+ <!-- /ko -->\n+ <div class=\"actions-toolbar\">\n+ <input name=\"context\" type=\"hidden\" value=\"checkout\" />\n+ <div class=\"primary\">\n+ <button type=\"submit\" class=\"action login primary\" data-action=\"checkout-method-login\"><span data-bind=\"i18n: 'Login'\"></span></button>\n+ </div>\n+ <div class=\"secondary\">\n+ <a class=\"action remind\" data-bind=\"attr: { href: forgotPasswordUrl }\">\n+ <span data-bind=\"i18n: 'Forgot Your Password?'\"></span>\n+ </a>\n+ </div>\n+ </div>\n+ </fieldset>\n+ <!--Hidden fields -->\n+ </fieldset>\n+</form>\n+<!-- /ko -->\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/layout/checkout_index_index.xml",
                    "new_path": "src/Payment/view/frontend/layout/checkout_index_index.xml",
                    "diff": "<item name=\"children\" xsi:type=\"array\">\n<item name=\"customer-email\" xsi:type=\"array\">\n<item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/form/element/email</item>\n- </item>\n+ <item name=\"children\" xsi:type=\"array\">\n+ <item name=\"before-login-form\" xsi:type=\"array\">\n+ <item name=\"children\" xsi:type=\"array\">\n<item name=\"amazon-button\" xsi:type=\"array\">\n<item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/checkout-button</item>\n<item name=\"sortOrder\" xsi:type=\"string\">0</item>\n</item>\n</item>\n</item>\n+ </item>\n+ </item>\n+ </item>\n+ </item>\n<item name=\"before-form\" xsi:type=\"array\">\n<item name=\"children\" xsi:type=\"array\">\n<item name=\"amazon-widget-address\" xsi:type=\"array\">\n</item>\n</item>\n</item>\n+ <item name=\"address-list\" xsi:type=\"array\">\n+ <item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/shipping-address/list</item>\n+ </item>\n</item>\n</item>\n</item>\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/model/storage.js",
                    "new_path": "src/Payment/view/frontend/web/js/model/storage.js",
                    "diff": "@@ -37,7 +37,7 @@ define(\namazonDeclineCode = ko.observable(false),\nsandboxSimulationReference = ko.observable('default'),\nisPlaceOrderDisabled = ko.observable(false),\n- isShippingMethodsLoading = ko.observable(true),\n+ isShippingMethodsLoading = ko.observable(false),\nisAmazonShippingAddressSelected = ko.observable(false),\nisQuoteDirty = ko.observable(amazonPaymentConfig.getValue('isQuoteDirty')),\nisPwaVisible = ko.computed(function () {\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/view/form/element/email.js",
                    "new_path": "src/Payment/view/frontend/web/js/view/form/element/email.js",
                    "diff": "@@ -20,7 +20,8 @@ define([\nreturn Component.extend({\ndefaults: {\n- email: checkoutData.getInputFieldEmailValue() || getAmazonCustomerEmail()\n+ email: checkoutData.getInputFieldEmailValue() || getAmazonCustomerEmail(),\n+ template: 'Amazon_Payment/form/element/email'\n},\ninitialize: function () {\nthis._super();\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/view/frontend/web/js/view/shipping-address/list.js",
                    "diff": "+define([\n+ 'Magento_Checkout/js/view/shipping-address/list',\n+ 'Magento_Customer/js/model/address-list',\n+ 'Amazon_Payment/js/model/storage',\n+ 'ko'\n+], function (Component, addressList, amazonStorage, ko) {\n+ 'use strict';\n+ return Component.extend({\n+ initObservable: function () {\n+ this._super();\n+ this.visible = ko.computed(function () {\n+ return addressList().length > 0 && !amazonStorage.isAmazonAccountLoggedIn()\n+ });\n+ return this;\n+ }\n+ });\n+});\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/view/shipping.js",
                    "new_path": "src/Payment/view/frontend/web/js/view/shipping.js",
                    "diff": "@@ -32,33 +32,34 @@ define(\ntemplate: 'Amazon_Payment/shipping'\n},\nisAmazonLoggedIn: amazonStorage.isAmazonAccountLoggedIn,\n- isLoading: ko.pureComputed(function () {\n- return amazonStorage.isAmazonAccountLoggedIn() ? amazonStorage.isShippingMethodsLoading() : shippingService.isLoading();\n- }, this),\n+ // isLoading: ko.pureComputed(function () {\n+ // return amazonStorage.isAmazonAccountLoggedIn() ? amazonStorage.isShippingMethodsLoading() : shippingService.isLoading();\n+ // }, this),\ninitialize: function () {\nvar self = this;\nthis._super();\n-\n- //switch form inline based on amazon and customer loggedIn status\n- amazonStorage.isAmazonAccountLoggedIn.subscribe(function (loggedIn) {\n- this.isFormInline = (loggedIn) ? false : (customer.isLoggedIn()) ? (addressList().length === 0) : true;\n- }, this);\n-\n+ },\n+ initObservable: function () {\n+ this._super();\n+ this.isFormInline = ko.computed(function () {\n+ return amazonStorage.isAmazonAccountLoggedIn() ? false : (customer.isLoggedIn()) ? (addressList().length === 0) : true;\n+ });\n+ return this;\n},\n/**\n* OnRender for shipping Methods\n*/\n- shippingMethodsOnRender: function() {\n- if (this.isAmazonLoggedIn()) {\n- shippingService.getShippingRates().subscribe(function() {\n- if(amazonStorage.isShippingMethodsLoading() === true) {\n- amazonStorage.isShippingMethodsLoading(false);\n- }\n- }, this);\n- amazonStorage.isShippingMethodsLoading(false); //remove loader when shippingMethod is set\n- }\n- },\n+ // shippingMethodsOnRender: function() {\n+ // if (this.isAmazonLoggedIn()) {\n+ // shippingService.getShippingRates().subscribe(function() {\n+ // if(amazonStorage.isShippingMethodsLoading() === true) {\n+ // amazonStorage.isShippingMethodsLoading(false);\n+ // }\n+ // }, this);\n+ // amazonStorage.isShippingMethodsLoading(false); //remove loader when shippingMethod is set\n+ // }\n+ // },\nvalidateGuestEmail: function () {\nvar loginFormSelector = 'form[data-role=email-with-possible-login]';\n$(loginFormSelector).validation();\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/view/frontend/web/template/form/element/email.html",
                    "diff": "+<!--\n+/**\n+ * Copyright 2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ * http://aws.amazon.com/apache2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+-->\n+<!-- ko foreach: getRegion('before-login-form') -->\n+<!-- ko template: getTemplate() --><!-- /ko -->\n+<!-- /ko -->\n+\n+<!-- ko ifnot: isCustomerLoggedIn() -->\n+\n+<form class=\"form form-login\" data-role=\"email-with-possible-login\"\n+ data-bind=\"submit:login\"\n+ method=\"post\">\n+ <fieldset id=\"customer-email-fieldset\" class=\"fieldset\" data-bind=\"blockLoader: isLoading\">\n+ <div class=\"field required\">\n+ <label class=\"label\" for=\"customer-email\">\n+ <span data-bind=\"i18n: 'Email Address'\"></span>\n+ </label>\n+ <div class=\"control _with-tooltip\">\n+ <input class=\"input-text\"\n+ type=\"email\"\n+ data-bind=\"\n+ textInput: email,\n+ hasFocus: emailFocused\"\n+ name=\"username\"\n+ data-validate=\"{required:true, 'validate-email':true}\"\n+ id=\"customer-email\" />\n+ <!-- ko template: 'ui/form/element/helper/tooltip' --><!-- /ko -->\n+ <span class=\"note\" data-bind=\"fadeVisible: isPasswordVisible() == false\"><!-- ko i18n: 'You can create an account after checkout.'--><!-- /ko --></span>\n+ </div>\n+ </div>\n+\n+ <!--Hidden fields -->\n+ <fieldset class=\"fieldset hidden-fields\" data-bind=\"fadeVisible: isPasswordVisible\">\n+ <div class=\"field\">\n+ <label class=\"label\" for=\"customer-password\">\n+ <span data-bind=\"i18n: 'Password'\"></span>\n+ </label>\n+ <div class=\"control\">\n+ <input class=\"input-text\"\n+ placeholder=\"optional\"\n+ type=\"password\"\n+ name=\"password\"\n+ id=\"customer-password\"\n+ data-validate=\"{required:true}\" autocomplete=\"off\"/>\n+ <span class=\"note\" data-bind=\"i18n: 'You already have an account with us. Sign in or continue as guest.'\"></span>\n+ </div>\n+\n+ </div>\n+ <!-- ko foreach: getRegion('additional-login-form-fields') -->\n+ <!-- ko template: getTemplate() --><!-- /ko -->\n+ <!-- /ko -->\n+ <div class=\"actions-toolbar\">\n+ <input name=\"context\" type=\"hidden\" value=\"checkout\" />\n+ <div class=\"primary\">\n+ <button type=\"submit\" class=\"action login primary\" data-action=\"checkout-method-login\"><span data-bind=\"i18n: 'Login'\"></span></button>\n+ </div>\n+ <div class=\"secondary\">\n+ <a class=\"action remind\" data-bind=\"attr: { href: forgotPasswordUrl }\">\n+ <span data-bind=\"i18n: 'Forgot Your Password?'\"></span>\n+ </a>\n+ </div>\n+ </div>\n+ </fieldset>\n+ <!--Hidden fields -->\n+ </fieldset>\n+</form>\n+<!-- /ko -->\n"
                }
            ]
        }
    },
    "Row_90": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Override removal pass 2"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Override removal pass 2"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/view/checkout-widget-address.js",
                    "new_path": "src/Payment/view/frontend/web/js/view/checkout-widget-address.js",
                    "diff": "@@ -92,6 +92,7 @@ define(\n*/\ngetShippingAddressFromAmazon: function () {\namazonStorage.isShippingMethodsLoading(true);\n+ shippingService.isLoading(true);\nvar serviceUrl = urlBuilder.createUrl('/amazon-shipping-address/:amazonOrderReference', {amazonOrderReference: amazonStorage.getOrderReference()}),\npayload = {\naddressConsentToken: amazonStorage.getAddressConsentToken()\n@@ -115,7 +116,7 @@ define(\n}\n}\ncheckoutData.setShippingAddressFromData(addressConverter.quoteAddressToFormAddressData(addressData));\n- checkoutDataResolver.resolveShippingAddress();\n+ checkoutDataResolver.resolveEstimationAddress();\n}\n).fail(\nfunction (response) {\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/view/shipping.js",
                    "new_path": "src/Payment/view/frontend/web/js/view/shipping.js",
                    "diff": "@@ -28,38 +28,18 @@ define(\n) {\n'use strict';\nreturn Component.extend({\n- defaults: {\n- template: 'Amazon_Payment/shipping'\n- },\n- isAmazonLoggedIn: amazonStorage.isAmazonAccountLoggedIn,\n- // isLoading: ko.pureComputed(function () {\n- // return amazonStorage.isAmazonAccountLoggedIn() ? amazonStorage.isShippingMethodsLoading() : shippingService.isLoading();\n- // }, this),\n-\ninitialize: function () {\n- var self = this;\n+ this.isFormInline = !window.checkoutConfig.isCustomerLoggedIn;\nthis._super();\n+ return this;\n},\ninitObservable: function () {\nthis._super();\n- this.isFormInline = ko.computed(function () {\n- return amazonStorage.isAmazonAccountLoggedIn() ? false : (customer.isLoggedIn()) ? (addressList().length === 0) : true;\n- });\n+ amazonStorage.isAmazonAccountLoggedIn.subscribe(function (value) {\n+ this.isNewAddressAdded(value);\n+ }, this);\nreturn this;\n},\n- /**\n- * OnRender for shipping Methods\n- */\n- // shippingMethodsOnRender: function() {\n- // if (this.isAmazonLoggedIn()) {\n- // shippingService.getShippingRates().subscribe(function() {\n- // if(amazonStorage.isShippingMethodsLoading() === true) {\n- // amazonStorage.isShippingMethodsLoading(false);\n- // }\n- // }, this);\n- // amazonStorage.isShippingMethodsLoading(false); //remove loader when shippingMethod is set\n- // }\n- // },\nvalidateGuestEmail: function () {\nvar loginFormSelector = 'form[data-role=email-with-possible-login]';\n$(loginFormSelector).validation();\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/view/checkout-widget-address.js",
                    "new_path": "src/Payment/view/frontend/web/js/view/checkout-widget-address.js",
                    "diff": "@@ -92,6 +92,7 @@ define(\n*/\ngetShippingAddressFromAmazon: function () {\namazonStorage.isShippingMethodsLoading(true);\n+ shippingService.isLoading(true);\nvar serviceUrl = urlBuilder.createUrl('/amazon-shipping-address/:amazonOrderReference', {amazonOrderReference: amazonStorage.getOrderReference()}),\npayload = {\naddressConsentToken: amazonStorage.getAddressConsentToken()\n@@ -115,7 +116,7 @@ define(\n}\n}\ncheckoutData.setShippingAddressFromData(addressConverter.quoteAddressToFormAddressData(addressData));\n- checkoutDataResolver.resolveShippingAddress();\n+ checkoutDataResolver.resolveEstimationAddress();\n}\n).fail(\nfunction (response) {\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/view/shipping.js",
                    "new_path": "src/Payment/view/frontend/web/js/view/shipping.js",
                    "diff": "@@ -28,38 +28,18 @@ define(\n) {\n'use strict';\nreturn Component.extend({\n- defaults: {\n- template: 'Amazon_Payment/shipping'\n- },\n- isAmazonLoggedIn: amazonStorage.isAmazonAccountLoggedIn,\n- // isLoading: ko.pureComputed(function () {\n- // return amazonStorage.isAmazonAccountLoggedIn() ? amazonStorage.isShippingMethodsLoading() : shippingService.isLoading();\n- // }, this),\n-\ninitialize: function () {\n- var self = this;\n+ this.isFormInline = !window.checkoutConfig.isCustomerLoggedIn;\nthis._super();\n+ return this;\n},\ninitObservable: function () {\nthis._super();\n- this.isFormInline = ko.computed(function () {\n- return amazonStorage.isAmazonAccountLoggedIn() ? false : (customer.isLoggedIn()) ? (addressList().length === 0) : true;\n- });\n+ amazonStorage.isAmazonAccountLoggedIn.subscribe(function (value) {\n+ this.isNewAddressAdded(value);\n+ }, this);\nreturn this;\n},\n- /**\n- * OnRender for shipping Methods\n- */\n- // shippingMethodsOnRender: function() {\n- // if (this.isAmazonLoggedIn()) {\n- // shippingService.getShippingRates().subscribe(function() {\n- // if(amazonStorage.isShippingMethodsLoading() === true) {\n- // amazonStorage.isShippingMethodsLoading(false);\n- // }\n- // }, this);\n- // amazonStorage.isShippingMethodsLoading(false); //remove loader when shippingMethod is set\n- // }\n- // },\nvalidateGuestEmail: function () {\nvar loginFormSelector = 'form[data-role=email-with-possible-login]';\n$(loginFormSelector).validation();\n"
                }
            ]
        }
    },
    "Row_91": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Fixed a bug with state handline, cleaned up"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Fixed a bug with state handline, cleaned up"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/view/shipping.js",
                    "new_path": "src/Payment/view/frontend/web/js/view/shipping.js",
                    "diff": "@@ -8,10 +8,7 @@ define(\n'Magento_Customer/js/model/customer',\n'Magento_Checkout/js/action/set-shipping-information',\n'Magento_Checkout/js/model/step-navigator',\n- 'Amazon_Payment/js/model/storage',\n- 'Magento_Checkout/js/model/shipping-service',\n- 'Magento_Checkout/js/model/quote',\n- 'Magento_Customer/js/model/address-list'\n+ 'Amazon_Payment/js/model/storage'\n],\nfunction (\n$,\n@@ -21,20 +18,13 @@ define(\ncustomer,\nsetShippingInformationAction,\nstepNavigator,\n- amazonStorage,\n- shippingService,\n- quote,\n- addressList\n+ amazonStorage\n) {\n'use strict';\nreturn Component.extend({\ninitialize: function () {\n- this.isFormInline = !window.checkoutConfig.isCustomerLoggedIn;\n- this._super();\n- return this;\n- },\n- initObservable: function () {\nthis._super();\n+ this.isNewAddressAdded(amazonStorage.isAmazonAccountLoggedIn());\namazonStorage.isAmazonAccountLoggedIn.subscribe(function (value) {\nthis.isNewAddressAdded(value);\n}, this);\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/view/shipping.js",
                    "new_path": "src/Payment/view/frontend/web/js/view/shipping.js",
                    "diff": "@@ -8,10 +8,7 @@ define(\n'Magento_Customer/js/model/customer',\n'Magento_Checkout/js/action/set-shipping-information',\n'Magento_Checkout/js/model/step-navigator',\n- 'Amazon_Payment/js/model/storage',\n- 'Magento_Checkout/js/model/shipping-service',\n- 'Magento_Checkout/js/model/quote',\n- 'Magento_Customer/js/model/address-list'\n+ 'Amazon_Payment/js/model/storage'\n],\nfunction (\n$,\n@@ -21,20 +18,13 @@ define(\ncustomer,\nsetShippingInformationAction,\nstepNavigator,\n- amazonStorage,\n- shippingService,\n- quote,\n- addressList\n+ amazonStorage\n) {\n'use strict';\nreturn Component.extend({\ninitialize: function () {\n- this.isFormInline = !window.checkoutConfig.isCustomerLoggedIn;\n- this._super();\n- return this;\n- },\n- initObservable: function () {\nthis._super();\n+ this.isNewAddressAdded(amazonStorage.isAmazonAccountLoggedIn());\namazonStorage.isAmazonAccountLoggedIn.subscribe(function (value) {\nthis.isNewAddressAdded(value);\n}, this);\n"
                }
            ]
        }
    },
    "Row_92": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Use table name getter to add prefix in table call."
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Use table name getter to add prefix in table call."
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -359,7 +359,7 @@ class SimplePath\n$db = $this->connection->getConnection();\n$select = $db->select()\n->from(\n- ['c' => 'core_config_data']\n+ ['c' => $this->connection->getTableName('core_config_data')]\n)\n->where('c.path IN (?)', array('web/unsecure/base_url', 'web/secure/base_url'));\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -359,7 +359,7 @@ class SimplePath\n$db = $this->connection->getConnection();\n$select = $db->select()\n->from(\n- ['c' => 'core_config_data']\n+ ['c' => $this->connection->getTableName('core_config_data')]\n)\n->where('c.path IN (?)', array('web/unsecure/base_url', 'web/secure/base_url'));\n"
                }
            ]
        }
    },
    "Row_93": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Update oAuthRedirect.phtml\nfix for issue."
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Update oAuthRedirect.phtml\nfix for issue."
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Login/view/frontend/templates/oAuthRedirect.phtml",
                    "new_path": "src/Login/view/frontend/templates/oAuthRedirect.phtml",
                    "diff": "*/\n?>\n<?php /** @var $block \\Amazon\\Login\\Block\\OAuthRedirect */ ?>\n-<div data-mage-init='{\"amazonOAuthRedirect\": {}}'><?php echo __('You will be redirected shortly...'); ?></div>\n+<div><?php echo __('You will be redirected shortly...'); ?></div>\n+<script>\n+require([\n+ 'jquery',\n+ 'Amazon_Login/js/amazon-redirect'\n+], function ($) {\n+ 'use strict';\n+ $.amazon.AmazonRedirect();\n+});\n+</script>\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Login/view/frontend/templates/oAuthRedirect.phtml",
                    "new_path": "src/Login/view/frontend/templates/oAuthRedirect.phtml",
                    "diff": "*/\n?>\n<?php /** @var $block \\Amazon\\Login\\Block\\OAuthRedirect */ ?>\n-<div data-mage-init='{\"amazonOAuthRedirect\": {}}'><?php echo __('You will be redirected shortly...'); ?></div>\n+<div><?php echo __('You will be redirected shortly...'); ?></div>\n+<script>\n+require([\n+ 'jquery',\n+ 'Amazon_Login/js/amazon-redirect'\n+], function ($) {\n+ 'use strict';\n+ $.amazon.AmazonRedirect();\n+});\n+</script>\n"
                }
            ]
        }
    },
    "Row_94": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Add missing default configuration"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Add missing default configuration"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/config.xml",
                    "new_path": "src/Core/etc/config.xml",
                    "diff": "<can_void>1</can_void>\n<can_use_checkout>1</can_use_checkout>\n<packstation_terms>Packstation,Pack-Station,Pack Station,PO Box,Post Office box,Locker</packstation_terms>\n+ <pwa_enabled>0</pwa_enabled>\n+ <lwa_enabled>0</lwa_enabled>\n+ <authorization_mode>synchronous</authorization_mode>\n+ <update_mechanism>polling</update_mechanism>\n<pwa_pp_button_is_visible>1</pwa_pp_button_is_visible>\n<minicart_button_is_visible>1</minicart_button_is_visible>\n<button_type>full</button_type>\n+ <button_color>Gold</button_color>\n<button_size>medium</button_size>\n<logging>1</logging>\n</amazon_payment>\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/etc/config.xml",
                    "new_path": "src/Core/etc/config.xml",
                    "diff": "<can_void>1</can_void>\n<can_use_checkout>1</can_use_checkout>\n<packstation_terms>Packstation,Pack-Station,Pack Station,PO Box,Post Office box,Locker</packstation_terms>\n+ <pwa_enabled>0</pwa_enabled>\n+ <lwa_enabled>0</lwa_enabled>\n+ <authorization_mode>synchronous</authorization_mode>\n+ <update_mechanism>polling</update_mechanism>\n<pwa_pp_button_is_visible>1</pwa_pp_button_is_visible>\n<minicart_button_is_visible>1</minicart_button_is_visible>\n<button_type>full</button_type>\n+ <button_color>Gold</button_color>\n<button_size>medium</button_size>\n<logging>1</logging>\n</amazon_payment>\n"
                }
            ]
        }
    },
    "Row_95": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Fixed a bug with PWA/LWA button not being in dom, fixed a bug where inline form is displayed when customer has no addresses in Magento"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Fixed a bug with PWA/LWA button not being in dom, fixed a bug where inline form is displayed when customer has no addresses in Magento"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Login/view/frontend/web/template/login-button.html",
                    "new_path": "src/Login/view/frontend/web/template/login-button.html",
                    "diff": "<!-- ko template: getTemplate() --><!-- /ko -->\n<!--/ko-->\n-<!-- ko if: (isLwaVisible) -->\n- <!-- ko ifnot: (isAmazonAccountLoggedIn) -->\n- <div class=\"amazon-button-container\">\n+<div class=\"amazon-button-container\" data-bind=\"visible: !isAmazonAccountLoggedIn() && isLwaVisible()\">\n<div class=\"amazon-button-container__cell\">\n<div id=\"LoginWithAmazon\" class=\"login-with-amazon\" data-bind=\"mageInit: {'amazonButton':{'buttonType': 'LwA'}}\"></div>\n</div>\n</div>\n</div>\n</div>\n- <!--/ko-->\n-<!--/ko-->\n<!-- ko foreach: getRegion('after-amazon-button') -->\n<!-- ko template: getTemplate() --><!-- /ko -->\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/layout/checkout_index_index.xml",
                    "new_path": "src/Payment/view/frontend/layout/checkout_index_index.xml",
                    "diff": "<item name=\"shippingAddress\" xsi:type=\"array\">\n<item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/shipping</item>\n<item name=\"children\" xsi:type=\"array\">\n+ <item name=\"before-shipping-method-form\" xsi:type=\"array\">\n+ <item name=\"children\" xsi:type=\"array\">\n+ <item name=\"inline-form-manipulator\" xsi:type=\"array\">\n+ <item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/shipping-address/inline-form</item>\n+ </item>\n+ </item>\n+ </item>\n<item name=\"customer-email\" xsi:type=\"array\">\n<item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/form/element/email</item>\n<item name=\"children\" xsi:type=\"array\">\n- <item name=\"before-login-form\" xsi:type=\"array\">\n+ <item name=\"amazon-button-region\" xsi:type=\"array\">\n+ <item name=\"component\" xsi:type=\"string\">uiComponent</item>\n+ <item name=\"displayArea\" xsi:type=\"string\">amazon-button-region</item>\n<item name=\"children\" xsi:type=\"array\">\n<item name=\"amazon-button\" xsi:type=\"array\">\n<item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/checkout-button</item>\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/view/frontend/web/js/view/shipping-address/inline-form.js",
                    "diff": "+define([\n+ 'uiComponent',\n+ 'ko',\n+ 'Amazon_Payment/js/model/storage'\n+], function (Component, ko, amazonStorage) {\n+ 'use strict';\n+ return Component.extend({\n+ defaults: {\n+ template: 'Amazon_Payment/shipping-address/inline-form',\n+ formSelector: 'co-shipping-form'\n+ },\n+ initObservable: function () {\n+ this._super();\n+ amazonStorage.isAmazonAccountLoggedIn.subscribe(function (value) {\n+ var elem = document.getElementById('co-shipping-form');\n+ if (elem && value === false) {\n+ document.getElementById(this.formSelector).style.display = 'block';\n+ }\n+ }, this);\n+ return this;\n+ },\n+ manipulateInlineForm: function () {\n+ if (amazonStorage.isAmazonAccountLoggedIn()) {\n+ var elem = document.getElementById('co-shipping-form');\n+ if (elem) {\n+ document.getElementById(this.formSelector).style.display = 'none';\n+ }\n+ }\n+ }\n+ });\n+});\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/template/checkout-button.html",
                    "new_path": "src/Payment/view/frontend/web/template/checkout-button.html",
                    "diff": "<!-- ko template: getTemplate() --><!-- /ko -->\n<!--/ko-->\n-<!-- ko if: (isPwaVisible) -->\n- <!-- ko ifnot: (isAmazonAccountLoggedIn) -->\n- <div class=\"amazon-button-container\">\n+<div class=\"amazon-button-container\" data-bind=\"visible: !isAmazonAccountLoggedIn() && isPwaVisible()\">\n<div class=\"amazon-button-container__cell\">\n<div id=\"PayWithAmazon\" class=\"login-with-amazon\" data-bind=\"mageInit: {'amazonButton':{'buttonType': 'PwA'}}\"></div>\n</div>\n</div>\n</div>\n</div>\n- <!--/ko-->\n-<!--/ko-->\n<!-- ko foreach: getRegion('after-amazon-button') -->\n<!-- ko template: getTemplate() --><!-- /ko -->\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/template/form/element/email.html",
                    "new_path": "src/Payment/view/frontend/web/template/form/element/email.html",
                    "diff": "* permissions and limitations under the License.\n*/\n-->\n-<!-- ko foreach: getRegion('before-login-form') -->\n+<!-- ko foreach: getRegion('amazon-button-region') -->\n<!-- ko template: getTemplate() --><!-- /ko -->\n<!-- /ko -->\n<!-- ko ifnot: isCustomerLoggedIn() -->\n+<!-- ko foreach: getRegion('before-login-form') -->\n+<!-- ko template: getTemplate() --><!-- /ko -->\n+<!-- /ko -->\n<form class=\"form form-login\" data-role=\"email-with-possible-login\"\ndata-bind=\"submit:login\"\nmethod=\"post\">\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/view/frontend/web/template/shipping-address/inline-form.html",
                    "diff": "+<div data-bind=\"afterRender: manipulateInlineForm\"></div>\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Login/view/frontend/web/template/login-button.html",
                    "new_path": "src/Login/view/frontend/web/template/login-button.html",
                    "diff": "<!-- ko template: getTemplate() --><!-- /ko -->\n<!--/ko-->\n-<!-- ko if: (isLwaVisible) -->\n- <!-- ko ifnot: (isAmazonAccountLoggedIn) -->\n- <div class=\"amazon-button-container\">\n+<div class=\"amazon-button-container\" data-bind=\"visible: !isAmazonAccountLoggedIn() && isLwaVisible()\">\n<div class=\"amazon-button-container__cell\">\n<div id=\"LoginWithAmazon\" class=\"login-with-amazon\" data-bind=\"mageInit: {'amazonButton':{'buttonType': 'LwA'}}\"></div>\n</div>\n</div>\n</div>\n</div>\n- <!--/ko-->\n-<!--/ko-->\n<!-- ko foreach: getRegion('after-amazon-button') -->\n<!-- ko template: getTemplate() --><!-- /ko -->\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/layout/checkout_index_index.xml",
                    "new_path": "src/Payment/view/frontend/layout/checkout_index_index.xml",
                    "diff": "<item name=\"shippingAddress\" xsi:type=\"array\">\n<item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/shipping</item>\n<item name=\"children\" xsi:type=\"array\">\n+ <item name=\"before-shipping-method-form\" xsi:type=\"array\">\n+ <item name=\"children\" xsi:type=\"array\">\n+ <item name=\"inline-form-manipulator\" xsi:type=\"array\">\n+ <item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/shipping-address/inline-form</item>\n+ </item>\n+ </item>\n+ </item>\n<item name=\"customer-email\" xsi:type=\"array\">\n<item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/form/element/email</item>\n<item name=\"children\" xsi:type=\"array\">\n- <item name=\"before-login-form\" xsi:type=\"array\">\n+ <item name=\"amazon-button-region\" xsi:type=\"array\">\n+ <item name=\"component\" xsi:type=\"string\">uiComponent</item>\n+ <item name=\"displayArea\" xsi:type=\"string\">amazon-button-region</item>\n<item name=\"children\" xsi:type=\"array\">\n<item name=\"amazon-button\" xsi:type=\"array\">\n<item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/checkout-button</item>\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/view/frontend/web/js/view/shipping-address/inline-form.js",
                    "diff": "+define([\n+ 'uiComponent',\n+ 'ko',\n+ 'Amazon_Payment/js/model/storage'\n+], function (Component, ko, amazonStorage) {\n+ 'use strict';\n+ return Component.extend({\n+ defaults: {\n+ template: 'Amazon_Payment/shipping-address/inline-form',\n+ formSelector: 'co-shipping-form'\n+ },\n+ initObservable: function () {\n+ this._super();\n+ amazonStorage.isAmazonAccountLoggedIn.subscribe(function (value) {\n+ var elem = document.getElementById('co-shipping-form');\n+ if (elem && value === false) {\n+ document.getElementById(this.formSelector).style.display = 'block';\n+ }\n+ }, this);\n+ return this;\n+ },\n+ manipulateInlineForm: function () {\n+ if (amazonStorage.isAmazonAccountLoggedIn()) {\n+ var elem = document.getElementById('co-shipping-form');\n+ if (elem) {\n+ document.getElementById(this.formSelector).style.display = 'none';\n+ }\n+ }\n+ }\n+ });\n+});\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/template/checkout-button.html",
                    "new_path": "src/Payment/view/frontend/web/template/checkout-button.html",
                    "diff": "<!-- ko template: getTemplate() --><!-- /ko -->\n<!--/ko-->\n-<!-- ko if: (isPwaVisible) -->\n- <!-- ko ifnot: (isAmazonAccountLoggedIn) -->\n- <div class=\"amazon-button-container\">\n+<div class=\"amazon-button-container\" data-bind=\"visible: !isAmazonAccountLoggedIn() && isPwaVisible()\">\n<div class=\"amazon-button-container__cell\">\n<div id=\"PayWithAmazon\" class=\"login-with-amazon\" data-bind=\"mageInit: {'amazonButton':{'buttonType': 'PwA'}}\"></div>\n</div>\n</div>\n</div>\n</div>\n- <!--/ko-->\n-<!--/ko-->\n<!-- ko foreach: getRegion('after-amazon-button') -->\n<!-- ko template: getTemplate() --><!-- /ko -->\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/template/form/element/email.html",
                    "new_path": "src/Payment/view/frontend/web/template/form/element/email.html",
                    "diff": "* permissions and limitations under the License.\n*/\n-->\n-<!-- ko foreach: getRegion('before-login-form') -->\n+<!-- ko foreach: getRegion('amazon-button-region') -->\n<!-- ko template: getTemplate() --><!-- /ko -->\n<!-- /ko -->\n<!-- ko ifnot: isCustomerLoggedIn() -->\n+<!-- ko foreach: getRegion('before-login-form') -->\n+<!-- ko template: getTemplate() --><!-- /ko -->\n+<!-- /ko -->\n<form class=\"form form-login\" data-role=\"email-with-possible-login\"\ndata-bind=\"submit:login\"\nmethod=\"post\">\n"
                },
                {
                    "change_type": "ADD",
                    "old_path": null,
                    "new_path": "src/Payment/view/frontend/web/template/shipping-address/inline-form.html",
                    "diff": "+<div data-bind=\"afterRender: manipulateInlineForm\"></div>\n"
                }
            ]
        }
    },
    "Row_96": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Removed direct database queries"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Removed direct database queries"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -354,35 +354,30 @@ class SimplePath\n*/\npublic function getFormParams()\n{\n- // Retrieve store URLs from config table\n- $baseUrls = array();\n- $db = $this->connection->getConnection();\n- $select = $db->select()\n- ->from(\n- ['c' => 'core_config_data']\n- )\n- ->where('c.path IN (?)', array('web/unsecure/base_url', 'web/secure/base_url'));\n-\n- foreach ($db->fetchAll($select) as $row) {\n- $url = parse_url($row['value']);\n-\n- if (isset($url['host'])){\n- $baseUrls[] = 'https://' . $url['host'];\n- }\n- }\n- $baseUrls = array_unique($baseUrls);\n-\n- // Get redirect URLs\n+ // Get redirect URLs and store URL-s\n$urlArray = array();\n+ $baseUrls = array();\n$stores = $this->storeManager->getStores();\nforeach ($stores as $store) {\n- $baseUrl = $store->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\n- if ($baseUrl) {\n+ // Get secure base URL\n+ if ($baseUrl = $store->getBaseUrl(UrlInterface::URL_TYPE_WEB, true)) {\n$value = $baseUrl . 'amazon/login/processAuthHash/';\n$urlArray[] = $value;\n+ $url = parse_url($baseUrl);\n+ if (isset($url['host'])){\n+ $baseUrls[] = 'https://' . $url['host'];\n+ }\n+ }\n+ // Get unsecure base URL\n+ if ($baseUrl = $store->getBaseUrl(UrlInterface::URL_TYPE_WEB, false)) {\n+ $url = parse_url($baseUrl);\n+ if (isset($url['host'])){\n+ $baseUrls[] = 'https://' . $url['host'];\n+ }\n}\n}\n$urlArray = array_unique($urlArray);\n+ $baseUrls = array_unique($baseUrls);\n$version = $this->moduleList->getOne('Amazon_Core');\n$coreVersion = ($version && isset($version['setup_version'])) ? $version['setup_version'] : '--';\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -354,35 +354,30 @@ class SimplePath\n*/\npublic function getFormParams()\n{\n- // Retrieve store URLs from config table\n- $baseUrls = array();\n- $db = $this->connection->getConnection();\n- $select = $db->select()\n- ->from(\n- ['c' => 'core_config_data']\n- )\n- ->where('c.path IN (?)', array('web/unsecure/base_url', 'web/secure/base_url'));\n-\n- foreach ($db->fetchAll($select) as $row) {\n- $url = parse_url($row['value']);\n-\n- if (isset($url['host'])){\n- $baseUrls[] = 'https://' . $url['host'];\n- }\n- }\n- $baseUrls = array_unique($baseUrls);\n-\n- // Get redirect URLs\n+ // Get redirect URLs and store URL-s\n$urlArray = array();\n+ $baseUrls = array();\n$stores = $this->storeManager->getStores();\nforeach ($stores as $store) {\n- $baseUrl = $store->getBaseUrl(UrlInterface::URL_TYPE_WEB, true);\n- if ($baseUrl) {\n+ // Get secure base URL\n+ if ($baseUrl = $store->getBaseUrl(UrlInterface::URL_TYPE_WEB, true)) {\n$value = $baseUrl . 'amazon/login/processAuthHash/';\n$urlArray[] = $value;\n+ $url = parse_url($baseUrl);\n+ if (isset($url['host'])){\n+ $baseUrls[] = 'https://' . $url['host'];\n+ }\n+ }\n+ // Get unsecure base URL\n+ if ($baseUrl = $store->getBaseUrl(UrlInterface::URL_TYPE_WEB, false)) {\n+ $url = parse_url($baseUrl);\n+ if (isset($url['host'])){\n+ $baseUrls[] = 'https://' . $url['host'];\n+ }\n}\n}\n$urlArray = array_unique($urlArray);\n+ $baseUrls = array_unique($baseUrls);\n$version = $this->moduleList->getOne('Amazon_Core');\n$coreVersion = ($version && isset($version['setup_version'])) ? $version['setup_version'] : '--';\n"
                }
            ]
        }
    },
    "Row_97": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Qualifying Exception per MEQP feedback."
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Qualifying Exception per MEQP feedback."
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Controller/Simplepath/Listener.php",
                    "new_path": "src/Core/Controller/Simplepath/Listener.php",
                    "diff": "@@ -58,7 +58,7 @@ class Listener extends \\Magento\\Framework\\App\\Action\\Action\n$return = array('result' => 'error', 'message' => 'payload parameter not found.');\n}\n- } catch (Exception $e) {\n+ } catch (\\Exception $e) {\n$return = array('result' => 'error', 'message' => $e->getMessage());\n}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -240,7 +240,7 @@ class SimplePath\n$response = $client->request();\n$amazonPublickey = urldecode($response->getBody());\n- } catch (Exception $e) {\n+ } catch (\\Exception $e) {\nthrow new \\Magento\\Framework\\Validator\\Exception(__($e->getMessage()));\n}\n@@ -283,7 +283,7 @@ class SimplePath\nthrow new \\Magento\\Framework\\Validator\\Exception(\"Unable to verify signature for JSON payload.\");\n}\n- } catch (Exception $e) {\n+ } catch (\\Exception $e) {\n$this->logger->critical($e);\n$this->messageManager->addError(__($e->getMessage()));\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Controller/Simplepath/Listener.php",
                    "new_path": "src/Core/Controller/Simplepath/Listener.php",
                    "diff": "@@ -58,7 +58,7 @@ class Listener extends \\Magento\\Framework\\App\\Action\\Action\n$return = array('result' => 'error', 'message' => 'payload parameter not found.');\n}\n- } catch (Exception $e) {\n+ } catch (\\Exception $e) {\n$return = array('result' => 'error', 'message' => $e->getMessage());\n}\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Core/Model/Config/SimplePath.php",
                    "new_path": "src/Core/Model/Config/SimplePath.php",
                    "diff": "@@ -240,7 +240,7 @@ class SimplePath\n$response = $client->request();\n$amazonPublickey = urldecode($response->getBody());\n- } catch (Exception $e) {\n+ } catch (\\Exception $e) {\nthrow new \\Magento\\Framework\\Validator\\Exception(__($e->getMessage()));\n}\n@@ -283,7 +283,7 @@ class SimplePath\nthrow new \\Magento\\Framework\\Validator\\Exception(\"Unable to verify signature for JSON payload.\");\n}\n- } catch (Exception $e) {\n+ } catch (\\Exception $e) {\n$this->logger->critical($e);\n$this->messageManager->addError(__($e->getMessage()));\n"
                }
            ]
        }
    },
    "Row_98": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Set correct order status in CompleteOrderStatus\nPR for the issue"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Set correct order status in CompleteOrderStatus\nPR for the issue"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Observer/CompleteOrderStatus.php",
                    "new_path": "src/Payment/Observer/CompleteOrderStatus.php",
                    "diff": "@@ -45,6 +45,7 @@ class CompleteOrderStatus implements ObserverInterface\n$newOrderStatus = $this->coreHelper->getNewOrderStatus();\nif ($newOrderStatus\n+ && $order->isObjectNew()\n&& Amazon::PAYMENT_METHOD_CODE == $payment->getMethod()\n&& $order->getState() == Order::STATE_PROCESSING\n) {\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/Observer/CompleteOrderStatus.php",
                    "new_path": "src/Payment/Observer/CompleteOrderStatus.php",
                    "diff": "@@ -45,6 +45,7 @@ class CompleteOrderStatus implements ObserverInterface\n$newOrderStatus = $this->coreHelper->getNewOrderStatus();\nif ($newOrderStatus\n+ && $order->isObjectNew()\n&& Amazon::PAYMENT_METHOD_CODE == $payment->getMethod()\n&& $order->getState() == Order::STATE_PROCESSING\n) {\n"
                }
            ]
        }
    },
    "Row_99": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Move the afterRender handler futher down the hierachy to prevent it being loaded too soon"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Move the afterRender handler futher down the hierachy to prevent it being loaded too soon"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/layout/checkout_index_index.xml",
                    "new_path": "src/Payment/view/frontend/layout/checkout_index_index.xml",
                    "diff": "<item name=\"shippingAddress\" xsi:type=\"array\">\n<item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/shipping</item>\n<item name=\"children\" xsi:type=\"array\">\n- <item name=\"before-shipping-method-form\" xsi:type=\"array\">\n+ <item name=\"shipping-address-fieldset\" xsi:type=\"array\">\n<item name=\"children\" xsi:type=\"array\">\n<item name=\"inline-form-manipulator\" xsi:type=\"array\">\n<item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/shipping-address/inline-form</item>\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/layout/checkout_index_index.xml",
                    "new_path": "src/Payment/view/frontend/layout/checkout_index_index.xml",
                    "diff": "<item name=\"shippingAddress\" xsi:type=\"array\">\n<item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/shipping</item>\n<item name=\"children\" xsi:type=\"array\">\n- <item name=\"before-shipping-method-form\" xsi:type=\"array\">\n+ <item name=\"shipping-address-fieldset\" xsi:type=\"array\">\n<item name=\"children\" xsi:type=\"array\">\n<item name=\"inline-form-manipulator\" xsi:type=\"array\">\n<item name=\"component\" xsi:type=\"string\">Amazon_Payment/js/view/shipping-address/inline-form</item>\n"
                }
            ]
        }
    },
    "Row_100": {
        "prompt_1": {
            "message_query": "What file is changed based on this message?",
            "message": "Made sure that all phtml templates use unique id for PwA/LwA button"
        },
        "prompt_2": {
            "message_change_query": "Given this message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "message": "Made sure that all phtml templates use unique id for PwA/LwA button"
        },
        "prompt_3": {
            "mods_query": "What file is changed based on this mods?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Login/view/frontend/templates/login.phtml",
                    "new_path": "src/Login/view/frontend/templates/login.phtml",
                    "diff": "* permissions and limitations under the License.\n*/\n?>\n+<?php /** @var \\Amazon\\Login\\Block\\Login $block */?>\n<div class=\"block block-amazon-login\">\n<div class=\"block-title\">\n<strong id=\"block-amazon-login-heading\" role=\"heading\" aria-level=\"2\"><?php /* @escapeNotVerified */ echo __('Login with Amazon') ?></strong>\n<div class=\"primary\">\n<div class=\"amazon-button-container\">\n<div class=\"amazon-button-container__cell\">\n- <div id=\"LoginWithAmazon\" class=\"login-with-amazon\" data-mage-init='{\"amazonButton\": {\"buttonType\": \"LwA\"}}'></div>\n+ <div id=\"LoginWithAmazon-<?php echo $block->getJsId() ?>\" class=\"login-with-amazon\" data-mage-init='{\"amazonButton\": {\"buttonType\": \"LwA\"}}'></div>\n</div>\n<div class=\"amazon-button-container__cell\">\n<div class=\"field-tooltip toggle\">\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/templates/minicart-button.phtml",
                    "new_path": "src/Payment/view/frontend/templates/minicart-button.phtml",
                    "diff": "@@ -33,7 +33,7 @@ $tooltipConfig = [\n<div id=\"minicart-amazon-pay-button\" class=\"amazon-minicart-container\">\n<div class=\"amazon-button-container\">\n<div class=\"amazon-button-container__cell\">\n- <div id=\"PayWithAmazon\" class=\"login-with-amazon\" data-mage-init='<?php /* @noEscape */ echo json_encode($config); ?>'></div>\n+ <div id=\"PayWithAmazon-<?php echo $block->getParentBlock()->getJsId() ?>\" class=\"login-with-amazon\" data-mage-init='<?php /* @noEscape */ echo json_encode($config); ?>'></div>\n</div>\n<div class=\"amazon-button-container__cell\">\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/templates/payment-link-product-page.phtml",
                    "new_path": "src/Payment/view/frontend/templates/payment-link-product-page.phtml",
                    "diff": "* permissions and limitations under the License.\n*/\n?>\n+<?php /** @var \\Amazon\\Payment\\Block\\ProductPagePaymentLink $block */ ?>\n<div class=\"amazon-button-container centered-button\">\n<div class=\"amazon-button-container__cell\">\n- <a href=\"javascript:;\" class=\"amazon-addtoCart\" id=\"amazon-addtoCart\" data-mage-init='{\"amazonProductAdd\": {}}'></a>\n- <div id=\"LoginWithAmazon\" class=\"login-with-amazon\" data-mage-init='{\"amazonButton\": {\"buttonType\": \"PwA\"}}'></div>\n+ <a href=\"javascript:;\" class=\"amazon-addtoCart\" id=\"amazon-addtoCart-<?php echo $block->getJsId() ?>\" data-mage-init='{\"amazonProductAdd\": {}}'></a>\n+ <div id=\"LoginWithAmazon-<?php echo $block->getJsId() ?>\" class=\"login-with-amazon\" data-mage-init='{\"amazonButton\": {\"buttonType\": \"PwA\"}}'></div>\n</div>\n<div class=\"amazon-button-container__cell\">\n<div class=\"field-tooltip toggle\">\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/templates/payment-link.phtml",
                    "new_path": "src/Payment/view/frontend/templates/payment-link.phtml",
                    "diff": "?>\n<div class=\"amazon-button-container centered-button\">\n<div class=\"amazon-button-container__cell\">\n- <div id=\"PayWithAmazon\" class=\"login-with-amazon\" data-mage-init='{\"amazonButton\": {\"buttonType\": \"PwA\"}}'></div>\n+ <div id=\"PayWithAmazon-<?php echo $block->getJsId() ?>\" class=\"login-with-amazon\" data-mage-init='{\"amazonButton\": {\"buttonType\": \"PwA\"}}'></div>\n</div>\n<div class=\"amazon-button-container__cell\">\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/amazon-product-add.js",
                    "new_path": "src/Payment/view/frontend/web/js/amazon-product-add.js",
                    "diff": "@@ -48,7 +48,7 @@ define([\n}, this);\n//setup binds for click\n- $('#amazon-addtoCart').on('click', function (e) {\n+ $('.amazon-addtoCart').on('click', function (e) {\nif ($(_this.options.addToCartForm).valid()) {\naddedViaAmazon = true;\n$(_this.options.addToCartForm).submit();\n"
                }
            ]
        },
        "prompt_4": {
            "mods_change_query": "Given this mods message, what type of change occured, ADD, DELETE, or, MODIFY?",
            "mods": [
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Login/view/frontend/templates/login.phtml",
                    "new_path": "src/Login/view/frontend/templates/login.phtml",
                    "diff": "* permissions and limitations under the License.\n*/\n?>\n+<?php /** @var \\Amazon\\Login\\Block\\Login $block */?>\n<div class=\"block block-amazon-login\">\n<div class=\"block-title\">\n<strong id=\"block-amazon-login-heading\" role=\"heading\" aria-level=\"2\"><?php /* @escapeNotVerified */ echo __('Login with Amazon') ?></strong>\n<div class=\"primary\">\n<div class=\"amazon-button-container\">\n<div class=\"amazon-button-container__cell\">\n- <div id=\"LoginWithAmazon\" class=\"login-with-amazon\" data-mage-init='{\"amazonButton\": {\"buttonType\": \"LwA\"}}'></div>\n+ <div id=\"LoginWithAmazon-<?php echo $block->getJsId() ?>\" class=\"login-with-amazon\" data-mage-init='{\"amazonButton\": {\"buttonType\": \"LwA\"}}'></div>\n</div>\n<div class=\"amazon-button-container__cell\">\n<div class=\"field-tooltip toggle\">\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/templates/minicart-button.phtml",
                    "new_path": "src/Payment/view/frontend/templates/minicart-button.phtml",
                    "diff": "@@ -33,7 +33,7 @@ $tooltipConfig = [\n<div id=\"minicart-amazon-pay-button\" class=\"amazon-minicart-container\">\n<div class=\"amazon-button-container\">\n<div class=\"amazon-button-container__cell\">\n- <div id=\"PayWithAmazon\" class=\"login-with-amazon\" data-mage-init='<?php /* @noEscape */ echo json_encode($config); ?>'></div>\n+ <div id=\"PayWithAmazon-<?php echo $block->getParentBlock()->getJsId() ?>\" class=\"login-with-amazon\" data-mage-init='<?php /* @noEscape */ echo json_encode($config); ?>'></div>\n</div>\n<div class=\"amazon-button-container__cell\">\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/templates/payment-link-product-page.phtml",
                    "new_path": "src/Payment/view/frontend/templates/payment-link-product-page.phtml",
                    "diff": "* permissions and limitations under the License.\n*/\n?>\n+<?php /** @var \\Amazon\\Payment\\Block\\ProductPagePaymentLink $block */ ?>\n<div class=\"amazon-button-container centered-button\">\n<div class=\"amazon-button-container__cell\">\n- <a href=\"javascript:;\" class=\"amazon-addtoCart\" id=\"amazon-addtoCart\" data-mage-init='{\"amazonProductAdd\": {}}'></a>\n- <div id=\"LoginWithAmazon\" class=\"login-with-amazon\" data-mage-init='{\"amazonButton\": {\"buttonType\": \"PwA\"}}'></div>\n+ <a href=\"javascript:;\" class=\"amazon-addtoCart\" id=\"amazon-addtoCart-<?php echo $block->getJsId() ?>\" data-mage-init='{\"amazonProductAdd\": {}}'></a>\n+ <div id=\"LoginWithAmazon-<?php echo $block->getJsId() ?>\" class=\"login-with-amazon\" data-mage-init='{\"amazonButton\": {\"buttonType\": \"PwA\"}}'></div>\n</div>\n<div class=\"amazon-button-container__cell\">\n<div class=\"field-tooltip toggle\">\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/templates/payment-link.phtml",
                    "new_path": "src/Payment/view/frontend/templates/payment-link.phtml",
                    "diff": "?>\n<div class=\"amazon-button-container centered-button\">\n<div class=\"amazon-button-container__cell\">\n- <div id=\"PayWithAmazon\" class=\"login-with-amazon\" data-mage-init='{\"amazonButton\": {\"buttonType\": \"PwA\"}}'></div>\n+ <div id=\"PayWithAmazon-<?php echo $block->getJsId() ?>\" class=\"login-with-amazon\" data-mage-init='{\"amazonButton\": {\"buttonType\": \"PwA\"}}'></div>\n</div>\n<div class=\"amazon-button-container__cell\">\n"
                },
                {
                    "change_type": "MODIFY",
                    "old_path": "src/Payment/view/frontend/web/js/amazon-product-add.js",
                    "new_path": "src/Payment/view/frontend/web/js/amazon-product-add.js",
                    "diff": "@@ -48,7 +48,7 @@ define([\n}, this);\n//setup binds for click\n- $('#amazon-addtoCart').on('click', function (e) {\n+ $('.amazon-addtoCart').on('click', function (e) {\nif ($(_this.options.addToCartForm).valid()) {\naddedViaAmazon = true;\n$(_this.options.addToCartForm).submit();\n"
                }
            ]
        }
    }
}